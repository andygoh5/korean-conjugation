{"mappings":"A,S,E,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,S,E,C,E,O,G,E,U,C,E,O,C,C,C,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,A,C,E,E,Q,A,E,Q,S,C,C,C,ECWO,SAAS,EAAO,CAAS,EAC5B,IAAI,CAAC,SAAS,CAAG,GAAa,GAC9B,IAAI,CAAC,OAAO,CAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CACpC,IAAI,CAAC,cAAc,CAAG,CAAA,EACtB,IAAI,CAAC,gBAAgB,CAAG,KAExB,IAAI,CAAC,MAAM,CAAG,WACV,IAAI,EAAS,OAAO,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAE,WAMjD,OALI,SAAS,CAAC,EAAE,EAAI,IAAI,CAAC,OAAO,CAAG,IAE/B,AADA,CAAA,EAAS,IAAI,EAAO,EAApB,EACO,gBAAgB,CAAG,IAAI,CAAC,gBAAgB,CAC/C,EAAO,cAAc,CAAG,IAAI,CAAC,cAAc,EAExC,CACX,CACJ,C,E,E,O,C,S,I,G,E,E,O,C,U,I,GAQA,EAAO,SAAS,CAAG,IAAI,OAGvB,EAAO,SAAS,CAAC,QAAQ,CAAG,EAAO,SAAS,CAAC,OAAO,CAAG,WACnD,OAAO,IAAI,CAAC,SAAS,AACzB,EAGO,IAAI,EAAU,CAAC,CAEtB,CAAA,EAAQ,MAAM,CAAG,EACjB,EAAQ,UAAU,CAAG,SAAU,CAAS,UAChC,CAAA,EAAU,UAAU,CAAC,IAAM,OAC3B,AAA2B,OAA3B,EAAU,UAAU,CAAC,EAAqB,CAIlD,EAGA,EAAQ,IAAI,CAAG,SAAU,CAAS,EAC9B,OAAO,OAAO,YAAY,CAAE,KAAK,KAAK,CAAC,EAAU,UAAU,CAAC,GAAK,OAAS,IAAO,KACrF,EACA,EAAQ,KAAK,CAAG,SAAU,CAAS,EAC/B,IACI,EADA,EAAo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AAM,CAAA,EAAM,EAAK,CAAA,EAAM,IAAO,CAAA,EAAM,IAAO,CAAA,EAAM,GAAM,CAAA,EAAM,GAAM,CAAA,EAAM,GAAM,CAAA,EAAM,GAAM,CAAA,EAAM,IAAO,CAAA,EAAM,IAAO,CAAA,EAAM,IAAO,CAAA,EAAM,GAAM,CAAA,EAAM,GAAM,CAAA,EAAM,KAAQ,CAAA,EAAM,GAAM,CAAA,EAAM,IAAO,CAAA,EAAM,IAAO,CAAA,EAAM,GAAM,CAAA,EAAM,MAAO,CAAA,EAAM,IAAO,CAAA,EAAM,IAAO,CAAA,EAAM,IAAO,CAAA,EAAM,GAAM,CAAA,EAAM,IAAO,CAAA,EAAM,IAAO,CAAA,EAAM,IAAO,CAAA,EAAM,GAAM,CAAA,EAAM,GAAM,CAAA,EAAM,IAAO,CAAA,EAAM,IAAO,CAAA,EAAM,EAAK,CAAA,EAAM,GAAM,CAAA,EAAM,EAAK,CAAA,EAAM,GAAM,CAAA,EAAM,GAAM,CAAA,EAAM,GAAM,CAAA,EAAM,IAAO,CAAA,EAAM,EAAK,CAAA,EAAM,IAAO,CAAA,EAAM,GAAM,CAAA,EAAM,IAAO,CAAA,EAAM,GAAM,CAAA,EAAM,GAAM,CAAA,EAAM,GAAM,CAAA,EAAM,IAAO,CAAA,EAAM,IAAO,CAAA,EAAM,GAAM,CAAA,EAAM,IAAO,CAAA,EAAM,IAAO,CAAA,EAAM,IAAO,CAAA,EAAM,GAAM,CAAA,EAAM,GAAM,CAAA,EAAM,IAAO,CAAA,EAAM,EAAK,CAAA,EAAM,GAAM,CAAA,EAAM,GAAM,CAAA,EAAM,IAAO,CAAA,EAAM,GAAM,CAAA,EAAM,GAAM,CAAA,EAAM,GAAM,CAAA,EAAM,GAAM,CAAA,EAAM,GAAM,CAAA,EAAM,GAAM,CAAA,EAAM,GAAM,CAAA,EAAM,GAAM,CAAA,EAAM,GAAM,CAAA,EAAM,GAAM,CAAA,EAAM,GAAM,CAAA,EAAM,IAAO,CAAA,EAAM,IAAO,CAAA,EAAM,GAAM,CAAA,EAAM,GAAM,CAAA,EAAM,GAAM,CAAA,EAAM,GAAM,CAAA,EAAM,IAAO,CAAA,EAAM,GAAM,CAAA,EAAM,GAAM,CAAA,EAAM,IAAO,CAAA,EAAM,KAAQ,CAAA,EAAM,IAAO,CAAA,EAAM,G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AAM,EAAK,CAAA,EAAM,IAAO,CAAA,EAAM,GAAM,CAAA,EAAM,GAAM,CAAA,EAAM,GAAM,CAAA,EAAM,IAAO,CAAA,EAAM,GAAM,CAAA,EAAM,GAAM,CAAA,EAAM,IAAO,CAAA,EAAM,GAAM,CAAA,EAAM,EAAK,CAAA,EAAM,IAAO,CAAA,EAAM,GAAM,CAAA,EAAM,IAAO,CAAA,EAAM,GAAM,CAAA,EAAM,IAAO,CAAA,EAAM,GAAM,CAAA,EAAM,GAAM,CAAA,EAAM,IAAO,CAAA,EAAM,IAAO,CAAA,EAAM,GAAM,CAAA,EAAM,IAAO,CAAA,EAAM,GAAM,CAAA,EAAM,IAAO,CAAA,EAAM,IAAO,CAAA,EAAM,IAAO,CAAA,EAAM,EAAK,CAAA,EAAM,GAAM,CAAA,EAAM,GAAM,CAAA,EAAM,GAAM,CAAA,EAAM,IAAO,CAAA,EAAM,GAAM,CAAA,EAAM,IAAO,CAAA,EAAM,GAAM,CAAA,EAAM,GAAM,CAAA,EAAM,EAAK,CAAA,EAAM,GAAM,CAAA,EAAM,IAAO,CAAA,EAAM,IAAO,CAAA,EAAM,IAAO,CAAA,EAAM,GAAM,CAAA,EAAM,IAAO,CAAA,EAAM,KAAQ,CAAA,EAAM,IAAO,CAAA,EAAM,GAAM,CAAA,EAAM,GAAM,CAAA,EAAM,GAAM,CAAA,EAAM,EAAK,CAAA,EAAM,GAAM,CAAA,EAAM,IAAO,CAAA,EAAM,GAAM,CAAA,EAAM,KAAQ,CAAA,EAAM,IAAO,CAAA,EAAM,EAAK,CAAA,EAAM,GAAM,CAAA,EAAM,GAAM,CAAA,EAAM,IAAO,CAAA,EAAM,GAAM,CAAA,EAAM,GAAM,CAAA,EAAM,GAAM,CAAA,EAAM,IAAO,CAAA,EAAM,GAAM,CAAA,EAAM,IAAO,CAAA,EAAM,IAAO,CAAA,EAAM,IAAO,CAAA,EAAM,IAAO,CAAA,EAAM,IAAO,CAAA,EAAM,GAAM,CAAA,EAAM,IAAO,CAAA,EAAM,IAAO,CAAA,EAAM,GAAM,CAAA,EAAM,GAAM,CAAA,EAAM,IAAO,CAAA,EAAM,EAAK,CAAA,EAAM,IAAO,CAAA,EAAM,IAAO,CAAA,EAAM,GAAM,CAAA,EAAM,IAAO,CAAA,EAAM,EAAK,CAAA,EAAM,IAAO,CAAA,EAAM,IAAO,CAAA,EAAM,IAAO,CAAA,EAAM,IAAO,CAAA,EAAM,GAAM,CAAA,EAAM,IAAO,CAAA,EAAM,EAAK,CAAA,EAAM,IAAO,CAAA,EAAM,GAAM,CAAA,EAAM,IAAO,CAAA,EAAM,GAAM,CAAA,EAAM,IAAO,CAAA,EAAM,IAAO,CAAA,EAAM,GAAM,CAAA,EAAM,IAAO,CAAA,EAAM,GAAM,CAAA,EAAM,IAAO,CAAA,EAAM,GAAM,CAAA,EAAM,IAAO,CAAA,EAAM,IAAO,CAAA,CAAI,EAEhxC,EAAW,mBAAmB,CAAG,CAAC,IAAO,CAAA,EAAM,GAAM,CAAA,EAAM,IAAO,CAAA,EAAM,IAAO,CAAA,EAAM,IAAO,CAAA,EAAM,IAAO,CAAA,EAAM,GAAM,CAAA,CAAI,EAEzH,EAAW,eAAe,CAAG,CAAC,EAE9B,EAAW,gBAAgB,CAAG,SAAS,CAAU,EAC7C,OAAO,EAAW,KAAK,CAAC,KAAK,OAAO,EAAE,CAAC,EAAE,AAC7C,EAEA,EAAW,cAAc,CAAG,SAAS,CAAU,CAAE,CAAO,QACpD,CAAI,GAGG,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,EAAQ,KAAK,CAAC,EAAW,MAAM,CAAC,EAAW,MAAM,CAAC,GAAI,IAAK,IAAK,MAChE,CAAE,CAAA,EAAW,gBAAgB,CAAC,MAAe,EAAW,eAAc,AAAd,CACnE,EAGA,EAAW,cAAc,CAAG,SAAS,CAAU,CAAE,CAAO,QACpD,CAAI,GAGG,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,EAAQ,KAAK,CAAC,EAAW,MAAM,CAAC,EAAW,MAAM,CAAC,GAAI,IAAK,IAAK,MAChE,CAAE,CAAA,EAAW,gBAAgB,CAAC,MAAe,EAAW,eAAc,AAAd,CACnE,EAEA,EAAW,kBAAkB,CAAG,SAAS,CAAU,CAAE,CAAO,QACxD,CAAI,GAGG,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,EAAQ,KAAK,CAAC,EAAW,MAAM,CAAC,EAAW,MAAM,CAAC,GAAI,IAAK,IAAK,OAChE,CAAE,CAAA,EAAW,gBAAgB,CAAC,MAAe,EAAW,mBAAkB,AAAlB,CACnE,EAEA,EAAW,cAAc,CAAG,SAAS,CAAU,CAAE,CAAO,QACpD,CAAI,GAGI,CAAA,AAA2D,KAA3D,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,EAAQ,OAAO,CAAC,EAAW,MAAM,CAAC,EAAW,MAAM,CAAC,KACrD,AAA0C,KAA1C,EAAW,MAAM,CAAC,EAAW,MAAM,CAAC,EAAM,GAC1C,CAAE,CAAA,EAAW,gBAAgB,CAAC,MAAe,EAAW,eAAe,AAAf,CACnE,EAEA,EAAW,cAAc,CAAG,SAAS,CAAU,CAAE,CAAO,QACpD,CAAI,GAGG,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,EAAQ,KAAK,CAAC,EAAW,MAAM,CAAC,EAAW,MAAM,CAAC,GAAI,IAAK,IAAK,MAChE,CAAE,CAAA,EAAW,gBAAgB,CAAC,MAAe,EAAW,eAAc,AAAd,CACnE,EAEA,EAAW,cAAc,CAAG,SAAS,CAAU,CAAE,CAAO,QACpD,CAAI,GAGG,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,EAAQ,KAAK,CAAC,EAAW,MAAM,CAAC,EAAW,MAAM,CAAC,GAAI,IAAK,IAAK,MAChE,CAAE,CAAA,EAAW,gBAAgB,CAAC,MAAe,EAAW,eAAc,AAAd,CACnE,EAEA,EAAW,UAAU,CAAG,CACpB,4BAA6B,EAAW,cAAc,CACtD,4BAA6B,EAAW,cAAc,CACtD,4BAA6B,EAAW,kBAAkB,CAC1D,4BAA6B,EAAW,cAAc,CACtD,4BAA6B,EAAW,cAAc,CACtD,4BAA6B,EAAW,cAAc,AAC1D,EAEA,EAAW,SAAS,CAAG,SAAS,CAAU,CAAE,CAAO,EAC/C,GAAI,EACA,MAAO,eAEX,IAAK,kBAAkB,EAAW,UAAU,CAExC,GAAI,AADJ,CAAA,KAAO,EAAW,UAAU,CAAC,eAAe,AAAf,EACpB,EAAW,IAAI,CAAC,IACrB,OAAO,eAGf,MAAO,cACX,EAEA,EAAW,IAAI,CAAG,SAAS,CAAU,CAAE,CAAO,QAC1C,AAAI,AAA0C,KAA1C,EAAW,MAAM,CAAC,EAAW,MAAM,CAAC,GAC7B,EAAW,SAAS,CAAC,EAAG,EAAW,MAAM,CAAC,GAE1C,CAEf,EAEA,EAAW,KAAK,CAAG,SAAS,CAAU,CAAE,CAAO,EAG3C,GAAI,AAAc,MAFlB,CAAA,EAAa,EAAW,IAAI,CAAC,EAAY,EAAzC,EAKI,MADA,AADA,CAAA,EAAa,IAAI,AAAA,EAAA,OAAM,CAAE,MAAM,CAAC,KAAhC,EACW,cAAc,CAAG,CAAA,EACrB,EAEX,GAAI,AAAc,KAAd,EACA,MAAO,IAEX,GAAI,AAAc,KAAd,EACA,MAAO,IAEX,IAAI,EAAiB,EACrB,GAAI,EAAW,cAAc,CAAC,EAAY,GACtC,EAAiB,EAAW,KAAK,CAAC,EAAW,SAAS,CAAC,EAAG,EAAW,MAAM,CAAC,GAC1C,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,EAAQ,IAAI,CAAC,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,EAAQ,IAAI,CAAC,EAAW,MAAM,CAAC,EAAW,MAAM,CAAC,IACjD,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,EAAQ,KAAK,CAAC,EAAW,MAAM,CAAC,EAAW,MAAM,CAAC,KAC/D,KAClC,EAAW,OAAO,CAAC,IAAI,CAAC,gBAAkB,EAAa,OAAS,EAAiB,UAC9E,GAAI,EAAW,cAAc,CAAC,EAAY,GAAU,CAEvD,IAAI,EAGA,EAFA,IAAc,CAAC,GAAM,CAAA,CAAI,GACzB,EAAW,MAAM,CAAC,EAAW,MAAM,CAAC,KAAM,CAAC,EAAK,CAAA,EAAM,EAAK,CAAA,CAAI,EACnD,IAEA,IAEhB,EAAiB,EAAW,KAAK,CAAC,EAAW,SAAS,CAAC,EAAG,EAAW,MAAM,CAAC,GAC1C,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,EAAQ,IAAI,CAAC,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,EAAQ,IAAI,CAAC,EAAW,MAAM,CAAC,EAAW,MAAM,CAAC,IACjD,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,EAAQ,KAAK,CAAC,EAAW,MAAM,CAAC,EAAW,MAAM,CAAC,KAC/D,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,EAAQ,IAAI,CAAC,IAAK,IACpD,EAAW,OAAO,CAAC,IAAI,CAAC,gBAAkB,EAAa,OAAS,EAAiB,IACrF,MAAW,EAAW,cAAc,CAAC,EAAY,IAK7C,AAJA,CAAA,EAAiB,IAAI,AAAA,EAAA,OAAM,CAAE,MAAM,CAAC,EAAW,SAAS,CAAC,EAAG,EAAW,MAAM,CAAC,GAC1C,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,EAAQ,IAAI,CAAC,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,EAAQ,IAAI,CAAC,EAAW,MAAM,CAAC,EAAW,MAAM,CAAC,IAC9D,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,EAAQ,KAAK,CAAC,EAAW,MAAM,CAAC,EAAW,MAAM,CAAC,IACjD,KAHrC,EAIe,gBAAgB,CAAG,IAClC,EAAW,OAAO,CAAC,IAAI,CAAC,gBAAkB,EAAa,OAAS,EAAiB,MAC1E,EAAW,cAAc,CAAC,EAAY,KAI7C,AAHA,CAAA,EAAiB,IAAI,AAAA,EAAA,OAAM,CAAE,MAAM,CAAC,EAAW,SAAS,CAAC,EAAG,EAAW,MAAM,CAAC,GAC1C,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,EAAQ,IAAI,CAAC,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,EAAQ,IAAI,CAAC,EAAW,MAAM,CAAC,EAAW,MAAM,CAAC,IAC9D,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,EAAQ,KAAK,CAAC,EAAW,MAAM,CAAC,EAAW,MAAM,CAAC,KAFtF,EAGe,cAAc,CAAG,CAAA,EAChC,EAAW,OAAO,CAAC,IAAI,CAAC,gBAAkB,EAAa,OAAS,EAAiB,uBAErF,OAAO,CACX,EAEA,EAAW,KAAK,CAAG,SAAS,CAAU,CAAE,CAAO,QAE3C,AAAI,AAAc,MADlB,CAAA,EAAa,EAAW,IAAI,CAAC,EAAY,EAAzC,EAEW,KAEP,AAAc,KAAd,EACO,IAEP,AAAc,KAAd,EACO,IAEP,EAAW,cAAc,CAAC,EAAY,GAC/B,EAAW,SAAS,CAAC,EAAG,EAAW,MAAM,CAAC,GAC1C,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,EAAQ,IAAI,CAAC,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,EAAQ,IAAI,CAAC,EAAW,MAAM,CAAC,EAAW,MAAM,CAAC,IACjD,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,EAAQ,KAAK,CAAC,EAAW,MAAM,CAAC,EAAW,MAAM,CAAC,KAC/D,EAAW,cAAc,CAAC,EAAY,GACtC,EAAW,SAAS,CAAC,EAAG,EAAW,MAAM,CAAC,GAC1C,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,EAAQ,IAAI,CAAC,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,EAAQ,IAAI,CAAC,EAAW,MAAM,CAAC,EAAW,MAAM,CAAC,IACjD,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,EAAQ,KAAK,CAAC,EAAW,MAAM,CAAC,EAAW,MAAM,CAAC,KAAO,IAEtE,EAAW,KAAK,CAAC,EAAY,EAE5C,EAEA,EAAW,gCAAgC,CAAG,SAAS,CAAU,CAAE,CAAO,CAAE,CAAW,EAEnF,GADA,EAAa,EAAW,KAAK,CAAC,EAAY,GACtC,CAAC,GAAiB,CAAA,AAAc,KAAd,GAAqB,CAAC,EAAW,cAAc,EAChD,AAAc,MAAd,CAAc,GACd,GAAW,AAA0C,KAA1C,EAAW,MAAM,CAAC,EAAW,MAAM,CAAC,GAEhE,OADA,EAAW,OAAO,CAAC,IAAI,CAAC,eACjB,EAAa,IAGxB,GAAI,GAAW,AAAc,MAAd,EACX,MAAO,KAEX,GAAI,EAAW,kBAAkB,CAAC,EAAY,GAAU,CACpD,IAAI,EAAW,EAAW,SAAS,CAAC,EAAG,EAAW,MAAM,CAAC,GAC9C,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,EAAQ,IAAI,CAAC,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,EAAQ,IAAI,CAAC,CAAU,CAAC,EAAW,MAAM,CAAC,EAAE,EAC5C,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,EAAQ,KAAK,CAAC,CAAU,CAAC,EAAW,MAAM,CAAC,EAAE,EAC7C,YACxB,AAAI,EAAW,SAAS,CAAC,EAAW,MAAM,CAAC,EAAG,EAAW,MAAM,IAAK,CAAC,GAAM,CAAA,EAAM,GAAM,CAAA,CAAI,GACvF,GAAsB,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,EAAQ,IAAI,CAAC,IACA,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,EAAQ,KAAK,CAAC,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,EAAQ,oBAAoB,CAAC,KAC9E,EAAW,OAAO,CAAC,IAAI,CAAC,oBAAsB,EAAa,OAAS,GAC7D,EAAa,MACb,AAA8E,KAA9E,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,EAAQ,oBAAoB,CAAC,EAAW,SAAS,CAAC,EAAG,EAAW,MAAM,CAAC,IAC9E,GAAY,IAIZ,GAAY,IACZ,EAAW,OAAO,CAAC,IAAI,CAAC,4BAA8B,EAAa,OAAS,EAAW,KAChF,EAEf,OAAO,AAAI,AAA0C,KAA1C,EAAW,MAAM,CAAC,EAAW,MAAM,CAAC,GACpC,EAAW,KAAK,CAAC,EAAY,KAC7B,EAAW,cAAc,CAAC,EAAY,GACtC,EAAW,KAAK,CAAC,EAAY,KAEjC,EAAW,KAAK,CAAC,EAAY,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,EAAQ,oBAAoB,CAAC,GACrE,EACA,EAAW,gCAAgC,CAAC,WAAW,CAAG,CAAA,EAE1D,EAAW,iCAAiC,CAAG,SAAS,CAAU,CAAE,CAAO,QAEvE,AAAK,AAAc,KADnB,CAAA,EAAa,EAAW,KAAK,CAAC,EAAY,EAA1C,GAC0B,CAAC,EAAW,cAAc,EAC/C,AAA0C,KAA1C,EAAW,MAAM,CAAC,EAAW,MAAM,CAAC,IAAa,GAClD,AAAc,MAAd,GACA,EAAW,OAAO,CAAC,IAAI,CAAC,gBACjB,EAAa,MAEjB,EAAW,KAAK,CAAC,EAAW,gCAAgC,CAAC,EAAY,EAAS,CAAA,GAAO,IACpG,EACA,EAAW,iCAAiC,CAAC,WAAW,CAAG,CAAA,EAE3D,EAAW,8BAA8B,CAAG,SAAS,CAAU,CAAE,CAAO,SACpE,AAAI,EAAW,cAAc,CAAC,EAAW,IAAI,CAAC,GAAa,GAChD,EAAW,yBAAyB,CAAC,EAAW,IAAI,CAAC,EAAY,GAAU,MAE/E,EAAW,KAAK,CAAC,EAAW,IAAI,CAAC,EAAY,GAAU,KAClE,EACA,EAAW,8BAA8B,CAAC,WAAW,CAAG,CAAA,EAExD,EAAW,+BAA+B,CAAG,SAAS,CAAU,CAAE,CAAO,SACrE,AAAI,EAAW,cAAc,CAAC,EAAW,IAAI,CAAC,GAAa,GAChD,EAAW,yBAAyB,CAAC,EAAW,IAAI,CAAC,EAAY,GAAU,OAE/E,EAAW,KAAK,CAAC,EAAW,IAAI,CAAC,EAAY,GAAU,MAClE,EACA,EAAW,+BAA+B,CAAC,WAAW,CAAG,CAAA,EAEzD,EAAW,SAAS,CAAG,SAAS,CAAU,CAAE,CAAO,EAC/C,IAAI,EAAK,EAAW,gCAAgC,CAAC,EAAY,EAAS,CAAA,SAC1E,AAAI,AAAoC,KAApC,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,EAAQ,oBAAoB,CAAC,GACtB,EAAW,KAAK,CAAC,EAAI,KAErB,EAAW,KAAK,CAAC,EAAI,IAEpC,EACA,EAAW,SAAS,CAAC,WAAW,CAAG,CAAA,EAEnC,EAAW,6BAA6B,CAAG,SAAS,CAAU,CAAE,CAAO,EACnE,OAAO,EAAW,KAAK,CAAC,EAAW,SAAS,CAAC,EAAY,GAAU,IACvE,EACA,EAAW,6BAA6B,CAAC,WAAW,CAAG,CAAA,EAEvD,EAAW,8BAA8B,CAAG,SAAS,CAAU,CAAE,CAAO,EACpE,OAAO,EAAW,KAAK,CAAC,EAAW,6BAA6B,CAAC,EAAY,GAAU,IAC3F,EACA,EAAW,8BAA8B,CAAC,WAAW,CAAG,CAAA,EAExD,EAAW,2BAA2B,CAAG,SAAS,CAAU,CAAE,CAAO,EACjE,OAAO,EAAW,KAAK,CAAC,EAAW,SAAS,CAAC,EAAY,GAAU,IACvE,EACA,EAAW,2BAA2B,CAAC,WAAW,CAAG,CAAA,EAErD,EAAW,4BAA4B,CAAG,SAAS,CAAU,CAAE,CAAO,EAClE,OAAO,EAAW,KAAK,CAAC,EAAW,SAAS,CAAC,EAAY,GAAU,MACvE,EACA,EAAW,4BAA4B,CAAC,WAAW,CAAG,CAAA,EAEtD,EAAW,WAAW,CAAG,SAAS,CAAU,CAAE,CAAO,SACjD,AAAI,EAAW,cAAc,CAAC,EAAW,IAAI,CAAC,EAAY,IAC/C,EAAW,yBAAyB,CAAC,EAAW,KAAK,CAAC,EAAY,GAAU,KAEhF,EAAW,KAAK,CAAC,EAAW,KAAK,CAAC,EAAY,GAAU,IACnE,EACA,EAAW,WAAW,CAAC,WAAW,CAAG,CAAA,EAErC,EAAW,+BAA+B,CAAG,SAAS,CAAU,CAAE,CAAO,EACrE,OAAO,EAAW,KAAK,CAAC,EAAW,WAAW,CAAC,EAAY,GAAU,MACzE,EACA,EAAW,+BAA+B,CAAC,WAAW,CAAG,CAAA,EAEzD,EAAW,gCAAgC,CAAG,SAAS,CAAU,CAAE,CAAO,EACtE,OAAO,EAAW,KAAK,CAAC,EAAW,WAAW,CAAC,EAAY,GAAU,OACzE,EACA,EAAW,gCAAgC,CAAC,WAAW,CAAG,CAAA,EAE1D,EAAW,6BAA6B,CAAG,SAAS,CAAU,CAAE,CAAO,EACnE,OAAO,EAAW,KAAK,CAAC,EAAW,WAAW,CAAC,EAAY,GAAU,MACzE,EACA,EAAW,6BAA6B,CAAC,WAAW,CAAG,CAAA,EAEvD,EAAW,8BAA8B,CAAG,SAAS,CAAU,CAAE,CAAO,EACpE,OAAO,EAAW,KAAK,CAAC,EAAW,WAAW,CAAC,EAAY,GAAU,OACzE,EACA,EAAW,8BAA8B,CAAC,WAAW,CAAG,CAAA,EAExD,EAAW,2CAA2C,CAAG,SAAS,CAAU,CAAE,CAAO,EACjF,OAAO,EAAW,KAAK,CAAC,EAAW,IAAI,CAAC,EAAY,GAAU,KAClE,EACA,EAAW,2CAA2C,CAAC,WAAW,CAAG,CAAA,EAErE,EAAW,4CAA4C,CAAG,SAAS,CAAU,CAAE,CAAO,EAClF,OAAO,EAAW,KAAK,CAAC,EAAW,IAAI,CAAC,EAAY,GAAU,MAClE,EACA,EAAW,4CAA4C,CAAC,WAAW,CAAG,CAAA,EAEtE,EAAW,yCAAyC,CAAG,SAAS,CAAU,CAAE,CAAO,EAC/E,OAAO,EAAW,KAAK,CAAC,EAAW,IAAI,CAAC,EAAY,GAAU,KAClE,EACA,EAAW,yCAAyC,CAAC,WAAW,CAAG,CAAA,EAEnE,EAAW,0CAA0C,CAAG,SAAS,CAAU,CAAE,CAAO,EAChF,OAAO,EAAW,KAAK,CAAC,EAAW,IAAI,CAAC,EAAY,GAAU,OAClE,EACA,EAAW,0CAA0C,CAAC,WAAW,CAAG,CAAA,EAEpE,EAAW,gCAAgC,CAAG,SAAS,CAAU,CAAE,CAAO,EACtE,OAAO,EAAW,KAAK,CAAC,EAAW,gCAAgC,CAAC,EAAY,GAAU,IAC9F,EACA,EAAW,gCAAgC,CAAC,WAAW,CAAG,CAAA,EAE1D,EAAW,iCAAiC,CAAG,SAAS,CAAU,CAAE,CAAO,EACvE,OAAO,EAAW,KAAK,CAAC,EAAW,iCAAiC,CAAC,EAAY,GAAU,IAC/F,EACA,EAAW,iCAAiC,CAAC,WAAW,CAAG,CAAA,EAE3D,EAAW,8BAA8B,CAAG,SAAS,CAAU,CAAE,CAAO,QAEpE,CADA,EAAa,EAAW,IAAI,CAAC,EAAY,GACrC,EAAW,cAAc,CAAC,EAAY,IAC/B,EAAW,MAAM,CAAC,EAAY,MAElC,EAAW,KAAK,CAAC,EAAY,KACxC,EACA,EAAW,8BAA8B,CAAC,WAAW,CAAG,CAAA,EAExD,EAAW,+BAA+B,CAAG,SAAS,CAAU,CAAE,CAAO,QAErE,CADA,EAAa,EAAW,IAAI,CAAC,EAAY,GACrC,EAAW,cAAc,CAAC,EAAY,IAC/B,EAAW,yBAAyB,CAAC,EAAY,QAErD,EAAW,KAAK,CAAC,EAAY,OACxC,EACA,EAAW,+BAA+B,CAAC,WAAW,CAAG,CAAA,EAEzD,EAAW,6BAA6B,CAAG,SAAS,CAAU,CAAE,CAAO,EACnE,OAAO,EAAW,6BAA6B,CAAC,EAAY,GAAW,GAC3E,EACA,EAAW,6BAA6B,CAAC,WAAW,CAAG,CAAA,EAEvD,EAAW,8BAA8B,CAAG,SAAS,CAAU,CAAE,CAAO,EACpE,OAAO,EAAW,KAAK,CAAC,EAAW,8BAA8B,CAAC,EAAY,GAAU,IAC5F,EACA,EAAW,8BAA8B,CAAC,WAAW,CAAG,CAAA,EAExD,EAAW,2BAA2B,CAAG,SAAS,CAAU,CAAE,CAAO,EACjE,OAAO,EAAW,KAAK,CAAC,EAAW,SAAS,CAAC,EAAY,GAAU,KACvE,EACA,EAAW,2BAA2B,CAAC,WAAW,CAAG,CAAA,EAErD,EAAW,4BAA4B,CAAG,SAAS,CAAU,CAAE,CAAO,EAClE,OAAO,EAAW,KAAK,CAAC,EAAW,SAAS,CAAC,EAAY,GAAU,OACvE,EACA,EAAW,4BAA4B,CAAC,WAAW,CAAG,CAAA,EAEtD,EAAW,+BAA+B,CAAG,SAAS,CAAU,CAAE,CAAO,EACrE,OAAO,EAAW,gCAAgC,CAAC,EAAY,EACnE,EACA,EAAW,+BAA+B,CAAC,WAAW,CAAG,CAAA,EAEzD,EAAW,gCAAgC,CAAG,SAAS,CAAU,CAAE,CAAO,SACtE,AAAI,EAAW,cAAc,CAAC,EAAW,IAAI,CAAC,EAAY,IAC/C,EAAW,MAAM,CAAC,EAAW,KAAK,CAAC,EAAY,GAAU,MAE7D,EAAW,KAAK,CAAC,EAAW,KAAK,CAAC,EAAY,GAAU,KACnE,EACA,EAAW,gCAAgC,CAAC,WAAW,CAAG,CAAA,EAE1D,EAAW,6BAA6B,CAAG,SAAS,CAAU,CAAE,CAAO,EACnE,OAAO,EAAW,KAAK,CAAC,EAAW,+BAA+B,CAAC,EAAY,GAAU,IAC7F,EACA,EAAW,6BAA6B,CAAC,WAAW,CAAG,CAAA,EAEvD,EAAW,8BAA8B,CAAG,SAAS,CAAU,CAAE,CAAO,SACpE,AAAI,EAAW,cAAc,CAAC,EAAW,IAAI,CAAC,EAAY,IAC/C,EAAW,MAAM,CAAC,EAAW,KAAK,CAAC,EAAY,GAAU,OAE7D,EAAW,KAAK,CAAC,EAAW,KAAK,CAAC,EAAY,GAAU,MACnE,EACA,EAAW,8BAA8B,CAAC,WAAW,CAAG,CAAA,EAExD,EAAW,gCAAgC,CAAG,SAAS,CAAU,CAAE,CAAO,EACtE,OAAO,EAAW,gCAAgC,CAAC,EAAY,EACnE,EACA,EAAW,gCAAgC,CAAC,WAAW,CAAG,CAAA,EAE1D,EAAW,iCAAiC,CAAG,SAAS,CAAU,CAAE,CAAO,EACvE,OAAO,EAAW,iCAAiC,CAAC,EAAY,EACpE,EACA,EAAW,iCAAiC,CAAC,WAAW,CAAG,CAAA,EAE3D,EAAW,8BAA8B,CAAG,SAAS,CAAU,CAAE,CAAO,EACpE,OAAO,EAAW,KAAK,CAAC,EAAW,IAAI,CAAC,EAAY,GAAU,IAClE,EACA,EAAW,8BAA8B,CAAC,WAAW,CAAG,CAAA,EAExD,EAAW,+BAA+B,CAAG,SAAS,CAAU,CAAE,CAAO,QAErE,CADA,EAAa,EAAW,IAAI,CAAC,GACzB,EAAW,cAAc,CAAC,EAAY,IAC/B,EAAW,yBAAyB,CAAC,EAAW,KAAK,CAAC,EAAY,GAAU,OAEhF,EAAW,KAAK,CAAC,EAAW,KAAK,CAAC,EAAY,GAAU,MACnE,EACA,EAAW,+BAA+B,CAAC,WAAW,CAAG,CAAA,EAEzD,EAAW,aAAa,CAAG,SAAS,CAAU,CAAE,CAAO,EACnD,OAAO,EAAW,KAAK,CAAC,EAAW,KAAK,CAAC,EAAY,GAAU,IACnE,EACA,EAAW,aAAa,CAAC,WAAW,CAAG,CAAA,EAEvC,EAAW,cAAc,CAAG,SAAS,CAAU,CAAE,CAAO,EAEpD,OADA,EAAa,EAAW,IAAI,CAAC,EAAY,GAClC,EAAW,KAAK,CAAC,EAAW,IAAI,CAAC,EAAY,GAAU,IAClE,EACA,EAAW,cAAc,CAAC,WAAW,CAAG,CAAA,EAExC,EAAW,WAAW,CAAG,SAAS,CAAU,CAAE,CAAO,EACjD,OAAO,EAAW,KAAK,CAAC,EAAW,KAAK,CAAC,EAAY,GAAU,IACnE,EACA,EAAW,WAAW,CAAC,WAAW,CAAG,CAAA,EAErC,EAAW,YAAY,CAAG,EAAE,CAEd,EACN,GAAK,CAAU,CAAC,EAAE,CAAC,WAAW,EAC9B,EAAW,YAAY,CAAC,IAAI,CAAC,EAIrC,CAAA,EAAW,oBAAoB,CAAG,SAAS,CAAU,CAAE,CAAO,CAAE,CAAQ,EACpE,IAAI,EAA6B,CAAA,EAcjC,IAAK,eAbL,EAAa,EAAW,IAAI,CAAC,EAAY,GACzC,IAAM,GACF,KAAc,EAAW,0BAA0B,GACnD,EAA6B,CAAA,EAE7B,iGAGJ,uDAAgB,EAAW,SAAS,CAAC,EAAY,GAC7C,GACA,CAAA,KAAO,kCAAqC,CAAA,EAAU,YAAc,SAAA,EAAa,gBADrF,EAGA,KAAO,cACa,EAEhB,GADA,EAAW,OAAO,CAAG,EAAE,CACnB,CAAU,CAAC,YAAY,CAAC,WAAW,CAAE,CACrC,KAAO,gCAAkC,YAAY,OAAO,CAAC,KAAM,KAAO,QAC1E,IAAI,EAAa,CAAU,CAAC,YAAY,CAAC,EAAY,GACjD,EAAO,AAAA,AAAA,EAAA,GAAc,iBAAiB,CAAC,GACvC,EAAY,aAAa,QAAQ,CAAC,GAItC,IAAK,UADL,KAFO,OAAS,EAAT,oEAEA,CAAA,sBAAyB,CAAA,GAAQ,EAAc,EAAO,MAAS,EAAA,CAAC,EAAK,EAAY,SACzE,EAAW,OAAO,CAC7B,KAAO,OAAS,EAAW,OAAO,CAAC,OAAO,CAAG,QAEjD,KAAO,aACX,CAEJ,EAAS,IACb,EAEA,EAAW,gBAAgB,CAAG,SAAS,CAAU,CAAE,CAAO,CAAE,CAAQ,EAEhE,IAAK,eADL,EAAa,EAAW,IAAI,CAAC,EAAY,GACrB,EAEhB,GADA,EAAW,OAAO,CAAG,EAAE,CACnB,CAAU,CAAC,YAAY,CAAC,WAAW,CAAE,CACrC,IAAI,EAAI,CAAC,EAOT,IAAK,UANL,EAAE,UAAU,CAAG,EACf,EAAE,gBAAgB,CAAG,YAAY,OAAO,CAAC,KAAM,KAC/C,EAAE,UAAU,CAAG,CAAU,CAAC,YAAY,CAAC,EAAY,GACnD,EAAE,aAAa,CAAG,AAAA,AAAA,EAAA,GAAc,iBAAiB,CAAC,EAAE,UAAU,EAC9D,EAAE,SAAS,CAAG,aAAa,QAAQ,CAAC,EAAE,aAAa,EACnD,EAAE,OAAO,CAAG,EAAE,CACC,EAAW,OAAO,CAC7B,EAAE,OAAO,CAAC,IAAI,CAAC,EAAW,OAAO,CAAC,OAAO,EAE7C,EAAS,EACb,CAER,EAEO,IAAI,EAAuB,CACjC,YAAe,CACd,QAAW,CACV,SAAY,CACX,MAAS,EAAW,gCAAgC,CACpD,OAAU,EAAW,iCAAiC,AACvD,EACA,OAAU,CACT,MAAS,EAAW,8BAA8B,CAClD,OAAU,EAAW,+BAA+B,AACrD,CACD,EACA,KAAQ,CACP,SAAY,CACX,MAAS,EAAW,6BAA6B,CACjD,OAAU,EAAW,8BAA8B,AACpD,EACA,OAAU,CACT,MAAS,EAAW,2BAA2B,CAC/C,OAAU,EAAW,4BAA4B,AAClD,CACD,CACD,CACD,EAIA,GAAI,CACA,IAAK,KAAK,EACN,CAAO,CAAC,EAAE,CAAG,CAAU,CAAC,EAAE,AAElC,CAAE,MAAM,EAAG,CAAC,CLxoBZ,MAAM,EAAU,iBAAkB,QAAU,UAAU,gBAAgB,CAAG,CACzE,CAAA,SAAS,cAAc,CAAC,sBAAsB,WAAW,CAAG,EACzD,kBACA,iCAGH,MAAM,EAAU,OAAO,MAAM,CAAC,CAC7B,SAAU,EAEV,QAAS,EACT,SAAU,CACX,GAqEA,SAAS,EAAuB,CAAK,EAEpC,IAAK,IAAI,KAAK,MAAM,IAAI,CADf,SAAS,cAAc,CAAC,YAAY,oBAAoB,CAAC,MAEjE,EAAE,KAAK,CAAC,KAAK,CAAG,CAElB,CAEA,SAAS,EAAY,CAAQ,EAC5B,IAAI,EAAO,AA2RZ,SAAwB,CAAQ,EAC/B,IAAI,EAAS,KAAK,MAAM,GAExB,GAAI,CACH,IAAK,IAAI,EAAI,EAAG,EAAI,EAAS,MAAM,CAAE,IACpC,IAAK,IAAI,EAAI,EAAG,EAAI,CAAQ,CAAC,EAAE,CAAC,MAAM,CAAE,IAAK,CAC5C,GAAI,EAAS,CAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,WAAW,CACtC,OAAO,CAAQ,CAAC,EAAE,CAAC,EAAE,CAGtB,GAAU,CAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,WAAW,AACrC,CAED,KAAM,uBACP,CAAE,MAAO,EAAK,CAEb,OADA,QAAQ,KAAK,CAAC,GACP,CAAQ,CAAC,EAAE,CAAC,aAAa,CAAQ,CAAC,EAAE,CAAC,MAAM,CAAG,GAAG,AACzD,CACD,EA7S2B,GAG1B,OAFA,AAKD,SAA2B,CAAI,EAI9B,AAAA,EAAqB,SAAS,cAAc,CAAC,YAAa,CAAA,GAG1D,IAAM,EAAW,EAAK,QAAQ,CAAC,OAAO,CACpC,UAAU,CAAC,OAAQ,qBACnB,UAAU,CAAC,QAAS,UACtB,CAAA,SAAS,cAAc,CAAC,aAAa,SAAS,CAAG,EACjD,SAAS,cAAc,CAAC,eAAe,WAAW,CAAG,EAAK,QAAQ,CAAC,GAAG,CAEtE,SAAS,cAAc,CAAC,aAAa,WAAW,CAAG,IACnD,SAAS,cAAc,CAAC,4BAA4B,SAAS,CAC5D,AAlFF,SAAsC,CAAW,EAChD,IAAI,EAAY,GAEhB,SAAS,EAAkB,CAAI,CAAE,CAAK,EACrC,MAAO,CAAC,4DAA4D,EAAE,EAAM,gCAAgC,EAAE,EAAK,aAAa,CAAC,AAClI,CA6CA,OA3CI,EAAY,IAAI,GAAK,AAAA,EAAkB,IAAI,CAC9C,GAAa,EAAkB,AAAA,EAAkB,IAAI,CAAE,KAEvD,EAAY,IAAI,GAAK,AAAA,EAAkB,EAAE,EACzC,EAAY,IAAI,GAAK,AAAA,EAAkB,MAAM,CAE7C,GAAa,EAAY,IAAI,CACnB,EAAY,IAAI,GAAK,AAAA,EAAkB,UAAU,CAC3D,GAAa,EAAkB,AAAA,EAAkB,UAAU,CAAE,gBACnD,EAAY,IAAI,GAAK,AAAA,EAAkB,OAAO,CACxD,GAAa,EAAkB,AAAA,EAAkB,OAAO,CAAE,gBAChD,EAAY,IAAI,GAAK,AAAA,EAAkB,SAAS,CAC1D,GAAa,EAAkB,AAAA,EAAkB,SAAS,CAAE,6BAClD,EAAY,IAAI,GAAK,AAAA,EAAkB,SAAS,CAC1D,GAAa,EAAkB,AAAA,EAAkB,SAAS,CAAE,iBAClD,EAAY,IAAI,GAAK,AAAA,EAAkB,UAAU,EAC3D,CAAA,GAAa,EAAkB,AAAA,EAAkB,UAAU,CAAE,eADvD,EAYH,AAAuB,CAAA,IAAvB,EAAY,MAAM,CACrB,GAAa,EAAkB,SAAU,gBACR,CAAA,IAAvB,EAAY,MAAM,EAC5B,CAAA,GAAa,EAAkB,WAAY,eADrC,EAIH,AAAuB,CAAA,IAAvB,EAAY,MAAM,CACrB,GAAa,EAAkB,SAAU,gBACR,CAAA,IAAvB,EAAY,MAAM,EAC5B,CAAA,GAAa,EAAkB,WAAY,eADrC,EAIoB,CAAA,IAAvB,EAAY,MAAM,EAAc,AAAsB,CAAA,GAAtB,EAAY,MAAM,EACrD,CAAA,GAAa,EAAkB,WAAY,GAD5C,EAIO,CACR,EA+B+B,EAAK,WAAW,CAC/C,EArBmB,GAClB,EAAuB,sBAChB,CACR,CAiFA,MAAM,EAEL,YAAY,CAAY,CAAE,CAAe,CAAE,CAAW,CAAE,CAAM,CAAE,CAAM,CAAE,CACvE,IAAI,CAAC,YAAY,CAAG,EACpB,IAAI,CAAC,IAAI,CAAG,EACZ,IAAI,CAAC,WAAW,CAAG,EACnB,IAAI,CAAC,MAAM,CAAG,EACd,IAAI,CAAC,MAAM,CAAG,CACf,CACD,CAEA,MAAM,EAEL,YAAY,CAAQ,CAAE,CAAW,CAAE,CAClC,IAAI,CAAC,QAAQ,CAAG,EAChB,IAAI,CAAC,WAAW,CAAG,EAGnB,IAAI,CAAC,WAAW,CAAG,EAEnB,IAAI,CAAC,oBAAoB,CAAG,CAAA,CAC7B,CACD,CAEA,MAAM,EACL,YAAY,CAAI,CAAE,CAAU,CAAE,CAC7B,IAAI,CAAC,IAAI,CAAG,EACZ,IAAI,CAAC,UAAU,CAAG,CACnB,CACD,CA6BA,SAAS,EAAuB,CAAY,EAC3C,IAAI,EAAmB,EAEvB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAa,MAAM,CAAE,IACxC,IAAK,IAAI,EAAI,EAAG,EAAI,CAAY,CAAC,EAAE,CAAC,MAAM,CAAE,IAC3C,GAAoB,CAAY,CAAC,EAAE,CAAC,EAAE,CAAC,WAAW,CAKpD,IAAK,IAAI,EAAI,EAAG,EAAI,EAAa,MAAM,CAAE,IACxC,IAAK,IAAI,EAAI,EAAG,EAAI,CAAY,CAAC,EAAE,CAAC,MAAM,CAAE,IAC3C,CAAY,CAAC,EAAE,CAAC,EAAE,CAAC,WAAW,EAAI,CAGrC,CAEA,SAAS,EAA2B,CAAY,CAAE,CAAK,EACtD,IAAK,IAAI,EAAI,EAAG,EAAI,EAAa,MAAM,CAAE,IACxC,IAAK,IAAI,EAAI,EAAG,EAAI,CAAY,CAAC,EAAE,CAAC,MAAM,CAAE,IAC3C,CAAY,CAAC,EAAE,CAAC,EAAE,CAAC,WAAW,CAAG,CAGpC,CA2PO,MAAM,EACZ,YAAY,CAAK,CAAE,CAAQ,CAAE,CAC5B,IAAI,CAAC,KAAK,CAAG,EACb,IAAI,CAAC,QAAQ,CAAG,CACjB,CACD,CAMC,IAGD,MACC,YAAY,CAAK,CAAE,CAClB,IAAM,EAAY,SAAS,cAAc,CAAC,mBAG1C,IAAI,CAAC,SAAS,CAAC,GAEf,EAAU,gBAAgB,CAAC,UAAW,AAAC,GAAM,IAAI,CAAC,aAAa,CAAC,IAChE,SACE,cAAc,CAAC,kBACf,gBAAgB,CAAC,QAAS,AAAC,GAAM,IAAI,CAAC,qBAAqB,CAAC,IAC9D,SACE,cAAc,CAAC,gBACf,gBAAgB,CAAC,SAAU,AAAC,GAAM,IAAI,CAAC,iBAAiB,CAAC,IAE3D,SACE,cAAc,CAAC,uBACf,gBAAgB,CAAC,eAAgB,AAAC,IAClC,SACE,cAAc,CAAC,uBACf,SAAS,CAAC,MAAM,CAAC,EAAE,aAAa,CACnC,GACD,SACE,cAAc,CAAC,mBACf,gBAAgB,CAAC,eAAgB,AAAC,IAClC,SACE,cAAc,CAAC,mBACf,SAAS,CAAC,MAAM,CAAC,EAAE,aAAa,CACnC,GAED,SACE,cAAc,CAAC,cACf,gBAAgB,CAAC,eAAgB,AAAC,IAClC,SACE,cAAc,CAAC,cACf,SAAS,CAAC,MAAM,CAAC,EAAE,aAAa,CACnC,GAED,SACE,cAAc,CAAC,iBACf,gBAAgB,CAAC,eAAgB,AAAC,IAClC,SACE,cAAc,CAAC,iBACf,SAAS,CAAC,MAAM,CAAC,EAAE,aAAa,CACnC,GAED,SAAS,gBAAgB,CAAC,UAAW,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,GAC7D,SAAS,gBAAgB,CAAC,WAAY,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,GAE/D,AAAA,WC7fD,IAAK,IAAM,KAAe,MAAM,IAAI,CADd,SAAS,sBAAsB,CAAC,kBAIrD,EAAY,gBAAgB,CAAC,QAAS,AAAC,GACtC,EAAuB,EAAE,aAAa,GAIxC,IAAM,EAA2B,SAAS,sBAAsB,CAC/D,uBAEK,EAA+B,SAAS,sBAAsB,CACnE,uBAED,IAAK,IAAM,KAAS,MAAM,IAAI,CAAC,GAA0B,MAAM,CAC9D,MAAM,IAAI,CAAC,IAEX,EAAM,gBAAgB,CAAC,QAAS,GAMjC,IAAK,IAAM,KAAS,MAAM,IAAI,CAHQ,SAAS,sBAAsB,CACpE,6BAGA,EAAM,gBAAgB,CAAC,QAAS,GAMjC,SACE,cAAc,CAAC,wBACf,gBAAgB,CAAC,QAAS,GAE5B,SACE,cAAc,CAAC,kBACf,gBAAgB,CAAC,QAAS,GAMR,SAAS,cAAc,CAAC,eAG7C,GDidC,CAEA,cAAe,CACd,IAAI,CAAC,KAAK,CAAC,YAAY,CAAG,EAAQ,QAAQ,CAC1C,SAAS,cAAc,CAAC,aAAa,SAAS,CAAC,GAAG,CAAC,mBACnD,SAAS,cAAc,CAAC,aAAa,SAAS,CAAC,MAAM,CAAC,kBAEtD,SACE,cAAc,CAAC,iBACf,SAAS,CAAC,MAAM,CAAC,0BAEnB,AAAA,EAAkB,SAAS,cAAc,CAAC,sBAAuB,CAAA,GACjE,AAAA,EAAkB,SAAS,cAAc,CAAC,cAAe,CAAA,GAErD,IAAI,CAAC,KAAK,CAAC,qBAAqB,GACnC,SAAS,cAAc,CAAC,uBAAuB,WAAW,CAAG,IAC7D,IAAI,CAAC,KAAK,CAAC,qBAAqB,CAAG,CAAA,GAGhC,IAAI,CAAC,KAAK,CAAC,eAAe,GAC7B,IAAI,CAAC,KAAK,CAAC,WAAW,CAAG,EAAY,IAAI,CAAC,KAAK,CAAC,eAAe,EAC/D,IAAI,CAAC,KAAK,CAAC,eAAe,CAAG,CAAA,GAI9B,AAAA,EACC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAC5B,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,cAAc,GACjC,AAAA,EAAuB,kBAAkB,EAE3C,AAAA,EACC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAC/B,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,iBAAiB,GACpC,AAAA,EAAuB,kBAAkB,EAG3C,IAAM,EAAY,SAAS,cAAc,CAAC,kBAC1C,CAAA,EAAU,QAAQ,CAAG,CAAA,EACrB,EAAU,KAAK,CAAG,GACb,GACJ,EAAU,KAAK,EAEjB,CAGA,UAAU,CAAC,CAAE,CACZ,IAAI,EAAU,EAAE,OAAO,CAAG,EAAE,OAAO,CAAG,EAAE,KAAK,AAE5C,CAAA,IAAI,CAAC,KAAK,CAAC,YAAY,GAAK,EAAQ,OAAO,EAC3C,AAAW,MAAX,GACA,AAA8B,mBAA9B,SAAS,aAAa,CAAC,EAAE,EAEzB,IAAI,CAAC,YAAY,EAEnB,CAGA,WAAW,CAAC,CAAE,CAEZ,IAAI,CAAC,KAAK,CAAC,YAAY,GAAK,EAAQ,OAAO,EAC3C,EAAE,MAAM,EAAI,SAAS,cAAc,CAAC,mBAEpC,IAAI,CAAC,YAAY,EAEnB,CAEA,cAAc,CAAC,CAAE,CAEhB,GAAI,AAAW,MADD,CAAA,EAAE,OAAO,CAAG,EAAE,OAAO,CAAG,EAAE,KAAK,AAAL,EACnB,CACpB,EAAE,eAAe,GAEjB,IAAM,EAAY,SAAS,cAAc,CAAC,mBACtC,EAAa,EAAU,KAAK,AAwBhC,CAAA,IAAI,CAAC,KAAK,CAAC,YAAY,CAAG,EAAQ,OAAO,CACzC,SACE,cAAc,CAAC,aACf,SAAS,CAAC,MAAM,CAAC,mBACnB,SAAS,cAAc,CAAC,aAAa,SAAS,CAAC,GAAG,CAAC,kBAEnD,EAAU,IAAI,GACd,AAxOH,SAA2B,CAAI,CAAE,CAAS,EACzC,IAAI,EAAY,SAAS,cAAc,CAAC,cAGxC,GAFA,AAAA,EAAkB,EAAW,CAAA,GAEzB,EAAK,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,AAAC,GAAM,GAAK,GAAY,CAC9D,EAAU,KAAK,CAAC,UAAU,CAAG,OAE7B,CAAA,SAAS,cAAc,CAAC,eAAe,SAAS,CAAG,cAM5C,YAAa,AACrB,UAzb8B,CA0b7B,CAAA,SAAS,cAAc,CAAC,YAAY,KAAK,CAAC,UAAU,CAAG,AAhCzD,SAA4B,CAAI,EAC/B,OAAQ,GACP,IAAK,IACJ,MAAO,kBACR,KAAK,KACJ,MAAO,iBACR,KAAK,MAEL,IAAK,MADJ,MAAO,MAGR,KAAK,IACJ,MAAO,kBACR,KAAK,KACJ,MAAO,kBACT,CACD,EAkBG,EAAK,QAAQ,CAAC,IAAI,EAEnB,AAAA,EAAqB,SAAS,cAAc,CAAC,YAAa,CAAA,GAC1D,EAAuB,SACvB,SAAS,cAAc,CAAC,aAAa,WAAW,CA9bjD,AAAI,AAAQ,MADkB,EAgc5B,EAAK,QAAQ,CAAC,IAAI,EA9bZ,SACG,AAAQ,MAAR,EACH,SACG,AAAQ,OAAR,GAAiB,AAAQ,OAAR,EACpB,YACG,AAAQ,KAAR,EACH,cACG,AAAQ,MAAR,EACH,qBAybP,EAAU,KAAK,CAAC,UAAU,CAAG,iBAE7B,SAAS,cAAc,CAAC,eAAe,SAAS,CAC9C,AAAA,CAAA,AAAa,IAAb,EAAkB,IAAM,CAAA,EACzB,SACA,EAAK,WAAW,CAAC,YAAY,CAAC,EAAE,CAChC,KAEH,EAwMqB,IAAI,CAAC,KAAK,CAAC,WAAW,CAAE,GAE1C,AAAA,EAAa,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAE,CAAA,GAC3C,AAAA,EAAgB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAE,CAAA,GAGjD,IAAM,EACL,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CACnD,AAAC,GAAM,GAAK,GAGd,AAlaH,CAAA,SACC,CAAY,CACZ,CAAsB,CACtB,CAAW,CACX,CAAqB,EAMrB,GAAI,CAAY,CAAC,EAAE,CAAC,MAAM,CAAG,CAAY,CAAC,EAAE,CAAC,MAAM,CAAG,EAAkB,CAEvE,EAA2B,EAAc,GACzC,EAAY,WAAW,CAAG,EAC1B,EAAuB,GACvB,MACD,CAGA,GAAI,EAAY,QAAQ,CAAC,KAAK,CAAE,CAC/B,IAAM,EAAqB,EAAY,WAAW,CAC5C,EAAQ,EAAY,QAAQ,CAAC,KAAK,CAExC,CAAY,CACX,gBAAgB,EAAY,QAAQ,IAAM,AAAA,EAAgB,IAAI,CAAG,EAAI,EACrE,CACC,MAAM,CAAC,AAAC,IACR,IAAM,EAAc,EAAK,WAAW,CAEpC,OACC,EAAK,QAAQ,CAAC,KAAK,GAAK,GACxB,IAAS,GACT,EAAY,IAAI,GAAK,EAAmB,IAAI,EAC5C,EAAY,WAAW,GAAK,EAAmB,WAAW,EAC1D,EAAY,MAAM,GAAK,EAAmB,MAAM,AAElD,GACC,OAAO,CAAC,AAAC,IAKT,EAAK,WAAW,EAAI,CACrB,EACF,CAKA,GAAI,EAAuB,MAAM,EA3CZ,EA2C8B,CAClD,IAOI,EAPA,EAAe,EAAuB,KAAK,GAG3C,EAAiB,AAlHvB,SAAqB,CAAY,EAChC,IAAI,EAAM,EACV,IAAK,IAAI,EAAI,EAAG,EAAI,EAAa,MAAM,CAAE,IACxC,IAAK,IAAI,EAAI,EAAG,EAAI,CAAY,CAAC,EAAE,CAAC,MAAM,CAAE,IAC3C,EACC,CAAY,CAAC,EAAE,CAAC,EAAE,CAAC,WAAW,CAAG,GACjC,AAAkC,GAAlC,CAAY,CAAC,EAAE,CAAC,EAAE,CAAC,WAAW,CAC3B,CAAY,CAAC,EAAE,CAAC,EAAE,CAAC,WAAW,CAC9B,EAGN,OAAO,CACR,EAsGmC,EAM7B,CAAA,EAAa,UAAU,EAAI,CAAC,EAAa,IAAI,CAAC,oBAAoB,CACrE,EAAiB,AANU,GAMV,EAEjB,EAAa,UAAU,EACvB,EAAa,IAAI,CAAC,oBAAoB,EAEtC,EAAiB,AAVY,IAUZ,EACjB,EAAa,IAAI,CAAC,oBAAoB,CAAG,CAAA,GAC9B,EAAa,UAAU,EAElC,CAAA,EAAiB,EAAjB,EAGD,EAAa,IAAI,CAAC,WAAW,CAAG,CACjC,CAKK,GACJ,CAAA,EAAY,oBAAoB,CAAG,CAAA,CADpC,EAIA,EAAuB,IAAI,CAC1B,IAAI,EAAiB,EAAa,IAGnC,EAAY,WAAW,CAAG,EAE1B,EAAuB,EACxB,CAAA,EA0UI,IAAI,CAAC,KAAK,CAAC,eAAe,CAC1B,IAAI,CAAC,KAAK,CAAC,sBAAsB,CACjC,IAAI,CAAC,KAAK,CAAC,WAAW,CACtB,GAGG,GACH,AA5SJ,SAAoB,EAAS,CAAC,CAAE,CAAe,CAAE,CAAa,EAC7D,GAAI,AAAU,GAAV,EACH,OAED,IAAI,EAAM,SAAS,cAAc,CAAC,mBAC9B,EAAU,SAAS,cAAc,CAAC,uBAEtC,GAAI,SAAS,EAAI,WAAW,GAAK,SAAS,EAAQ,WAAW,EAAG,CAC/D,IAAI,EAAY,SAAS,EAAI,WAAW,EAAI,CAC5C,CAAA,EAAI,WAAW,CAAG,EAEhB,SACC,cAAc,CAAC,cACf,SAAS,CAAC,QAAQ,CAAC,iBAErB,EAAI,SAAS,CAAC,GAAG,CAAC,kBAGnB,CAAe,CAAC,EAAc,CAAC,KAAK,CAAG,EACvC,aAAa,OAAO,CAAC,kBAAmB,KAAK,SAAS,CAAC,GACxD,CAEA,EAAQ,WAAW,CAAG,SAAS,EAAQ,WAAW,EAAI,EAEpD,SACC,cAAc,CAAC,kBACf,SAAS,CAAC,QAAQ,CAAC,iBAErB,EAAQ,SAAS,CAAC,GAAG,CAAC,iBAExB,EA8Qe,EAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAE,IAAI,CAAC,KAAK,CAAC,aAAa,EAClE,IAAI,CAAC,KAAK,CAAC,qBAAqB,CAAG,CAAA,GAEnC,IAAI,CAAC,KAAK,CAAC,qBAAqB,CAAG,CAAA,EAEpC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAG,CAAA,EAE7B,EAAU,QAAQ,CAAG,CAAA,EACrB,AAAA,EACC,SAAS,cAAc,CAAC,sBACxB,CAAA,GAGD,EAAU,KAAK,CAAG,EACnB,CACD,CAEA,sBAAsB,CAAC,CAAE,CACxB,IAAI,CAAC,KAAK,CAAC,YAAY,CAAG,EAAQ,QAAQ,CAE1C,AAAA,SCjKmC,CAAQ,EAI5C,IAAK,IAAI,KAAS,MAAM,IAAI,CAHP,SAAS,gBAAgB,CAC7C,yCAGA,EAAM,OAAO,CAAG,CAAQ,CAAC,EAAM,IAAI,CAAC,CAQrC,AAMA,CAAA,SACC,CAAU,CACV,CAAa,CACb,CAAyB,EAEzB,OAAQ,GACP,KAAK,EAAuB,MAAM,CACjC,SAAS,cAAc,CAAC,GAAe,OAAO,CAAG,CAAA,EACjD,KACD,MAAK,EAAuB,kBAAkB,CAC7C,SAAS,cAAc,CAAC,GAA2B,OAAO,CAAG,CAAA,CAE/D,CACD,CAAA,EAlBC,EAAS,iBAAiB,CAC1B,2BACA,0BAiBF,EDgIuB,IAAI,CAAC,KAAK,CAAC,QAAQ,EACxC,AAAA,WCvHD,IAAK,IAAI,KAPT,IAIA,IAGkB,MAAM,IAAI,CADR,SAAS,sBAAsB,CAAC,mBAEnD,EAAuB,GAGxB,GACD,IDoHE,AAAA,EAAkB,SAAS,cAAc,CAAC,aAAc,CAAA,GACxD,AAAA,EAAkB,SAAS,cAAc,CAAC,gBAAiB,CAAA,GAC3D,AAAA,EAAkB,SAAS,cAAc,CAAC,oBAAqB,CAAA,EAChE,CAEA,kBAAkB,CAAC,CAAE,CACpB,EAAE,cAAc,GAEhB,AAAA,SCrHmC,CAAQ,EAK5C,IAAK,IAAI,KAAS,MAAM,IAAI,CAJL,SAAS,gBAAgB,CAC/C,yCAIA,CAAQ,CAAC,EAAM,IAAI,CAAC,CAAG,EAAM,OAAO,CAOrC,SAAS,EAAwB,CAAS,EACzC,OACC,SAAS,aAAa,CAAC,CAAC,YAAY,EAAE,EAAU,UAAU,CAAC,GAAG,OAC9D,EAAuB,MAAM,AAE/B,CATA,EAAS,cAAc,CAAG,EAAwB,kBAClD,EAAS,iBAAiB,CAAG,EAAwB,oBAWtD,EDgGuB,IAAI,CAAC,KAAK,CAAC,QAAQ,EACxC,aAAa,OAAO,CAAC,WAAY,KAAK,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,GAEnE,IAAM,EAA6B,AAAA,WC5FpC,IAAM,EAA6B,CAAC,EAKpC,IAAK,IAAI,KAAS,MAAM,IAAI,CAJL,SAAS,gBAAgB,CAC/C,yCAKC,EAAM,WAAW,CAAG,GACpB,EAAM,YAAY,CAAG,GACrB,CAAC,EAAuB,GAAG,CAAC,EAAM,IAAI,GAEtC,CAAA,CAA0B,CAAC,EAAM,IAAI,CAAC,CAAG,EAAM,OAAO,AAAP,EAIjD,OAAO,CACR,ID6EM,EAAmB,AAAA,SClQS,CAAe,CAAE,CAA0B,EAC5E,IACI,EADA,EAAc,OAAO,IAAI,CAAC,GAE9B,IAAK,IAAI,EAAI,EAAG,EAAI,EAAgB,MAAM,CAAE,IAAK,CAEhD,IAAK,IAAI,KADT,EAAO,CAAA,EACO,GACb,GAAI,CAAe,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAE,EAAI,CAA0B,CAAC,EAAE,CAAE,CACpE,EAAO,CAAA,EACP,KACD,CAED,GAAI,AAAQ,CAAA,GAAR,EACH,OAAO,CAET,CACA,OAAO,EACR,EDmPG,IAAI,CAAC,KAAK,CAAC,eAAe,CAC1B,EAGwB,CAAA,KAArB,IACH,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,IAAI,CAC9B,IAAI,EAAe,EAAG,IAEvB,aAAa,OAAO,CACnB,kBACA,KAAK,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,GAE1C,EAAmB,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,MAAM,CAAG,GAGpD,IAAqB,IAAI,CAAC,KAAK,CAAC,aAAa,EAChD,aAAa,OAAO,CAAC,gBAAiB,GACtC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAG,EAC3B,IAAI,CAAC,KAAK,CAAC,qBAAqB,CAAG,CAAA,EACnC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAG,CAAA,EAE7B,IAAI,CAAC,2BAA2B,IAQhC,AAAA,EAA4B,IAAI,CAAC,KAAK,CAAC,QAAQ,EAGhD,SAAS,cAAc,CAAC,mBAAmB,WAAW,CACrD,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,KAAK,CAE3D,AAAA,EAAkB,SAAS,cAAc,CAAC,aAAc,CAAA,GACxD,AAAA,EAAkB,SAAS,cAAc,CAAC,gBAAiB,CAAA,GAC3D,AAAA,EAAkB,SAAS,cAAc,CAAC,oBAAqB,CAAA,GAE/D,IAAI,CAAC,YAAY,EAClB,CAEA,UAAU,CAAK,CAAE,CAIhB,GAHA,IAAI,CAAC,KAAK,CAAG,CAAC,EACd,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAG,AA9ZhC,SAAwB,CAAS,EAChC,IAAI,EAAW,AAAA,EAAoB,EAAU,MAAM,EAEnD,IAAK,IAAI,EAAI,EAAG,EAAI,EAAU,MAAM,CAAE,IACrC,IAAK,IAAI,EAAI,EAAG,EAAI,CAAS,CAAC,EAAE,CAAC,MAAM,CAAE,IAAK,CAC7C,IAAI,EAAe,AA5NtB,SAAkC,CAAQ,EACzC,IAAM,EAAkB,EAAE,CACpB,EA7BI,AA6B2B,EAAS,OAAO,CA7BtC,OAAO,CAAC,oBAAqB,IAgCtC,EAAS,CAAC,UAAW,OAAO,CAC5B,EAAc,CAAC,WAAY,SAAS,CACpC,EAAa,CAAC,QAAS,SAAS,CAEtC,IAAK,IAAM,IALG,CAAC,cAAc,CAM5B,IAAK,IAAM,KAAS,EACnB,IAAK,IAAM,KAAU,EACpB,IAAK,IAAM,KAAU,EACpB,KAjCyB,EAAM,EAAM,EAAO,EAAW,EAiCvD,EAAgB,IAAI,EAjCK,EAmCvB,EAnC6B,EAoC7B,EApCmC,EAqCnC,EArC0C,EAsC1C,EAtCqD,EAuCrD,EA5BC,IAAI,EACV,CAVmB,AADM,CAAA,EAAA,AAAA,EAAA,oBAAmB,AAAC,CAAC,EAAK,CAAC,EAAM,CAAC,EAAU,CAAC,EAAW,AAAX,EAC/B,GAU1B,CAPV,AAAS,WAAT,EACI,AAAA,EAAkB,OAAO,CAEzB,AAAA,EAAkB,IAAI,CAM7B,CAAA,EACC,AAAa,UAAb,EACA,AAAc,UAAd,IAeA,CAiBF,OAAO,EAAgB,IAAI,EAC5B,EA+L+C,CAAS,CAAC,EAAE,CAAC,EAAE,EAC3D,IAAK,IAAI,EAAI,EAAG,EAAI,EAAa,MAAM,CAAE,IACxC,CAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,EAAK,CAAS,CAAC,EAAE,CAAC,EAAE,CAAE,CAAY,CAAC,EAAE,EAE5D,CAED,OAAO,CACR,EAkZ+C,GAG5C,AAAC,aAAa,OAAO,CAAC,oBACrB,aAAa,OAAO,CAAC,kBACrB,aAAa,OAAO,CAAC,YAoBtB,IAAI,CAAC,KAAK,CAAC,aAAa,CAAG,SAC1B,aAAa,OAAO,CAAC,kBAEtB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAG,OAAO,MAAM,CAClC,AAAA,IACA,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC,cAEjC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAG,KAAK,KAAK,CACtC,aAAa,OAAO,CAAC,wBA3BrB,KCpxBC,CDqxBF,CAAA,IAAI,CAAC,KAAK,CAAC,aAAa,CAAG,EAC3B,aAAa,OAAO,CAAC,gBAAiB,IAAI,CAAC,KAAK,CAAC,aAAa,EAE9D,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAG,AAAA,IAEtB,aAAa,OAAO,CAAC,WAAY,KAAK,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,GAEnE,IAAI,CAAC,KAAK,CAAC,eAAe,CAAG,CAC5B,IAAI,EACH,GC9xBA,EAAiB,KAAK,KAAK,CAAC,KAAK,SAAS,CD+xBb,IAAI,CAAC,KAAK,CAAC,QAAQ,GC7xBpD,EAAuB,OAAO,CAAC,AAAC,IAC/B,OAAO,CAAc,CAAC,EAAE,AACzB,GACO,ID4xBJ,CACD,aAAa,OAAO,CACnB,kBACA,KAAK,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,EAE3C,CAaA,IAAI,CAAC,2BAA2B,GAEhC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAG,EAAY,IAAI,CAAC,KAAK,CAAC,eAAe,EAC/D,IAAI,CAAC,KAAK,CAAC,sBAAsB,CAAG,EAAE,CAEtC,IAAI,CAAC,KAAK,CAAC,qBAAqB,CAAG,CAAA,EACnC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAG,CAAA,EAE7B,SAAS,cAAc,CAAC,mBAAmB,WAAW,CACrD,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,KAAK,CAE3D,IAAI,CAAC,YAAY,EAClB,CAEA,6BAA8B,CAC7B,IAAM,EAAgB,AAAA,SChdoB,CAAQ,CAAE,CAAgB,EACrE,EAA4B,GAE5B,IAAI,EAAkB,AAAA,EAAoB,EAAiB,MAAM,EAE3D,EAAY,WAClB,GAAI,AAAkB,CAAA,IAAlB,EAAS,IAAI,CAAY,CAE5B,CAAe,CAAC,EAAE,CAAG,IAAI,CAAgB,CAAC,EAAE,CAAC,CAG7C,IAAI,EAAc,OAAO,IAAI,CAAC,GAAU,MAAM,CAAC,AAAC,GAC/C,EAAU,IAAI,CAAC,IAIhB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAY,MAAM,CAAE,IACN,CAAA,IAA7B,CAAQ,CAAC,CAAW,CAAC,EAAE,CAAC,EAC3B,CAAA,CAAe,CAAC,EAAE,CAAG,CAAe,CAAC,EAAE,CAAC,MAAM,CAAC,CAAgB,CAAC,EAAE,CAAC,MAAM,CACxE,EAAgC,KAAK,CAAC,CAAW,CAAC,EAAE,CAAC,EAHxD,CAOD,CAEA,IAAM,EAAiB,eACvB,GAAI,AAAuB,CAAA,IAAvB,EAAS,SAAS,CAAY,CAEjC,CAAe,CAAC,EAAE,CAAG,IAAI,CAAgB,CAAC,EAAE,CAAC,CAE7C,IAAI,EAAmB,OAAO,IAAI,CAAC,GAAU,MAAM,CAAC,AAAC,GACpD,EAAe,IAAI,CAAC,IAGrB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAiB,MAAM,CAAE,IACN,CAAA,IAAlC,CAAQ,CAAC,CAAgB,CAAC,EAAE,CAAC,EAChC,CAAA,CAAe,CAAC,EAAE,CAAG,CAAe,CAAC,EAAE,CAAC,MAAM,CAC7C,sBAAsB,UAAU,CAAC,CAAgB,CAAC,EAAE,CAAC,CAAA,CAIzD,CAGA,OADA,QAAQ,GAAG,CAAC,GACL,CACR,EDoaG,IAAI,CAAC,KAAK,CAAC,QAAQ,CACnB,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAvjB7B,EAyjBuB,EAzjBkB,GAIzC,EAqjBuB,GACtB,IAAI,CAAC,KAAK,CAAC,eAAe,CAAG,CAC9B,CACD,EA1ToB,CIvhBP,CACL,CACI,QAAW,KACX,IAAO,OACX,EACA,CACI,QAAW,OACX,IAAO,UACX,EACA,CACI,QAAW,OACX,IAAO,SACX,EACA,CACI,QAAW,OACX,IAAO,UACX,EACA,CACI,QAAW,MACX,IAAO,SACX,EACA,CACI,QAAW,OACX,IAAO,6CACX,EACA,CACI,QAAW,KACX,IAAO,uBACX,EACA,CACI,QAAW,OACX,IAAO,eACX,EACA,CACI,QAAW,KACX,IAAO,SACX,EACA,CACI,QAAW,OACX,IAAO,UACX,EACA,CACI,QAAW,OACX,IAAO,iBACX,EACA,CACI,QAAW,MACX,IAAO,iBACX,EACA,CACI,QAAW,KACX,IAAO,SACX,EACA,CACI,QAAW,8BACX,IAAO,SACX,EACA,CACI,QAAW,qBACX,IAAO,SACX,EACA,CACI,QAAW,+BACX,IAAO,SACX,EACA,CACI,QAAW,gBACX,IAAO,aACX,EACA,CACI,QAAW,cACX,IAAO,SACX,EACA,CACI,QAAW,OACX,IAAO,YACX,EACA,CACI,QAAW,OACX,IAAO,cACX,EACA,CACI,QAAW,OACX,IAAO,WACX,EACA,CACI,QAAW,OACX,IAAO,UACX,EACA,CACI,QAAW,OACX,IAAO,eACX,EACA,CACI,QAAW,OACX,IAAO,cACX,EACA,CACI,QAAW,MACX,IAAO,OACX,EACA,CACI,QAAW,MACX,IAAO,WACX,EACA,CACI,QAAW,MACX,IAAO,WACX,EACA,CACI,QAAW,OACX,IAAO,UACX,EACA,CACI,QAAW,OACX,IAAO,mBACX,EACA,CACI,QAAW,OACX,IAAO,gBACX,EACA,CACI,QAAW,MACX,IAAO,aACX,EACA,CACI,QAAW,KACX,IAAO,UACX,EACA,CACI,QAAW,MACX,IAAO,qBACX,EACA,CACI,QAAW,MACX,IAAO,SACX,EACA,CACI,QAAW,OACX,IAAO,SACX,EACA,CACI,QAAW,MACX,IAAO,oBACX,EACA,CACI,QAAW,OACX,IAAO,eACX,EACA,CACI,QAAW,OACX,IAAO,aACX,EACA,CACI,QAAW,OACX,IAAO,eACX,EACA,CACI,QAAW,KACX,IAAO,qBACX,EACA,CACI,QAAW,KACX,IAAO,eACX,EACA,CACI,QAAW,KACX,IAAO,UACX,EACH,CACa,EACb,CJ4WoD,EA+TzD,AAAA,EAAkB,SAAS,cAAc,CAAC,qBAAsB,CAAA,GAC3D,GACJ,SAAS,cAAc,CAAC,mBAAmB,KAAK","sources":["<anon>","src/conjugation/hangeul.js","src/main.js","src/settingManagement.js","src/wordEnums.js","src/utils.js","src/worddata.js","src/conjugation/conjugator.js","src/conjugation/pronunciation.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"8ro1P\", function(module, exports) {\n\n$parcel$export(module.exports, \"Geulja\", () => $62537be26463873a$export$5fc85369385cf331);\n$parcel$export(module.exports, \"hangeul\", () => $62537be26463873a$export$559d605efc99d06a);\n// vim: set ts=4 sw=4 expandtab\n// (C) 2010 Dan Bravender - licensed under the AGPL 3.0\n/*  Geulja is used to track modifications that have been made to\n    characters. Currently, it keeps track of characters' original\n    padchims (for ㄷ -> ㄹ irregulars) and if the character has\n    no padchim but should be treated as if it does (for ㅅ\n    irregulars). When substrings are extracted the Geulja class\n    keeps these markers for the last character only.\n*/ function $62537be26463873a$export$5fc85369385cf331(__value__) {\n    this.__value__ = __value__ || \"\";\n    this._length = this.__value__.length; // Use a different property name for length\n    this.hidden_padchim = false;\n    this.original_padchim = null;\n    this.charAt = function() {\n        let result = String.prototype.charAt.apply(this, arguments);\n        if (arguments[0] == this._length - 1) {\n            result = new $62537be26463873a$export$5fc85369385cf331(result);\n            result.original_padchim = this.original_padchim;\n            result.hidden_padchim = this.hidden_padchim;\n        }\n        return result;\n    };\n}\n// with(Geulja.prototype = new String) {\n//     toString = valueOf = function() {\n//         return this.__value__\n//     };\n// }\n$62537be26463873a$export$5fc85369385cf331.prototype = new String();\n// Assign the methods directly to Geulja.prototype\n$62537be26463873a$export$5fc85369385cf331.prototype.toString = $62537be26463873a$export$5fc85369385cf331.prototype.valueOf = function() {\n    return this.__value__;\n};\nvar $62537be26463873a$export$559d605efc99d06a = {};\n$62537be26463873a$export$559d605efc99d06a.Geulja = $62537be26463873a$export$5fc85369385cf331;\n$62537be26463873a$export$559d605efc99d06a.is_hangeul = function(character) {\n    if (character.charCodeAt(0) >= \"\\uAC00\".charCodeAt(0) && character.charCodeAt(0) <= \"\\uD7A3\".charCodeAt(0)) return true;\n    return false;\n};\n// Equations lifted directly from:\n// http://www.kfunigraz.ac.at/~katzer/korean_hangul_unicode.html\n$62537be26463873a$export$559d605efc99d06a.lead = function(character) {\n    return String.fromCharCode(Math.floor(character.charCodeAt(0) - 44032) / 588 + 4352);\n};\n$62537be26463873a$export$559d605efc99d06a.vowel = function(character) {\n    let padchim_character = $62537be26463873a$export$559d605efc99d06a.padchim(character);\n    let padchim_offset;\n    if (!padchim_character || padchim_character == true) padchim_offset = -1;\n    else padchim_offset = padchim_character.charCodeAt(0) - \"\\u11A8\".charCodeAt(0);\n    return String.fromCharCode(Math.floor((character.charCodeAt(0) - 44032 - padchim_offset) % 588 / 28) + \"\\u314F\".charCodeAt(0));\n};\n$62537be26463873a$export$559d605efc99d06a.padchim = function(character) {\n    if (character.hidden_padchim) return true;\n    if (character.original_padchim) return character.original_padchim;\n    let p = String.fromCharCode((character.charCodeAt(0) - 44032) % 28 + \"\\u11A8\".charCodeAt(0) - 1);\n    if (p.charCodeAt(0) == 4519) return null;\n    else return p;\n};\n$62537be26463873a$export$559d605efc99d06a.join = function(lead, vowel, padchim) {\n    let lead_offset = lead.charCodeAt(0) - \"\\u1100\".charCodeAt(0);\n    let vowel_offset = vowel.charCodeAt(0) - \"\\u314F\".charCodeAt(0);\n    let padchim_offset;\n    if (padchim) padchim_offset = padchim.charCodeAt(0) - \"\\u11A8\".charCodeAt(0);\n    else padchim_offset = -1;\n    return String.fromCharCode(padchim_offset + vowel_offset * 28 + lead_offset * 588 + 44032 + 1);\n};\n$62537be26463873a$export$559d605efc99d06a.find_vowel_to_append = function(string) {\n    self = $62537be26463873a$export$559d605efc99d06a;\n    let append = null;\n    string.split(\"\").reverse().forEach(function(character) {\n        if (character in {\n            \"\\uB728\": true,\n            \"\\uC4F0\": true,\n            \"\\uD2B8\": true\n        }) {\n            if (!append) append = \"\\uC5B4\";\n        }\n        if (self.vowel(character) == \"\\u3161\" && !self.padchim(character)) ;\n        else if (self.vowel(character) in {\n            \"\\u3157\": true,\n            \"\\u314F\": true,\n            \"\\u3151\": true\n        }) {\n            if (!append) append = \"\\uC544\";\n        } else if (!append) append = \"\\uC5B4\";\n    });\n    if (!append) append = \"\\uC5B4\";\n    return append;\n};\n$62537be26463873a$export$559d605efc99d06a.match = function(character, l, v, p) {\n    return (l == \"*\" || this.lead(character) == l) && (v == \"*\" || this.vowel(character) == v) && (p == \"*\" || this.padchim(character) == p);\n};\n// export var hangeul = (() => {\n//     this.Geulja = Geulja;\n//     this.is_hangeul = function (character) {\n//         if (character.charCodeAt(0) >= '가'.charCodeAt(0) &&\n//             character.charCodeAt(0) <= '힣'.charCodeAt(0)) {\n//             return true;\n//         }\n//         return false;\n//     };\n//     // Equations lifted directly from:\n//     // http://www.kfunigraz.ac.at/~katzer/korean_hangul_unicode.html\n//     this.lead = function (character) {\n//         return String.fromCharCode((Math.floor(character.charCodeAt(0) - 44032) / 588) + 4352);\n//     };\n//     this.vowel = function (character) {\n//         padchim_character = this.padchim(character);\n//         if (!padchim_character || padchim_character == true) {\n//             padchim_offset = -1;\n//         } else {\n//             padchim_offset = padchim_character.charCodeAt(0) - 'ᆨ'.charCodeAt(0);\n//         }\n//         return String.fromCharCode(Math.floor(((character.charCodeAt(0) - 44032 - padchim_offset) % 588) / 28) + 'ㅏ'.charCodeAt(0));\n//     };\n//     this.padchim = function (character) {\n//         if (character.hidden_padchim) {\n//             return true;\n//         }\n//         if (character.original_padchim) {\n//             return character.original_padchim;\n//         }\n//         p = String.fromCharCode(((character.charCodeAt(0) - 44032) % 28) + 'ᆨ'.charCodeAt(0) - 1)\n//         if (p.charCodeAt(0) == 4519) {\n//             return null;\n//         } else {\n//             return p;\n//         }\n//     };\n//     this.join = function (lead, vowel, padchim) {\n//         lead_offset = lead.charCodeAt(0) - 'ᄀ'.charCodeAt(0);\n//         vowel_offset = vowel.charCodeAt(0) - 'ㅏ'.charCodeAt(0);\n//         if (padchim) {\n//             padchim_offset = padchim.charCodeAt(0) - 'ᆨ'.charCodeAt(0);\n//         } else {\n//             padchim_offset = -1;\n//         }\n//         return String.fromCharCode(padchim_offset + (vowel_offset) * 28 + (lead_offset) * 588 + 44032 + 1);\n//     };\n//     this.find_vowel_to_append = function (string) {\n//         self = this;\n//         append = null;\n//         string.split('').reverse().forEach(function (character) {\n//             if (character in { '뜨': true, '쓰': true, '트': true }) {\n//                 if (!append) append = '어';\n//             }\n//             if (self.vowel(character) == 'ㅡ' && !self.padchim(character)) {\n//                 //continue\n//             } else if (self.vowel(character) in { 'ㅗ': true, 'ㅏ': true, 'ㅑ': true }) {\n//                 if (!append) append = '아';\n//             } else {\n//                 if (!append) append = '어';\n//             }\n//         });\n//         if (!append) append = '어';\n//         return append;\n//     };\n//     this.match = function (character, l, v, p) {\n//         return (l == '*' || this.lead(character) == l) &&\n//             (v == '*' || this.vowel(character) == v) &&\n//             (p == '*' || this.padchim(character) == p)\n//     };\n//     return this;\n// })();\n// Export functions to node\ntry {\n    for(f in $62537be26463873a$export$559d605efc99d06a)module.exports[f] = $62537be26463873a$export$559d605efc99d06a[f];\n} catch (e) {}\n\n});\n\n// since the weights are mostly only used to make things repeat after x amount of rounds, they are overkill\n// would be less work to just wait x rounds and immeditely show what you missed, without updating any weights.\nconst $18fe9b1b6336f500$export$aa00f474800863da = Object.freeze({\n    verb: \"verb\",\n    adjective: \"adjective\"\n});\nconst $18fe9b1b6336f500$export$45aabe1f61557e96 = Object.freeze({\n    present: \"Present\",\n    past: \"Past\",\n    te: \"\\u3066-form\",\n    adverb: \"Adverb\",\n    volitional: \"Volitional\",\n    passive: \"Passive\",\n    causative: \"Causative\",\n    potential: \"Potential\",\n    imperative: \"Imperative\"\n});\n\n\nfunction $820877bea407f5fe$export$ef83af2c8dc2c683(element, isDisplayNone) {\n    $820877bea407f5fe$var$toggleClassName(element, \"display-none\", isDisplayNone);\n}\nfunction $820877bea407f5fe$export$877ee1ca1de102fd(element, isBackgroundNone) {\n    $820877bea407f5fe$var$toggleClassName(element, \"background-none\", isBackgroundNone);\n}\nfunction $820877bea407f5fe$var$toggleClassName(element, className, enabled) {\n    if (enabled) element.classList.add(className);\n    else element.classList.remove(className);\n}\nfunction $820877bea407f5fe$export$4720c7d384d77b7d(length) {\n    let array = new Array(length);\n    for(let i = 0; i < array.length; i++)array[i] = [];\n    return array;\n}\n\n\nconst $68e612a17b33f886$export$1a0f0b5f10fa2085 = Object.freeze({\n    always: \"always\",\n    onlyAfterAnswering: \"after\"\n});\nconst $68e612a17b33f886$var$nonConjugationSettings = $68e612a17b33f886$var$getNonConjugationSettingsSet();\nfunction $68e612a17b33f886$var$getNonConjugationSettingsSet() {\n    const settings = new Set();\n    document.querySelectorAll(\"#non-conjugation-settings input\").forEach((input)=>settings.add(input.getAttribute(\"name\")));\n    return settings;\n}\nfunction $68e612a17b33f886$export$d04e1a4f8a41f042(settings) {\n    let prunedSettings = JSON.parse(JSON.stringify(settings));\n    $68e612a17b33f886$var$nonConjugationSettings.forEach((s)=>{\n        delete prunedSettings[s];\n    });\n    return prunedSettings;\n}\nconst $68e612a17b33f886$export$f598fee9a8761f8f = ()=>{\n    // First set all checkboxes to true\n    // document.getElementById(\"options-form\")\n    // \t.querySelectorAll('[type=\"checkbox\"]').checked = true;\n    const inputs = document.getElementById(\"options-form\").querySelectorAll('[type=\"checkbox\"]');\n    const settings = {};\n    for (const input of Array.from(inputs))settings[input.name] = true;\n    // Set any advanced conjugation checkboxes to false\n    const advancedInputs = document.getElementById(\"options-form\").querySelectorAll('.advanced-section [type=\"checkbox\"]');\n    for (const input of Array.from(advancedInputs))settings[input.name] = false;\n    // Set input radio values\n    settings[\"translationTiming\"] = $68e612a17b33f886$export$1a0f0b5f10fa2085.always;\n    settings[\"furiganaTiming\"] = $68e612a17b33f886$export$1a0f0b5f10fa2085.always;\n    return settings;\n};\nconst $68e612a17b33f886$export$100e28ec40f7f33c = ()=>{\n    const settings = {};\n    const nonConjugationInputs = document.getElementById(\"non-conjugation-settings\").querySelectorAll('[type=\"checkbox\"]');\n    for (let input of Array.from(nonConjugationInputs))settings[input.name] = true;\n    // Set input radio values\n    settings[\"translationTiming\"] = $68e612a17b33f886$export$1a0f0b5f10fa2085.always;\n    settings[\"furiganaTiming\"] = $68e612a17b33f886$export$1a0f0b5f10fa2085.always;\n    // All conjugation settings (including advanced options) are added as false\n    const conjugationInputs = document.getElementById(\"conjugation-settings\").querySelectorAll('[type=\"checkbox\"]');\n    for (let input of Array.from(conjugationInputs))settings[input.name] = false;\n    return settings;\n};\nfunction $68e612a17b33f886$export$41be671a9fdd6b82() {\n    const optionsGroups = document.getElementsByClassName(\"options-group\");\n    for (const optionGroup of Array.from(optionsGroups))// Note that this registers a listener for a click anywhere in the\n    // options-group element (not just the checkboxes).\n    optionGroup.addEventListener(\"click\", (e)=>$68e612a17b33f886$var$optionsGroupCheckError(e.currentTarget));\n    const verbInputsWithVariations = document.getElementsByClassName(\"verb-has-variations\");\n    const verbInputsWithPolitenessOnly = document.getElementsByClassName(\"verb-has-politeness\");\n    for (const input of Array.from(verbInputsWithVariations).concat(Array.from(verbInputsWithPolitenessOnly)))input.addEventListener(\"click\", $68e612a17b33f886$var$showHideVerbVariationOptions);\n    const adjectiveInputsWithVariations = document.getElementsByClassName(\"adjective-has-variations\");\n    for (const input of Array.from(adjectiveInputsWithVariations))input.addEventListener(\"click\", $68e612a17b33f886$var$showHideAdjectiveVariationOptions);\n    // document\n    // \t.getElementById(\"furigana-checkbox\")\n    // \t.addEventListener(\"click\", showHideFuriganaSubOptions);\n    document.getElementById(\"translation-checkbox\").addEventListener(\"click\", $68e612a17b33f886$var$showHideTranslationSubOptions);\n    document.getElementById(\"verbs-checkbox\").addEventListener(\"click\", $68e612a17b33f886$var$verbAndAdjCheckError);\n    // document\n    // \t.getElementById(\"adjectives-checkbox\")\n    // \t.addEventListener(\"click\", verbAndAdjCheckError);\n    // top level errors\n    const optionsView = document.getElementById(\"options-view\");\n// optionsView.addEventListener(\"click\", verbPresAffPlainCheckError);\n// optionsView.addEventListener(\"click\", adjPresAffPlainCheckError);\n}\nfunction $68e612a17b33f886$var$checkToEnableBackButton() {\n    let errors = document.getElementsByClassName(\"settings-error-text\");\n    for (let error of Array.from(errors))// checks if any error messages take up space on the screen\n    if (error.offsetWidth > 0 && error.offsetHeight > 0) {\n        document.getElementById(\"back-button\").disabled = true;\n        return;\n    }\n    document.getElementById(\"back-button\").disabled = false;\n}\n/**\n * If enabled is true, sets errorElement's content to errorMessage.\n * Otherwise, hides errorElement and tries to enable the back button.\n *\n * @param {boolean} enabled\n * @param {Element} errorElement\n * @param {String} errorMessage\n */ function $68e612a17b33f886$var$toggleError(enabled, errorElement1, errorMessage) {\n    if (enabled) {\n        let backButton = document.getElementById(\"back-button\");\n        errorElement1.textContent = errorMessage;\n        (0, $820877bea407f5fe$export$ef83af2c8dc2c683)(errorElement1, false);\n        backButton.disabled = true;\n    } else {\n        (0, $820877bea407f5fe$export$ef83af2c8dc2c683)(errorElement1, true);\n        $68e612a17b33f886$var$checkToEnableBackButton();\n    }\n}\nfunction $68e612a17b33f886$var$doCheckboxesHaveValue(inputs, shouldBeChecked) {\n    for (let input of Array.from(inputs)){\n        if (input.checked !== shouldBeChecked) return false;\n    }\n    return true;\n}\nfunction $68e612a17b33f886$var$checkInputsAndToggleError(inputs, errorElement1, errorMessage, shouldBeChecked) {\n    $68e612a17b33f886$var$toggleError($68e612a17b33f886$var$doCheckboxesHaveValue(inputs, shouldBeChecked), errorElement1, errorMessage);\n}\nfunction $68e612a17b33f886$var$optionsGroupCheckError(groupElement) {\n    let inputs = groupElement.getElementsByTagName(\"input\");\n    let errorElement1 = groupElement.getElementsByClassName(\"settings-error-text\")[0];\n    $68e612a17b33f886$var$checkInputsAndToggleError(inputs, errorElement1, \"*Must choose at least 1 option from this category\", false);\n}\nfunction $68e612a17b33f886$var$verbAndAdjCheckError() {\n    let inputs = [\n        document.querySelector('input[name=\"verb\"]')\n    ];\n    (0, $820877bea407f5fe$export$ef83af2c8dc2c683)(document.getElementById(\"verb-options-container\"), !inputs[0].checked);\n    // toggleDisplayNone(\n    // \tdocument.getElementById(\"adjective-options-container\"),\n    // \t!inputs[1].checked\n    // );\n    let errorElement1 = document.getElementById(\"top-must-choose\");\n    $68e612a17b33f886$var$checkInputsAndToggleError(inputs, errorElement1, \"*Must choose at least 1 option from this category\", false);\n}\n// Relies on naming between verb and adjective checkboxes being parallel in the html\nfunction $68e612a17b33f886$var$areOnlyPresAffPlainChecked(partOfSpeech) {\n    // const allInputsToValidate = Array.from(\n    // \tdocument\n    // \t\t.getElementById(`${partOfSpeech}-conjugation-type-group`)\n    // \t\t.getElementsByTagName(\"input\")\n    // ).concat(\n    // \tArray.from(\n    // \t\tdocument\n    // \t\t\t.getElementById(`${partOfSpeech}-variations-container`)\n    // \t\t\t.getElementsByTagName(\"input\")\n    // \t)\n    // );\n    const allInputsToValidate = Array.from(document.getElementById(`${partOfSpeech}-variations-container`).getElementsByTagName(\"input\"));\n    const inputsToBeChecked = new Set([\n        `${partOfSpeech}present`,\n        `${partOfSpeech}affirmative`,\n        `${partOfSpeech}plain`\n    ]);\n    for (const input of allInputsToValidate){\n        // We're validating that only the inputs in inputsToBeChecked are checked.\n        // Otherwise, return early to prevent the error from being displayed.\n        if (!input.checked && inputsToBeChecked.has(input.name) || input.checked && !inputsToBeChecked.has(input.name)) return false;\n    }\n    // If we make it here, then only present, affirmative, and plain were checked in their respective option groups\n    return true;\n}\nfunction $68e612a17b33f886$var$verbPresAffPlainCheckError() {\n    // let optionsGroup = document.getElementById(\"verb-conjugation-type-group\");\n    // let errorElement = optionsGroup.getElementsByClassName(\n    // \t\"settings-error-text\"\n    // )[0];\n    if ($68e612a17b33f886$var$areOnlyPresAffPlainChecked((0, $18fe9b1b6336f500$export$aa00f474800863da).verb)) {\n        $68e612a17b33f886$var$toggleError(true, errorElement, \"*Invalid combination: present, affirmative, plain\");\n        // These inputs could be hidden because the parent \"Verb\" option is unchecked, so check to enable back button\n        $68e612a17b33f886$var$checkToEnableBackButton();\n    } else $68e612a17b33f886$var$optionsGroupCheckError(optionsGroup);\n}\nfunction $68e612a17b33f886$var$adjPresAffPlainCheckError() {\n    let optionsGroup1 = document.getElementById(\"adjective-type-group\");\n    let errorElement1 = optionsGroup1.getElementsByClassName(\"settings-error-text\")[0];\n    let iAdjInput = document.querySelector('input[name=\"adjectivei\"]');\n    let irrAdjInput = document.querySelector('input[name=\"adjectiveirregular\"]');\n    let naAdjInput = document.querySelector('input[name=\"adjectivena\"]');\n    if ($68e612a17b33f886$var$areOnlyPresAffPlainChecked((0, $18fe9b1b6336f500$export$aa00f474800863da).adjective) && !naAdjInput.checked && (iAdjInput.checked || irrAdjInput.checked)) {\n        $68e612a17b33f886$var$toggleError(true, errorElement1, \"*Invalid combination: \\u3044/irregular, present, affirmative, plain\");\n        // element could be hidden because verb is unchecked, so check to enable back button\n        $68e612a17b33f886$var$checkToEnableBackButton();\n    } else if (document.querySelector('input[name=\"adjective\"]').checked) $68e612a17b33f886$var$optionsGroupCheckError(optionsGroup1);\n}\n/**\n * Shows or hides UI options based on the values of checkboxes.\n *\n * @param {string} triggeringInputsClass - The class that's been put on inputs that trigger this show/hide\n * @param {string} showHideContainerId - The container to show/hide. Should either be an element with an \"options-group\" class, or be an element that contains other \"options-group\" elements\n * @returns {boolean} - true if the options were shown, false if hidden\n */ function $68e612a17b33f886$var$showHideUiOptions(triggeringInputsClass, showHideContainerId) {\n    const inputsThatTrigger = document.getElementsByClassName(triggeringInputsClass);\n    const showHideContainer = document.getElementById(showHideContainerId);\n    // Check if showHideContainer is an options-group itself, or if it contains options-group elements\n    const optionGroups = showHideContainer.classList.contains(\"options-group\") ? [\n        showHideContainer\n    ] : showHideContainer.getElementsByClassName(\"options-group\");\n    for (const input of Array.from(inputsThatTrigger))if (input.checked) {\n        for (const optionGroup of Array.from(optionGroups)){\n            $68e612a17b33f886$var$optionsGroupCheckError(optionGroup);\n            (0, $820877bea407f5fe$export$ef83af2c8dc2c683)(optionGroup, false);\n        }\n        return true;\n    }\n    for (const optionGroup of Array.from(optionGroups))(0, $820877bea407f5fe$export$ef83af2c8dc2c683)(optionGroup, true);\n    return false;\n}\n// In this context the options Affirmative, Negative, Plain, and Polite\n// are considered \"variations\" on other conjugation types.\n// Not all types (like て for verbs, adverbs for adjectives) have variations.\nfunction $68e612a17b33f886$var$showHideVerbVariationOptions() {\n    // First try to show/hide all variation options\n    const showingAllVariations = $68e612a17b33f886$var$showHideUiOptions(\"verb-selected\", \"verb-variations-container\");\n    // If all variations aren't shown, see if just politeness options should be shown\n    if (!showingAllVariations) $68e612a17b33f886$var$showHideUiOptions(\"verb-has-politeness\", \"verb-politeness-container\");\n}\nfunction $68e612a17b33f886$var$showHideAdjectiveVariationOptions() {\n    $68e612a17b33f886$var$showHideUiOptions(\"adjective-has-variations\", \"adjective-variations-container\");\n}\nfunction $68e612a17b33f886$var$showHideFuriganaSubOptions() {\n    (0, $820877bea407f5fe$export$ef83af2c8dc2c683)(document.getElementById(\"furigana-sub-options\"), !document.getElementById(\"furigana-checkbox\").checked);\n}\nfunction $68e612a17b33f886$var$showHideTranslationSubOptions() {\n    (0, $820877bea407f5fe$export$ef83af2c8dc2c683)(document.getElementById(\"translation-sub-options\"), !document.getElementById(\"translation-checkbox\").checked);\n}\nfunction $68e612a17b33f886$export$7b52e59d7da90ebe(settings) {\n    $68e612a17b33f886$export$3feb6355be08b5e5(settings.emoji);\n    $68e612a17b33f886$export$aee73cd064bb7d20(settings.streak);\n// showTranslation and showFurigana are dependent on the state, so we can't set them here\n}\nfunction $68e612a17b33f886$export$9ad811eb0029a5fe(settings, completeWordList) {\n    $68e612a17b33f886$export$7b52e59d7da90ebe(settings);\n    let currentWordList = (0, $820877bea407f5fe$export$4720c7d384d77b7d)(completeWordList.length);\n    const verbRegex = /^verb_.+/;\n    if (settings.verb !== false) {\n        // Copy all of the verbs over\n        currentWordList[0] = [\n            ...completeWordList[0]\n        ];\n        // currentWordList[0] = [];\n        let verbOptions = Object.keys(settings).filter((el)=>verbRegex.test(el));\n        // Filter out the verbs we don't want\n        for(let i = 0; i < verbOptions.length; i++)if (settings[verbOptions[i]] === true) currentWordList[0] = currentWordList[0].concat(completeWordList[0].filter($68e612a17b33f886$var$questionRemoveFiltersController.verbs[verbOptions[i]]));\n    }\n    const adjectiveRegex = /^adjective.+/;\n    if (settings.adjective !== false) {\n        // Copy all of the adjectives over\n        currentWordList[1] = [\n            ...completeWordList[1]\n        ];\n        let adjectiveOptions = Object.keys(settings).filter((el)=>adjectiveRegex.test(el));\n        // Filter out the adjectives we don't want\n        for(let i = 0; i < adjectiveOptions.length; i++)if (settings[adjectiveOptions[i]] === false) currentWordList[1] = currentWordList[1].filter(questionRemoveFilters.adjectives[adjectiveOptions[i]]);\n    }\n    console.log(currentWordList);\n    return currentWordList;\n}\n// The input to these functions is a \"Word\" object defined in main.js.\n// If one of these filters is applied to an array of Words,\n// that type of Word will be removed from the array.\nconst $68e612a17b33f886$var$questionRemoveFiltersController = {\n    verbs: {\n        // PRESENT TENSE\n        verb_present_indicative_informal_impolite: function(word) {\n            let bool = word.conjugation.type === (0, $18fe9b1b6336f500$export$45aabe1f61557e96).present && word.conjugation.formal === false && word.conjugation.polite === false;\n            return bool;\n        },\n        verb_present_indicative_formal_impolite: function(word) {\n            let bool = word.conjugation.type === (0, $18fe9b1b6336f500$export$45aabe1f61557e96).present && word.conjugation.formal === true && word.conjugation.polite === false;\n            return bool;\n        },\n        verb_present_indicative_informal_polite: function(word) {\n            return word.conjugation.type === (0, $18fe9b1b6336f500$export$45aabe1f61557e96).present && word.conjugation.formal === false && word.conjugation.polite === true;\n        },\n        verb_present_indicative_formal_polite: function(word) {\n            return word.conjugation.type === (0, $18fe9b1b6336f500$export$45aabe1f61557e96).present && word.conjugation.formal === true && word.conjugation.polite === true;\n        },\n        // PAST TENSE\n        verb_past_indicative_informal_impolite: function(word) {\n            let bool = word.conjugation.type === (0, $18fe9b1b6336f500$export$45aabe1f61557e96).past && word.conjugation.formal === false && word.conjugation.polite === false;\n            return bool;\n        },\n        verb_past_indicative_formal_impolite: function(word) {\n            let bool = word.conjugation.type === (0, $18fe9b1b6336f500$export$45aabe1f61557e96).past && word.conjugation.formal === true && word.conjugation.polite === false;\n            return bool;\n        },\n        verb_past_indicative_informal_polite: function(word) {\n            return word.conjugation.type === (0, $18fe9b1b6336f500$export$45aabe1f61557e96).past && word.conjugation.formal === false && word.conjugation.polite === true;\n        },\n        verb_past_indicative_formal_polite: function(word) {\n            return word.conjugation.type === (0, $18fe9b1b6336f500$export$45aabe1f61557e96).past && word.conjugation.formal === true && word.conjugation.polite === true;\n        }\n    }\n};\nfunction $68e612a17b33f886$export$30675527ad91ffe6(maxScoreObjects, visibleConjugationSettings) {\n    let settingKeys = Object.keys(visibleConjugationSettings);\n    let flag;\n    for(let i = 0; i < maxScoreObjects.length; i++){\n        flag = true;\n        for (let s of settingKeys)if (maxScoreObjects[i].settings[s] != visibleConjugationSettings[s]) {\n            flag = false;\n            break;\n        }\n        if (flag == true) return i;\n    }\n    return -1;\n}\nconst $68e612a17b33f886$export$3feb6355be08b5e5 = function(show) {\n    document.getElementById(\"conjugation-inquery-text\").className = show ? \"\" : \"hide-emojis\";\n};\nconst $68e612a17b33f886$export$aee73cd064bb7d20 = function(show) {\n    document.querySelectorAll(\".streak\").forEach((s)=>{\n        if (show) s.classList.remove(\"display-none\");\n        else s.classList.add(\"display-none\");\n    });\n};\nconst $68e612a17b33f886$export$e91dd64c29cc7054 = function(showInDom, makeTransparent = false) {\n    const el = document.getElementById(\"verb-text\");\n    $68e612a17b33f886$var$setDisplayAndTransparency(el, showInDom, \"hide-furigana\", makeTransparent, \"transparent-furigana\");\n};\nconst $68e612a17b33f886$export$42fe1bab90555082 = function(showInDom, makeTransparent = false) {\n    const el = document.getElementById(\"translation\");\n    $68e612a17b33f886$var$setDisplayAndTransparency(el, showInDom, \"display-none\", makeTransparent, \"transparent\");\n};\n// removeClass should lead to display:none\n// transparentClass should lead to something like opacity: 0 to keep height when hidden\nfunction $68e612a17b33f886$var$setDisplayAndTransparency(element, showInDom, removeClass, makeTransparent, transparentClass) {\n    // Reset state\n    element.classList.remove(removeClass);\n    element.classList.remove(transparentClass);\n    if (!showInDom) {\n        element.classList.add(removeClass);\n        return;\n    }\n    if (makeTransparent) {\n        element.classList.add(transparentClass);\n        return;\n    }\n}\nfunction $68e612a17b33f886$export$b8407eada850d56b(settings) {\n    let checkboxInputs = document.querySelectorAll(`#options-form input[type=\"checkbox\"]`);\n    for (let input of Array.from(checkboxInputs))input.checked = settings[input.name];\n    // selectConditionalUiRadio(\n    // \tsettings.furiganaTiming,\n    // \t\"furigana-always-radio\",\n    // \t\"furigana-after-radio\"\n    // );\n    selectConditionalUiRadio(settings.translationTiming, \"translation-always-radio\", \"translation-after-radio\");\n    function selectConditionalUiRadio(radioValue, alwaysRadioId, onlyAfterAnsweringRadioId) {\n        switch(radioValue){\n            case $68e612a17b33f886$export$1a0f0b5f10fa2085.always:\n                document.getElementById(alwaysRadioId).checked = true;\n                break;\n            case $68e612a17b33f886$export$1a0f0b5f10fa2085.onlyAfterAnswering:\n                document.getElementById(onlyAfterAnsweringRadioId).checked = true;\n                break;\n        }\n    }\n}\nfunction $68e612a17b33f886$export$f1d3883d7bdbc350() {\n    $68e612a17b33f886$var$showHideVerbVariationOptions();\n    // showHideAdjectiveVariationOptions();\n    // showHideFuriganaSubOptions();\n    $68e612a17b33f886$var$showHideTranslationSubOptions();\n    let optionsGroups = document.getElementsByClassName(\"options-group\");\n    for (let group of Array.from(optionsGroups))$68e612a17b33f886$var$optionsGroupCheckError(group);\n    $68e612a17b33f886$var$verbAndAdjCheckError();\n}\nfunction $68e612a17b33f886$export$484e1e7497eb0732(settings) {\n    const checkboxInputs = document.querySelectorAll('#options-form input[type=\"checkbox\"]');\n    for (let input of Array.from(checkboxInputs))settings[input.name] = input.checked;\n    settings.furiganaTiming = getConditionalUiSetting(\"furiganaTiming\");\n    settings.translationTiming = getConditionalUiSetting(\"translationTiming\");\n    // Default to \"always\"\n    function getConditionalUiSetting(radioName) {\n        return document.querySelector(`input[name=\"${radioName}\"]:checked`)?.value ?? $68e612a17b33f886$export$1a0f0b5f10fa2085.always;\n    }\n    return settings;\n}\nfunction $68e612a17b33f886$export$f35d7c2709d46536() {\n    const visibleConjugationSettings = {};\n    const checkboxInputs = document.querySelectorAll('#options-form input[type=\"checkbox\"]');\n    for (let input of Array.from(checkboxInputs))if (input.offsetWidth > 0 && input.offsetHeight > 0 && !$68e612a17b33f886$var$nonConjugationSettings.has(input.name)) visibleConjugationSettings[input.name] = input.checked;\n    return visibleConjugationSettings;\n}\n\n\nconst $d3e8101abf179243$export$b5495a69ec24caf1 = {\n    \"verbs\": [\n        {\n            \"kanji\": \"<ruby>\\u884C<rt>\\u3044</rt></ruby>\\u304F\",\n            \"type\": \"irv\",\n            \"eng\": \"go\",\n            \"group\": \"iku\"\n        },\n        {\n            \"kanji\": \"\\u3059\\u308B\",\n            \"type\": \"irv\",\n            \"eng\": \"do, make\",\n            \"group\": \"suru\"\n        }\n    ],\n    \"adjectives\": [\n        {\n            \"kanji\": \"\\u3044\\u3044\",\n            \"type\": \"ira\",\n            \"eng\": \"good\"\n        },\n        {\n            \"kanji\": \"\\u304B\\u3063\\u3053\\u3044\\u3044\",\n            \"type\": \"ira\",\n            \"eng\": \"cool, handsome\"\n        }\n    ]\n};\nconst $d3e8101abf179243$export$7530f3eeac5df28 = {\n    \"verbs\": [\n        {\n            \"hangeul\": \"\\uAC00\\uB2E4\",\n            \"eng\": \"to go\"\n        },\n        {\n            \"hangeul\": \"\\uAC00\\uB974\\uCE58\\uB2E4\",\n            \"eng\": \"to teach\"\n        },\n        {\n            \"hangeul\": \"\\uAC00\\uC838\\uAC00\\uB2E4\",\n            \"eng\": \"to take\"\n        },\n        {\n            \"hangeul\": \"\\uAC00\\uC838\\uC624\\uB2E4\",\n            \"eng\": \"to bring\"\n        },\n        {\n            \"hangeul\": \"\\uAC00\\uC9C0\\uB2E4\",\n            \"eng\": \"to have\"\n        },\n        {\n            \"hangeul\": \"\\uAC08\\uC544\\uD0C0\\uB2E4\",\n            \"eng\": \"to transfer (eg. transfer to subway line 9)\"\n        },\n        {\n            \"hangeul\": \"\\uAC10\\uB2E4\",\n            \"eng\": \"to close (one's eyes)\"\n        },\n        {\n            \"hangeul\": \"\\uAC10\\uC0AC\\uD558\\uB2E4\",\n            \"eng\": \"to appreciate\"\n        },\n        {\n            \"hangeul\": \"\\uAC16\\uB2E4\",\n            \"eng\": \"to have\"\n        },\n        {\n            \"hangeul\": \"\\uAC71\\uC815\\uD558\\uB2E4\",\n            \"eng\": \"to worry\"\n        },\n        {\n            \"hangeul\": \"\\uAC74\\uB108\\uAC00\\uB2E4\",\n            \"eng\": \"to cross (over)\"\n        },\n        {\n            \"hangeul\": \"\\uAC74\\uB108\\uB2E4\",\n            \"eng\": \"to cross (over)\"\n        },\n        {\n            \"hangeul\": \"\\uAC77\\uB2E4\",\n            \"eng\": \"to walk\"\n        },\n        {\n            \"hangeul\": \"\\uAC78\\uB2E4 (clothing, picture, etc)\",\n            \"eng\": \"to hang\"\n        },\n        {\n            \"hangeul\": \"\\uAC78\\uB2E4 (communication)\",\n            \"eng\": \"to call\"\n        },\n        {\n            \"hangeul\": \"\\uAC78\\uB9AC\\uB2E4 (clothing, picture, etc)\",\n            \"eng\": \"to hang\"\n        },\n        {\n            \"hangeul\": \"\\uAC78\\uB9AC\\uB2E4 (illness)\",\n            \"eng\": \"to contract\"\n        },\n        {\n            \"hangeul\": \"\\uAC78\\uB9AC\\uB2E4 (carry)\",\n            \"eng\": \"to take\"\n        },\n        {\n            \"hangeul\": \"\\uAC78\\uC5B4\\uAC00\\uB2E4\",\n            \"eng\": \"to walk to\"\n        },\n        {\n            \"hangeul\": \"\\uAC78\\uC774\\uC624\\uB2E4\",\n            \"eng\": \"to walk from\"\n        },\n        {\n            \"hangeul\": \"\\uACB0\\uC815\\uD558\\uB2E4\",\n            \"eng\": \"to decide\"\n        },\n        {\n            \"hangeul\": \"\\uACB0\\uD63C\\uD558\\uB2E4\",\n            \"eng\": \"to marry\"\n        },\n        {\n            \"hangeul\": \"\\uACBD\\uD5D8\\uD558\\uB2E4\",\n            \"eng\": \"to experience\"\n        },\n        {\n            \"hangeul\": \"\\uACC4\\uC0B0\\uD558\\uB2E4\",\n            \"eng\": \"to calculate\"\n        },\n        {\n            \"hangeul\": \"\\uACC4\\uC2DC\\uB2E4\",\n            \"eng\": \"to be\"\n        },\n        {\n            \"hangeul\": \"\\uACE0\\uB974\\uB2E4\",\n            \"eng\": \"to choose\"\n        },\n        {\n            \"hangeul\": \"\\uACE0\\uCE58\\uB2E4\",\n            \"eng\": \"to repair\"\n        },\n        {\n            \"hangeul\": \"\\uACF5\\uBD80\\uD558\\uB2E4\",\n            \"eng\": \"to study\"\n        },\n        {\n            \"hangeul\": \"\\uAD00\\uAD11\\uD558\\uB2E4\",\n            \"eng\": \"to go sightseeing\"\n        },\n        {\n            \"hangeul\": \"\\uAD6C\\uACBD\\uD558\\uB2E4\",\n            \"eng\": \"to look around\"\n        },\n        {\n            \"hangeul\": \"\\uAD6C\\uD558\\uB2E4\",\n            \"eng\": \"to look for\"\n        },\n        {\n            \"hangeul\": \"\\uAD7D\\uB2E4\",\n            \"eng\": \"to grill\"\n        },\n        {\n            \"hangeul\": \"\\uADF8\\uB9AC\\uB2E4\",\n            \"eng\": \"to draw (a picture)\"\n        },\n        {\n            \"hangeul\": \"\\uADF8\\uCE58\\uB2E4\",\n            \"eng\": \"to stop\"\n        },\n        {\n            \"hangeul\": \"\\uAE30\\uB2E4\\uB9AC\\uB2E4\",\n            \"eng\": \"to wait\"\n        },\n        {\n            \"hangeul\": \"\\uAE30\\uB974\\uB2E4\",\n            \"eng\": \"to raise (a child)\"\n        },\n        {\n            \"hangeul\": \"\\uAE30\\uBED0\\uD558\\uB2E4\",\n            \"eng\": \"to be pleased\"\n        },\n        {\n            \"hangeul\": \"\\uAE30\\uC5B5\\uD558\\uB2E4\",\n            \"eng\": \"to remember\"\n        },\n        {\n            \"hangeul\": \"\\uAE34\\uC7A5\\uB418\\uB2E4\",\n            \"eng\": \"to be nervous\"\n        },\n        {\n            \"hangeul\": \"\\uAE38\\uB2E4\",\n            \"eng\": \"to long (adjective)\"\n        },\n        {\n            \"hangeul\": \"\\uAE4E\\uB2E4\",\n            \"eng\": \"to cut (hair)\"\n        },\n        {\n            \"hangeul\": \"\\uAE68\\uB2E4\",\n            \"eng\": \"to break\"\n        }\n    ],\n    \"adjectives\": []\n};\nconst $d3e8101abf179243$export$f943a98f64e52676 = {\n    \"verbs\": [\n        {\n            \"kanji\": \"<ruby>\\u884C<rt>\\u3044</rt></ruby>\\u304F\",\n            \"type\": \"irv\",\n            \"eng\": \"go\",\n            \"group\": \"iku\"\n        },\n        {\n            \"kanji\": \"\\u3059\\u308B\",\n            \"type\": \"irv\",\n            \"eng\": \"do, make\",\n            \"group\": \"suru\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u6765<rt>\\u304F</rt></ruby>\\u308B\",\n            \"type\": \"irv\",\n            \"eng\": \"come\"\n        },\n        {\n            \"kanji\": \"\\u3042\\u308B\",\n            \"type\": \"irv\",\n            \"eng\": \"have, exists, is (inanimate)\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u554F<rt>\\u3068</rt></ruby>\\u3046\",\n            \"type\": \"irv\",\n            \"eng\": \"ask, accuse\"\n        },\n        {\n            \"kanji\": \"\\u3044\\u308B\",\n            \"type\": \"ru\",\n            \"eng\": \"exists, is (living things)\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u59CB<rt>\\u306F\\u3058</rt></ruby>\\u3081\\u308B\",\n            \"type\": \"ru\",\n            \"eng\": \"begin\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u501F<rt>\\u304B</rt></ruby>\\u308A\\u308B\",\n            \"type\": \"ru\",\n            \"eng\": \"borrow, rent\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u7D9A<rt>\\u3064\\u3065</rt></ruby>\\u3051\\u308B\",\n            \"type\": \"ru\",\n            \"eng\": \"continue, proceed\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u6C7A<rt>\\u304D</rt></ruby>\\u3081\\u308B\",\n            \"type\": \"ru\",\n            \"eng\": \"decide, choose\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u98DF<rt>\\u305F</rt></ruby>\\u3079\\u308B\",\n            \"type\": \"ru\",\n            \"eng\": \"eat\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u5FD8<rt>\\u308F\\u3059</rt></ruby>\\u308C\\u308B\",\n            \"type\": \"ru\",\n            \"eng\": \"forget\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u964D<rt>\\u304A</rt></ruby>\\u308A\\u308B\",\n            \"type\": \"ru\",\n            \"eng\": \"get off, go down\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u75B2<rt>\\u3064\\u304B</rt></ruby>\\u308C\\u308B\",\n            \"type\": \"ru\",\n            \"eng\": \"get tired\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u8D77<rt>\\u304A</rt></ruby>\\u304D\\u308B\",\n            \"type\": \"ru\",\n            \"eng\": \"get up, wake up\"\n        },\n        {\n            \"kanji\": \"\\u3042\\u3052\\u308B\",\n            \"type\": \"ru\",\n            \"eng\": \"give\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u51FA<rt>\\u3067</rt></ruby>\\u308B\",\n            \"type\": \"ru\",\n            \"eng\": \"leave, exit, appear\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u52A9<rt>\\u305F\\u3059</rt></ruby>\\u3051\\u308B\",\n            \"type\": \"ru\",\n            \"eng\": \"help\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u898B<rt>\\u307F</rt></ruby>\\u308B\",\n            \"type\": \"ru\",\n            \"eng\": \"see, look\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u958B<rt>\\u3042</rt></ruby>\\u3051\\u308B\",\n            \"type\": \"ru\",\n            \"eng\": \"open\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u899A<rt>\\u304A\\u307C</rt></ruby>\\u3048\\u308B\",\n            \"type\": \"ru\",\n            \"eng\": \"remember, learn\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u5BDD<rt>\\u306D</rt></ruby>\\u308B\",\n            \"type\": \"ru\",\n            \"eng\": \"sleep, go to bed\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u9589<rt>\\u3057</rt></ruby>\\u3081\\u308B\",\n            \"type\": \"ru\",\n            \"eng\": \"close\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u7740<rt>\\u304D</rt></ruby>\\u308B\",\n            \"type\": \"ru\",\n            \"eng\": \"put on, wear (shirt, jacket, etc)\"\n        },\n        {\n            \"kanji\": \"\\u306A\\u308B\",\n            \"type\": \"u\",\n            \"eng\": \"become\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u4E57<rt>\\u306E</rt></ruby>\\u308B\",\n            \"type\": \"u\",\n            \"eng\": \"board, ride\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u5207<rt>\\u304D</rt></ruby>\\u308B\",\n            \"type\": \"u\",\n            \"eng\": \"cut\"\n        },\n        {\n            \"kanji\": \"\\u3084\\u308B\",\n            \"type\": \"u\",\n            \"eng\": \"do, give\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u7D42<rt>\\u304A</rt></ruby>\\u308F\\u308B\",\n            \"type\": \"u\",\n            \"eng\": \"end\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u4E0A<rt>\\u3042</rt></ruby>\\u304C\\u308B\",\n            \"type\": \"u\",\n            \"eng\": \"go up, rise\",\n            \"altOkurigana\": [\n                \"\\u4E0A\\u308B\"\n            ]\n        },\n        {\n            \"kanji\": \"<ruby>\\u77E5<rt>\\u3057</rt></ruby>\\u308B\",\n            \"type\": \"u\",\n            \"eng\": \"know\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u4F5C<rt>\\u3064\\u304F</rt></ruby>\\u308B\",\n            \"type\": \"u\",\n            \"eng\": \"make, build\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u5E30<rt>\\u304B\\u3048</rt></ruby>\\u308B\",\n            \"type\": \"u\",\n            \"eng\": \"return, go home\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u53D6<rt>\\u3068</rt></ruby>\\u308B\",\n            \"type\": \"u\",\n            \"eng\": \"take, steal\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u8CB7<rt>\\u304B</rt></ruby>\\u3046\",\n            \"type\": \"u\",\n            \"eng\": \"buy\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u7B11<rt>\\u308F\\u3089</rt></ruby>\\u3046\",\n            \"type\": \"u\",\n            \"eng\": \"laugh, smile\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u4F1A<rt>\\u3042</rt></ruby>\\u3046\",\n            \"type\": \"u\",\n            \"eng\": \"meet\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u8A00<rt>\\u3044</rt></ruby>\\u3046\",\n            \"type\": \"u\",\n            \"eng\": \"say, utter\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u601D<rt>\\u304A\\u3082</rt></ruby>\\u3046\",\n            \"type\": \"u\",\n            \"eng\": \"think, believe\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u4F7F<rt>\\u3064\\u304B</rt></ruby>\\u3046\",\n            \"type\": \"u\",\n            \"eng\": \"use\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u6301<rt>\\u3082</rt></ruby>\\u3064\",\n            \"type\": \"u\",\n            \"eng\": \"hold, have\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u5F85<rt>\\u307E</rt></ruby>\\u3064\",\n            \"type\": \"u\",\n            \"eng\": \"wait\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u7ACB<rt>\\u305F</rt></ruby>\\u3064\",\n            \"type\": \"u\",\n            \"eng\": \"stand up\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u805E<rt>\\u304D</rt></ruby>\\u304F\",\n            \"type\": \"u\",\n            \"eng\": \"hear, listen\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u5F15<rt>\\u3072</rt></ruby>\\u304F\",\n            \"type\": \"u\",\n            \"eng\": \"pull, tug\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u5C65<rt>\\u306F</rt></ruby>\\u304F\",\n            \"type\": \"u\",\n            \"eng\": \"put on, wear (pants, skirt, shoes, etc)\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u6B69<rt>\\u3042\\u308B</rt></ruby>\\u304F\",\n            \"type\": \"u\",\n            \"eng\": \"walk\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u66F8<rt>\\u304B</rt></ruby>\\u304F\",\n            \"type\": \"u\",\n            \"eng\": \"write\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u50CD<rt>\\u306F\\u305F\\u3089</rt></ruby>\\u304F\",\n            \"type\": \"u\",\n            \"eng\": \"work\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u6B7B<rt>\\u3057</rt></ruby>\\u306C\",\n            \"type\": \"u\",\n            \"eng\": \"die, pass away\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u98F2<rt>\\u306E</rt></ruby>\\u3080\",\n            \"type\": \"u\",\n            \"eng\": \"drink\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u697D<rt>\\u305F\\u306E</rt></ruby>\\u3057\\u3080\",\n            \"type\": \"u\",\n            \"eng\": \"enjoy, have fun\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u9032<rt>\\u3059\\u3059</rt></ruby>\\u3080\",\n            \"type\": \"u\",\n            \"eng\": \"advance, go forward\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u4F4F<rt>\\u3059</rt></ruby>\\u3080\",\n            \"type\": \"u\",\n            \"eng\": \"live, inhabit\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u8AAD<rt>\\u3088</rt></ruby>\\u3080\",\n            \"type\": \"u\",\n            \"eng\": \"read\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u4F11<rt>\\u3084\\u3059</rt></ruby>\\u3080\",\n            \"type\": \"u\",\n            \"eng\": \"rest, be absent\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u904A<rt>\\u3042\\u305D</rt></ruby>\\u3076\",\n            \"type\": \"u\",\n            \"eng\": \"play, have a good time\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u5B66<rt>\\u307E\\u306A</rt></ruby>\\u3076\",\n            \"type\": \"u\",\n            \"eng\": \"study, learn\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u9078<rt>\\u3048\\u3089</rt></ruby>\\u3076\",\n            \"type\": \"u\",\n            \"eng\": \"choose, select\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u8FD4<rt>\\u304B\\u3048</rt></ruby>\\u3059\",\n            \"type\": \"u\",\n            \"eng\": \"return (something), put back\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u62BC<rt>\\u304A</rt></ruby>\\u3059\",\n            \"type\": \"u\",\n            \"eng\": \"push, press\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u6CBB<rt>\\u306A\\u304A</rt></ruby>\\u3059\",\n            \"type\": \"u\",\n            \"eng\": \"cure, repair\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u8A71<rt>\\u306F\\u306A</rt></ruby>\\u3059\",\n            \"type\": \"u\",\n            \"eng\": \"talk, speak\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u63A2<rt>\\u3055\\u304C</rt></ruby>\\u3059\",\n            \"type\": \"u\",\n            \"eng\": \"search, look for\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u8CB8<rt>\\u304B</rt></ruby>\\u3059\",\n            \"type\": \"u\",\n            \"eng\": \"lend, loan\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u6CF3<rt>\\u304A\\u3088</rt></ruby>\\u3050\",\n            \"type\": \"u\",\n            \"eng\": \"swim\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u8131<rt>\\u306C</rt></ruby>\\u3050\",\n            \"type\": \"u\",\n            \"eng\": \"take off clothes, undress\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u6025<rt>\\u3044\\u305D</rt></ruby>\\u3050\",\n            \"type\": \"u\",\n            \"eng\": \"hurry\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u7A3C<rt>\\u304B\\u305B</rt></ruby>\\u3050\",\n            \"type\": \"u\",\n            \"eng\": \"earn income, make money\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u5BDB<rt>\\u304F\\u3064\\u308D</rt></ruby>\\u3050\",\n            \"type\": \"u\",\n            \"eng\": \"relax, feel at home\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u7E4B<rt>\\u3064\\u306A</rt></ruby>\\u3050\",\n            \"type\": \"u\",\n            \"eng\": \"connect, link together\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u5206<rt>\\u308F</rt></ruby>\\u304B\\u308B\",\n            \"type\": \"u\",\n            \"eng\": \"understand\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u52C9<rt>\\u3079\\u3093</rt></ruby><ruby>\\u5F37<rt>\\u304D\\u3087\\u3046</rt></ruby>\\u3059\\u308B\",\n            \"type\": \"irv\",\n            \"eng\": \"study\",\n            \"group\": \"suru\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u53D7<rt>\\u3046</rt></ruby>\\u3051<ruby>\\u6301<rt>\\u3082</rt></ruby>\\u3064\",\n            \"type\": \"u\",\n            \"eng\": \"take charge of\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u6301<rt>\\u3082</rt></ruby>\\u3063\\u3066<ruby>\\u884C<rt>\\u3044</rt></ruby>\\u304F\",\n            \"type\": \"irv\",\n            \"eng\": \"take, carry away\",\n            \"group\": \"iku\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u98DF<rt>\\u305F</rt></ruby>\\u3079<ruby>\\u6B69<rt>\\u3042\\u308B</rt></ruby>\\u304F\",\n            \"type\": \"u\",\n            \"eng\": \"try food at various restaurants\"\n        }\n    ],\n    \"adjectives\": [\n        {\n            \"kanji\": \"\\u3044\\u3044\",\n            \"type\": \"ira\",\n            \"eng\": \"good\"\n        },\n        {\n            \"kanji\": \"\\u304B\\u3063\\u3053\\u3044\\u3044\",\n            \"type\": \"ira\",\n            \"eng\": \"cool, handsome\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u8D64<rt>\\u3042\\u304B</rt></ruby>\\u3044\",\n            \"type\": \"i\",\n            \"eng\": \"red\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u65B0<rt>\\u3042\\u305F\\u3089</rt></ruby>\\u3057\\u3044\",\n            \"type\": \"i\",\n            \"eng\": \"new\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u6691<rt>\\u3042\\u3064</rt></ruby>\\u3044\",\n            \"type\": \"i\",\n            \"eng\": \"hot (weather)\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u5371<rt>\\u3042\\u3076</rt></ruby>\\u306A\\u3044\",\n            \"type\": \"i\",\n            \"eng\": \"dangerous\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u7F8E<rt>\\u304A</rt></ruby><ruby>\\u5473<rt>\\u3044</rt></ruby>\\u3057\\u3044\",\n            \"type\": \"i\",\n            \"eng\": \"delicious\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u5927<rt>\\u304A\\u304A</rt></ruby>\\u304D\\u3044\",\n            \"type\": \"i\",\n            \"eng\": \"big\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u9045<rt>\\u304A\\u305D</rt></ruby>\\u3044\",\n            \"type\": \"i\",\n            \"eng\": \"late, slow\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u9762<rt>\\u304A\\u3082</rt></ruby><ruby>\\u767D<rt>\\u3057\\u308D</rt></ruby>\\u3044\",\n            \"type\": \"i\",\n            \"eng\": \"interesting, funny\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u53EF<rt>\\u304B</rt></ruby><ruby>\\u611B<rt>\\u308F\\u3044</rt></ruby>\\u3044\",\n            \"type\": \"i\",\n            \"eng\": \"cute, pretty\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u5BD2<rt>\\u3055\\u3080</rt></ruby>\\u3044\",\n            \"type\": \"i\",\n            \"eng\": \"cold (weather)\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u9AD8<rt>\\u305F\\u304B</rt></ruby>\\u3044\",\n            \"type\": \"i\",\n            \"eng\": \"high, expensive\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u697D<rt>\\u305F\\u306E</rt></ruby>\\u3057\\u3044\",\n            \"type\": \"i\",\n            \"eng\": \"fun, pleasant\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u5C0F<rt>\\u3061\\u3044</rt></ruby>\\u3055\\u3044\",\n            \"type\": \"i\",\n            \"eng\": \"small\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u8A70<rt>\\u3064\\u307E</rt></ruby>\\u3089\\u306A\\u3044\",\n            \"type\": \"i\",\n            \"eng\": \"uninteresting, boring\",\n            \"altOkurigana\": [\n                \"\\u8A70\\u307E\\u3089\\u306A\\u3044\"\n            ]\n        },\n        {\n            \"kanji\": \"<ruby>\\u901F<rt>\\u306F\\u3084</rt></ruby>\\u3044\",\n            \"type\": \"i\",\n            \"eng\": \"fast, quick\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u53E4<rt>\\u3075\\u308B</rt></ruby>\\u3044\",\n            \"type\": \"i\",\n            \"eng\": \"old (thing)\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u6B32<rt>\\u307B</rt></ruby>\\u3057\\u3044\",\n            \"type\": \"i\",\n            \"eng\": \"wanted, desired\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u96E3<rt>\\u3080\\u305A\\u304B</rt></ruby>\\u3057\\u3044\",\n            \"type\": \"i\",\n            \"eng\": \"difficult\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u5B89<rt>\\u3084\\u3059</rt></ruby>\\u3044\",\n            \"type\": \"i\",\n            \"eng\": \"cheap\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u597D<rt>\\u3059</rt></ruby>\\u304D\",\n            \"type\": \"na\",\n            \"eng\": \"like\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u6709<rt>\\u3086\\u3046</rt></ruby><ruby>\\u540D<rt>\\u3081\\u3044</rt></ruby>\",\n            \"type\": \"na\",\n            \"eng\": \"famous\"\n        },\n        {\n            \"kanji\": \"\\u304D\\u308C\\u3044\",\n            \"type\": \"na\",\n            \"eng\": \"beautiful, tidy\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u5ACC<rt>\\u304D\\u3089</rt></ruby>\\u3044\",\n            \"type\": \"na\",\n            \"eng\": \"dislike\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u9759<rt>\\u3057\\u305A</rt></ruby>\\u304B\",\n            \"type\": \"na\",\n            \"eng\": \"quiet\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u5143<rt>\\u3052\\u3093</rt></ruby><ruby>\\u6C17<rt>\\u304D</rt></ruby>\",\n            \"type\": \"na\",\n            \"eng\": \"healthy\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u8272<rt>\\u3044\\u308D</rt></ruby><ruby>\\u3005<rt>\\u3044\\u308D</rt></ruby>\",\n            \"type\": \"na\",\n            \"eng\": \"various\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u5FC3<rt>\\u3057\\u3093</rt></ruby><ruby>\\u914D<rt>\\u3071\\u3044</rt></ruby>\",\n            \"type\": \"na\",\n            \"eng\": \"worry, care\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u5ACC<rt>\\u3044\\u3084</rt></ruby>\",\n            \"type\": \"na\",\n            \"eng\": \"unpleasant, detestable\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u5341<rt>\\u3058\\u3085\\u3046</rt></ruby><ruby>\\u5206<rt>\\u3076\\u3093</rt></ruby>\",\n            \"type\": \"na\",\n            \"eng\": \"sufficient\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u7ACB<rt>\\u308A\\u3063</rt></ruby><ruby>\\u6D3E<rt>\\u3071</rt></ruby>\",\n            \"type\": \"na\",\n            \"eng\": \"excellent, splendid\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u540C<rt>\\u304A\\u306A</rt></ruby>\\u3058\",\n            \"type\": \"na\",\n            \"eng\": \"same, alike\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u5927<rt>\\u3060\\u3044</rt></ruby><ruby>\\u4E08<rt>\\u3058\\u3087\\u3046</rt></ruby><ruby>\\u592B<rt>\\u3076</rt></ruby>\",\n            \"type\": \"na\",\n            \"eng\": \"okay, safe\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u771F<rt>\\u307E</rt></ruby>\\u3063<ruby>\\u76F4<rt>\\u3059</rt></ruby>\\u3050\",\n            \"type\": \"na\",\n            \"eng\": \"straight, direct\",\n            \"altOkurigana\": [\n                \"\\u771F\\u76F4\\u3050\",\n                \"\\u771F\\u3059\\u3050\",\n                \"\\u771F\\u3063\\u3059\\u3050\"\n            ]\n        },\n        {\n            \"kanji\": \"<ruby>\\u4E0B<rt>\\u3078</rt></ruby><ruby>\\u624B<rt>\\u305F</rt></ruby>\",\n            \"type\": \"na\",\n            \"eng\": \"unskilled\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u7C21<rt>\\u304B\\u3093</rt></ruby><ruby>\\u5358<rt>\\u305F\\u3093</rt></ruby>\",\n            \"type\": \"na\",\n            \"eng\": \"simple, easy\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u697D<rt>\\u3089\\u304F</rt></ruby>\",\n            \"type\": \"na\",\n            \"eng\": \"comfortable, easy\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u6B8B<rt>\\u3056\\u3093</rt></ruby><ruby>\\u5FF5<rt>\\u306D\\u3093</rt></ruby>\",\n            \"type\": \"na\",\n            \"eng\": \"unfortunate, disappointing\"\n        },\n        {\n            \"kanji\": \"<ruby>\\u5FC5<rt>\\u3072\\u3064</rt></ruby><ruby>\\u8981<rt>\\u3088\\u3046</rt></ruby>\",\n            \"type\": \"na\",\n            \"eng\": \"necessary\"\n        }\n    ]\n};\n\n\n\n\nvar $14c78789229899a8$exports = {};\n\n$parcel$export($14c78789229899a8$exports, \"conjugator_functions\", () => $14c78789229899a8$export$1b246651ba34c93e);\n// vim: set ts=4 sw=4 expandtab\n// (C) 2010 Dan Bravender - licensed under the AGPL 3.0\n// try {\n//     var hangeul       = require('./hangeul'),\n//         pronunciation = require('./pronunciation');\n// } catch(e) {}\n\nvar $8ro1P = parcelRequire(\"8ro1P\");\nvar $666feef8e7b6d3b0$exports = {};\n// vim: set ts=4 sw=4 expandtab\n// (C) 2010 Dan Bravender - licensed under the AGPL 3.0\n\ntry {\n    var $666feef8e7b6d3b0$var$hangeul = (parcelRequire(\"8ro1P\"));\n} catch (e) {}\nvar $666feef8e7b6d3b0$var$pronunciation = {};\n$666feef8e7b6d3b0$var$pronunciation.padchim_to_lead = {\n    \"\\u11A8\": \"\\u1100\",\n    \"\\u11A9\": \"\\u1101\",\n    \"\\u11AB\": \"\\u1102\",\n    \"\\u11AE\": \"\\u1103\",\n    \"\\u11AF\": \"\\u1105\",\n    \"\\u11B7\": \"\\u1106\",\n    \"\\u11B8\": \"\\u1107\",\n    \"\\u11BA\": \"\\u1109\",\n    \"\\u11BB\": \"\\u110A\",\n    \"\\u11BC\": \"\\u110B\",\n    \"\\u11BD\": \"\\u110C\",\n    \"\\u11BE\": \"\\u110E\",\n    \"\\u11BF\": \"\\u110F\",\n    \"\\u11C0\": \"\\u1110\",\n    \"\\u11C1\": \"\\u1111\",\n    \"\\u11C2\": \"\\u1112\"\n};\n$666feef8e7b6d3b0$var$pronunciation.move_padchim_to_replace_eung = function(x, y) {\n    if ($666feef8e7b6d3b0$var$hangeul.padchim(x[x.length - 1]) == \"\\u11BC\") return;\n    if ($666feef8e7b6d3b0$var$hangeul.padchim(x[x.length - 1]) in $666feef8e7b6d3b0$var$pronunciation.padchim_to_lead && $666feef8e7b6d3b0$var$hangeul.lead(y[0]) == \"\\u110B\") return [\n        x.substring(0, x.length - 1) + $666feef8e7b6d3b0$var$hangeul.join($666feef8e7b6d3b0$var$hangeul.lead(x[x.length - 1]), $666feef8e7b6d3b0$var$hangeul.vowel(x[x.length - 1])),\n        $666feef8e7b6d3b0$var$hangeul.join($666feef8e7b6d3b0$var$pronunciation.padchim_to_lead[$666feef8e7b6d3b0$var$hangeul.padchim(x[x.length - 1])], $666feef8e7b6d3b0$var$hangeul.vowel(y[0]), $666feef8e7b6d3b0$var$hangeul.padchim(y[0])) + y.substring(1)\n    ];\n};\n$666feef8e7b6d3b0$var$pronunciation.change_padchim_pronunciation = function(to, changers) {\n    return function(x, y) {\n        if ($666feef8e7b6d3b0$var$hangeul.padchim(x[x.length - 1]) in changers) return [\n            x.substring(0, x.length - 1) + $666feef8e7b6d3b0$var$hangeul.join($666feef8e7b6d3b0$var$hangeul.lead(x[x.length - 1]), $666feef8e7b6d3b0$var$hangeul.vowel(x[x.length - 1]), to),\n            y\n        ];\n    };\n};\n$666feef8e7b6d3b0$var$pronunciation.consonant_combination_rule = function(x_padchim, y_lead, new_padchim, new_lead, y_vowel) {\n    return function(x, y) {\n        if (y_vowel && $666feef8e7b6d3b0$var$hangeul.vowel(y[0]) != y_vowel) return;\n        if (($666feef8e7b6d3b0$var$hangeul.padchim(x[x.length - 1]) == x_padchim || x_padchim == \"*\") && ($666feef8e7b6d3b0$var$hangeul.lead(y[0]) == y_lead || y_lead == \"*\")) return [\n            x.substring(0, x.length - 1) + $666feef8e7b6d3b0$var$hangeul.join($666feef8e7b6d3b0$var$hangeul.lead(x[x.length - 1]), $666feef8e7b6d3b0$var$hangeul.vowel(x[x.length - 1]), new_padchim == \"*\" ? $666feef8e7b6d3b0$var$hangeul.padchim(x[-1]) : new_padchim),\n            $666feef8e7b6d3b0$var$hangeul.join(new_lead == \"*\" ? $666feef8e7b6d3b0$var$hangeul.lead(y[0]) : new_lead, $666feef8e7b6d3b0$var$hangeul.vowel(y[0]), $666feef8e7b6d3b0$var$hangeul.padchim(y[0])) + y.substring(1)\n        ];\n    };\n};\n$666feef8e7b6d3b0$var$pronunciation.skip_non_hangeul = function(x, y) {\n    if (!$666feef8e7b6d3b0$var$hangeul.is_hangeul(x[x.length - 1])) return [\n        x,\n        y,\n        true\n    ];\n};\n$666feef8e7b6d3b0$var$pronunciation.merge_rules = [\n    /* WARNING: Please be careful when adding/modifying rules since padchim \n            hangeul.and lead characters are different Unicode characters. Please see:\n            http://www.kfunigraz.ac.at/~katzer/korean_hangul_unicode.html\n\n   Rules from http://en.wikibooks.org/wiki/Korean/Advanced_Pronunciation_Rules\n*/ $666feef8e7b6d3b0$var$pronunciation.skip_non_hangeul,\n    $666feef8e7b6d3b0$var$pronunciation.consonant_combination_rule(\"\\u11C2\", \"\\u110B\", null, \"\\u110B\", null),\n    // ㄱㄴ becomes ㅇㄴ\n    $666feef8e7b6d3b0$var$pronunciation.consonant_combination_rule(\"\\u11A8\", \"\\u1102\", \"\\u11BC\", \"\\u1102\", null),\n    // ㄱㅁ becomes ㅇㅁ\n    $666feef8e7b6d3b0$var$pronunciation.consonant_combination_rule(\"\\u11A8\", \"\\u1106\", \"\\u11BC\", \"\\u1106\", null),\n    // ㅋㄴ becomes ㅇㄴ\n    $666feef8e7b6d3b0$var$pronunciation.consonant_combination_rule(\"\\u11BF\", \"\\u1102\", \"\\u11BC\", \"\\u1102\", null),\n    // ㅋㅁ becomes ㅇㅁ\n    $666feef8e7b6d3b0$var$pronunciation.consonant_combination_rule(\"\\u11BF\", \"\\u1106\", \"\\u11BC\", \"\\u1106\", null),\n    // ㄷㄴ becomes ㄴㄴ\n    $666feef8e7b6d3b0$var$pronunciation.consonant_combination_rule(\"\\u11AE\", \"\\u1102\", \"\\u11AB\", \"\\u1102\", null),\n    // ㄷㅁ becomes ㄴㅁ\n    $666feef8e7b6d3b0$var$pronunciation.consonant_combination_rule(\"\\u11AE\", \"\\u1106\", \"\\u11AB\", \"\\u1106\", null),\n    // ㅅㄴ becomes ㄴㄴ\n    $666feef8e7b6d3b0$var$pronunciation.consonant_combination_rule(\"\\u11BA\", \"\\u1102\", \"\\u11AB\", \"\\u1102\", null),\n    // ㅆㄴ becomes ㄴㄴ\n    $666feef8e7b6d3b0$var$pronunciation.consonant_combination_rule(\"\\u11BB\", \"\\u1102\", \"\\u11AB\", \"\\u1102\", null),\n    // ㅅㅁ becomes ㄴㅁ\n    $666feef8e7b6d3b0$var$pronunciation.consonant_combination_rule(\"\\u11BA\", \"\\u1106\", \"\\u11AB\", \"\\u1106\", null),\n    // ㄱ ㅆ becomes ㄱ ㅆ\n    $666feef8e7b6d3b0$var$pronunciation.consonant_combination_rule(\"\\u11A8\", \"\\u1109\", \"\\u11A8\", \"\\u110A\", null),\n    // ㅈㄴ becomes ㄴㄴ\n    $666feef8e7b6d3b0$var$pronunciation.consonant_combination_rule(\"\\u11BD\", \"\\u1102\", \"\\u11AB\", \"\\u1102\", null),\n    // ㅈㅁ becomes ㄴㅁ\n    $666feef8e7b6d3b0$var$pronunciation.consonant_combination_rule(\"\\u11BD\", \"\\u1106\", \"\\u11AB\", \"\\u1106\", null),\n    // ㅊㄴ becomes ㄴㄴ\n    $666feef8e7b6d3b0$var$pronunciation.consonant_combination_rule(\"\\u11BE\", \"\\u1102\", \"\\u11AB\", \"\\u1102\", null),\n    // ㅊㅁ becomes ㄴㅁ\n    $666feef8e7b6d3b0$var$pronunciation.consonant_combination_rule(\"\\u11BE\", \"\\u1106\", \"\\u11AB\", \"\\u1106\", null),\n    // ㅌㄴ becomes ㄴㄴ\n    $666feef8e7b6d3b0$var$pronunciation.consonant_combination_rule(\"\\u11C0\", \"\\u1102\", \"\\u11AB\", \"\\u1102\", null),\n    // ㅌㅁ becomes ㄴㅁ\n    $666feef8e7b6d3b0$var$pronunciation.consonant_combination_rule(\"\\u11C0\", \"\\u1106\", \"\\u11AB\", \"\\u1106\", null),\n    //  ㅎㄴ becomes ㄴㄴ\n    $666feef8e7b6d3b0$var$pronunciation.consonant_combination_rule(\"\\u11C2\", \"\\u1102\", \"\\u11AB\", \"\\u1102\", null),\n    //  ㅎㅁ becomes ㄴㅁ\n    $666feef8e7b6d3b0$var$pronunciation.consonant_combination_rule(\"\\u11C2\", \"\\u1106\", \"\\u11AB\", \"\\u1106\", null),\n    //  ㅂㄴ becomes ㅁㄴ\n    $666feef8e7b6d3b0$var$pronunciation.consonant_combination_rule(\"\\u11B8\", \"\\u1102\", \"\\u11B7\", \"\\u1102\", null),\n    // ㅂㅁ becomes ㅁㅁ\n    $666feef8e7b6d3b0$var$pronunciation.consonant_combination_rule(\"\\u11B8\", \"\\u1106\", \"\\u11B7\", \"\\u1106\", null),\n    // ㅍㄴ becomes ㅁㄴ\n    $666feef8e7b6d3b0$var$pronunciation.consonant_combination_rule(\"\\u11C1\", \"\\u1102\", \"\\u11B7\", \"\\u1102\", null),\n    // ㅍㅁ becomes ㅁㅁ\n    $666feef8e7b6d3b0$var$pronunciation.consonant_combination_rule(\"\\u11C1\", \"\\u1106\", \"\\u11B7\", \"\\u1106\", null),\n    //  ㄱㅎ becomes ㅋ\n    $666feef8e7b6d3b0$var$pronunciation.consonant_combination_rule(\"\\u11A8\", \"\\u1112\", null, \"\\u110F\", null),\n    //  ㅎㄱ becomes ㅋ\n    $666feef8e7b6d3b0$var$pronunciation.consonant_combination_rule(\"\\u11C2\", \"\\u1100\", null, \"\\u110F\", null),\n    // ㅎㄷ becomes ㅌ\n    $666feef8e7b6d3b0$var$pronunciation.consonant_combination_rule(\"\\u11C2\", \"\\u1103\", null, \"\\u1110\", null),\n    // ㄷㅎ becomes ㅌ\n    $666feef8e7b6d3b0$var$pronunciation.consonant_combination_rule(\"\\u11AE\", \"\\u1112\", null, \"\\u1110\", null),\n    // ㅂㅎ becomes ㅍ\n    $666feef8e7b6d3b0$var$pronunciation.consonant_combination_rule(\"\\u11B8\", \"\\u1112\", null, \"\\u1111\", null),\n    // ㅎㅂ becomes ㅍ\n    $666feef8e7b6d3b0$var$pronunciation.consonant_combination_rule(\"\\u11C2\", \"\\u1107\", null, \"\\u1111\", null),\n    // ㅈㅎ becomes ㅊ\n    $666feef8e7b6d3b0$var$pronunciation.consonant_combination_rule(\"\\u11BD\", \"\\u1112\", null, \"\\u110E\", null),\n    // ㅎㅈ becomes ㅊ\n    $666feef8e7b6d3b0$var$pronunciation.consonant_combination_rule(\"\\u11C2\", \"\\u110C\", null, \"\\u110E\", null),\n    // ㅎㅅ becomes ㅆ\n    $666feef8e7b6d3b0$var$pronunciation.consonant_combination_rule(\"\\u11C2\", \"\\u1109\", null, \"\\u110A\", null),\n    //ㄷ이 becomes 지\n    $666feef8e7b6d3b0$var$pronunciation.consonant_combination_rule(\"\\u11AE\", \"\\u110B\", null, \"\\u110C\", \"\\u3163\"),\n    //ㅌ이 becomes 치\n    $666feef8e7b6d3b0$var$pronunciation.consonant_combination_rule(\"\\u11C0\", \"\\u110B\", null, \"\\u110E\", \"\\u3163\"),\n    //ㄱㄹ becomes ㅇㄴ\n    $666feef8e7b6d3b0$var$pronunciation.consonant_combination_rule(\"\\u11A8\", \"\\u1105\", \"\\u11BC\", \"\\u1102\", null),\n    //ㄴㄹ becomes ㄹㄹ // TODO: (not sure how to fix pronunciation) also sometimes ㄴㄴ\n    $666feef8e7b6d3b0$var$pronunciation.consonant_combination_rule(\"\\u11AB\", \"\\u1105\", \"\\u11AF\", \"\\u1105\", null),\n    // ㅁㄹ becomes ㅁㄴ\n    $666feef8e7b6d3b0$var$pronunciation.consonant_combination_rule(\"\\u11B7\", \"\\u1105\", \"\\u11B7\", \"\\u1102\", null),\n    // ㅇㄹ becomes ㅇㄴ\n    $666feef8e7b6d3b0$var$pronunciation.consonant_combination_rule(\"\\u11BC\", \"\\u1105\", \"\\u11BC\", \"\\u1102\", null),\n    // ㅂㄹ becomes ㅁㄴ\n    $666feef8e7b6d3b0$var$pronunciation.consonant_combination_rule(\"\\u11B8\", \"\\u1105\", \"\\u11B7\", \"\\u1102\", null),\n    // ㅅ ㅎ becomes ㅌ\n    $666feef8e7b6d3b0$var$pronunciation.consonant_combination_rule(\"\\u11BA\", \"\\u1112\", null, \"\\u1110\", null),\n    // 받침 followed by ㅇ: replace ㅇ with 받침 (use second 받침 if there are two). Otherwise, 받침 followed by consonant:\n    $666feef8e7b6d3b0$var$pronunciation.move_padchim_to_replace_eung,\n    //    * ㄱ, ㅋ: like ㄱ\n    //    * ㄷ, ㅅ, ㅈ, ㅊ, ㅌ, ㅎ: like ㄷ\n    //    * ㅂ, ㅍ: like ㅂ\n    // Double padchim rules\n    $666feef8e7b6d3b0$var$pronunciation.consonant_combination_rule(\"\\u11B1\", \"\\u110B\", \"\\u11AF\", \"\\u1106\", null),\n    $666feef8e7b6d3b0$var$pronunciation.consonant_combination_rule(\"\\u11B9\", \"\\u110B\", \"\\u11B8\", \"\\u1109\", null),\n    $666feef8e7b6d3b0$var$pronunciation.consonant_combination_rule(\"\\u11B1\", \"*\", \"\\u11B7\", \"*\", null),\n    $666feef8e7b6d3b0$var$pronunciation.consonant_combination_rule(\"\\u11B6\", \"\\u110B\", null, \"\\u1105\", null),\n    $666feef8e7b6d3b0$var$pronunciation.consonant_combination_rule(\"\\u11B6\", \"*\", \"\\u11AF\", \"*\", null),\n    $666feef8e7b6d3b0$var$pronunciation.consonant_combination_rule(\"\\u11AC\", \"\\u110B\", \"\\u11AB\", \"\\u110C\", null),\n    $666feef8e7b6d3b0$var$pronunciation.consonant_combination_rule(\"\\u11AC\", \"*\", \"\\u11AB\", \"*\", null),\n    // 학교 -> 학꾜\n    $666feef8e7b6d3b0$var$pronunciation.consonant_combination_rule(\"\\u11A8\", \"\\u1100\", \"\\u11A8\", \"\\u1101\", null),\n    // 밥솥-> 밥쏟\n    $666feef8e7b6d3b0$var$pronunciation.consonant_combination_rule(\"\\u11B8\", \"\\u1109\", \"\\u11B8\", \"\\u110A\", null),\n    // 있습니다 -> 이씀니다\n    $666feef8e7b6d3b0$var$pronunciation.consonant_combination_rule(\"\\u11BB\", \"\\u1109\", null, \"\\u110A\", null),\n    $666feef8e7b6d3b0$var$pronunciation.change_padchim_pronunciation(\"\\u11AE\", {\n        \"\\u11BA\": true,\n        \"\\u11BB\": true,\n        \"\\u11BD\": true,\n        \"\\u11BE\": true,\n        \"\\u11C0\": true,\n        \"\\u11C2\": true\n    }),\n    $666feef8e7b6d3b0$var$pronunciation.change_padchim_pronunciation(\"\\u11B8\", {\n        \"\\u11C1\": true\n    }),\n    $666feef8e7b6d3b0$var$pronunciation.consonant_combination_rule(\"\\u11AE\", \"\\u1103\", null, \"\\u1104\"),\n    function(x, y) {\n        return [\n            x,\n            y\n        ];\n    }\n];\n$666feef8e7b6d3b0$var$pronunciation.apply_rules = function(x, y) {\n    result = null;\n    $666feef8e7b6d3b0$var$pronunciation.merge_rules.forEach(function(rule) {\n        merge = rule(x, y);\n        if (merge && merge.length == 3) {\n            x = merge[0];\n            y = merge[1];\n            stop = merge[2];\n            if (stop) result = x + y;\n        } else if (merge) {\n            x = merge[0];\n            y = merge[1];\n        }\n    });\n    if (result) return result;\n    return x + y;\n};\n$666feef8e7b6d3b0$var$pronunciation.get_pronunciation = function(word) {\n    return (word + String.fromCharCode(0)).split(\"\").reduce($666feef8e7b6d3b0$var$pronunciation.apply_rules).substring(0, word.length);\n};\n// Export functions to node\ntry {\n    for(f in $666feef8e7b6d3b0$var$pronunciation)$666feef8e7b6d3b0$exports[f] = $666feef8e7b6d3b0$var$pronunciation[f];\n} catch (e) {}\n\n\nvar $14c78789229899a8$var$conjugator = {};\n$14c78789229899a8$var$conjugator.no_padchim_rule = function(characters) {\n    /* no_padchim_rule is a helper function for defining merges where a\n        character will take the padchim of a merged character if the first\n        character doesn't already have a padchim, .e.g. 습 -> 가 + 습니다 -> 갑니다.\n    */ return function(x, y) {\n        if (!(0, $8ro1P.hangeul).padchim(x.charAt(x.length - 1)) && y[0] in characters) return [\n            \"borrow padchim\",\n            x.substring(0, x.length - 1) + (0, $8ro1P.hangeul).join((0, $8ro1P.hangeul).lead(x[x.length - 1]), (0, $8ro1P.hangeul).vowel(x[x.length - 1]), (0, $8ro1P.hangeul).padchim(y[0])) + y.substring(1)\n        ];\n    };\n};\n$14c78789229899a8$var$conjugator.vowel_contraction = function(vowel1, vowel2, new_vowel, trace) {\n    /* vowel contraction is a helper function for defining common contractions\n       between a character without a padchim and a character that starts with\n        'ᄋ', e.g. ㅐ + ㅕ -> ㅐ when applied to 해 + 였 yields 했.\n    */ return function(x, y) {\n        if ((0, $8ro1P.hangeul).match(x.charAt(x.length - 1), \"*\", vowel1, null) && (0, $8ro1P.hangeul).match(y.charAt(0), \"\\u110B\", vowel2, \"*\")) return [\n            \"vowel contraction [\" + vowel1 + \" \" + vowel2 + \" -> \" + new_vowel + \"]\",\n            x.substring(0, x.length - 1) + (0, $8ro1P.hangeul).join((0, $8ro1P.hangeul).lead(x.charAt(x.length - 1)), new_vowel, (0, $8ro1P.hangeul).padchim(y[0])) + y.substring(1)\n        ];\n    };\n};\n$14c78789229899a8$var$conjugator.drop_l = function(x, y) {\n    if ((0, $8ro1P.hangeul).padchim(x[x.length - 1]) == \"\\u11AF\") {\n        $14c78789229899a8$var$conjugator.reasons.push(\"drop \\u3139\");\n        return x.substring(0, x.length - 1) + (0, $8ro1P.hangeul).join((0, $8ro1P.hangeul).lead(x[x.length - 1]), (0, $8ro1P.hangeul).vowel(x[x.length - 1])) + y;\n    }\n};\n$14c78789229899a8$var$conjugator.drop_l_and_borrow_padchim = function(x, y) {\n    if ((0, $8ro1P.hangeul).padchim(x.charAt(x.length - 1)) == \"\\u11AF\") {\n        $14c78789229899a8$var$conjugator.reasons.push(\"drop \" + (0, $8ro1P.hangeul).padchim(x.charAt(x.length - 1)) + \" borrow padchim\");\n        return x.substring(0, x.length - 1) + (0, $8ro1P.hangeul).join((0, $8ro1P.hangeul).lead(x[x.length - 1]), (0, $8ro1P.hangeul).vowel(x[x.length - 1]), (0, $8ro1P.hangeul).padchim(y[0])) + y.substring(1);\n    }\n};\n$14c78789229899a8$var$conjugator.dont_insert_eh = function(x, y) {\n    if ((0, $8ro1P.hangeul).padchim(x.charAt(x.length - 1)) == \"\\u11AF\" && y[0] == \"\\uBA74\") return [\n        \"join\",\n        x + y\n    ];\n};\n$14c78789229899a8$var$conjugator.insert_eh = function(characters) {\n    return function(x, y) {\n        if ((0, $8ro1P.hangeul).padchim(x.charAt(x.length - 1)) && y[0] in characters) return [\n            \"padchim + consonant -> insert \\uC73C\",\n            x + \"\\uC73C\" + y\n        ];\n    };\n};\n$14c78789229899a8$var$conjugator.lm_merge = function(x, y) {\n    if ((0, $8ro1P.hangeul).padchim(x.charAt(x.length - 1)) == \"\\u11AF\" && y[0] == \"\\uC74C\") return [\n        \"\\u3139 + \\u3141 -> \\u11B1\",\n        x.substring(0, x.length - 1) + (0, $8ro1P.hangeul).join((0, $8ro1P.hangeul).lead(x[x.length - 1]), (0, $8ro1P.hangeul).vowel(x[x.length - 1]), \"\\u11B1\")\n    ];\n};\n/* merge rules is a list of rules that are applied in order when merging a verb \n   stem with a tense ending\n*/ $14c78789229899a8$var$conjugator.merge_rules = [\n    $14c78789229899a8$var$conjugator.no_padchim_rule({\n        \"\\uC744\": true,\n        \"\\uC2B5\": true,\n        \"\\uC74D\": true,\n        \"\\uB294\": true,\n        \"\\uC74C\": true\n    }),\n    $14c78789229899a8$var$conjugator.lm_merge,\n    $14c78789229899a8$var$conjugator.vowel_contraction(\"\\u3150\", \"\\u3153\", \"\\u3150\"),\n    $14c78789229899a8$var$conjugator.vowel_contraction(\"\\u3161\", \"\\u3153\", \"\\u3153\"),\n    $14c78789229899a8$var$conjugator.vowel_contraction(\"\\u315C\", \"\\u3153\", \"\\u315D\"),\n    $14c78789229899a8$var$conjugator.vowel_contraction(\"\\u3157\", \"\\u314F\", \"\\u3158\"),\n    $14c78789229899a8$var$conjugator.vowel_contraction(\"\\u315A\", \"\\u3153\", \"\\u3159\"),\n    $14c78789229899a8$var$conjugator.vowel_contraction(\"\\u3159\", \"\\u3153\", \"\\u3159\"),\n    $14c78789229899a8$var$conjugator.vowel_contraction(\"\\u3158\", \"\\u3153\", \"\\u3158\"),\n    $14c78789229899a8$var$conjugator.vowel_contraction(\"\\u315D\", \"\\u3153\", \"\\u315D\"),\n    $14c78789229899a8$var$conjugator.vowel_contraction(\"\\u314F\", \"\\u314F\", \"\\u314F\"),\n    $14c78789229899a8$var$conjugator.vowel_contraction(\"\\u3161\", \"\\u314F\", \"\\u314F\"),\n    $14c78789229899a8$var$conjugator.vowel_contraction(\"\\u3163\", \"\\u3153\", \"\\u3155\"),\n    $14c78789229899a8$var$conjugator.vowel_contraction(\"\\u3153\", \"\\u3153\", \"\\u3153\"),\n    $14c78789229899a8$var$conjugator.vowel_contraction(\"\\u3153\", \"\\u3163\", \"\\u3150\"),\n    $14c78789229899a8$var$conjugator.vowel_contraction(\"\\u314F\", \"\\u3163\", \"\\u3150\"),\n    $14c78789229899a8$var$conjugator.vowel_contraction(\"\\u3151\", \"\\u3163\", \"\\u3152\"),\n    $14c78789229899a8$var$conjugator.vowel_contraction(\"\\u3152\", \"\\u3153\", \"\\u3152\"),\n    $14c78789229899a8$var$conjugator.vowel_contraction(\"\\u3154\", \"\\u3153\", \"\\u3154\"),\n    $14c78789229899a8$var$conjugator.vowel_contraction(\"\\u3155\", \"\\u3153\", \"\\u3155\"),\n    $14c78789229899a8$var$conjugator.vowel_contraction(\"\\u314F\", \"\\u3155\", \"\\u3150\"),\n    $14c78789229899a8$var$conjugator.vowel_contraction(\"\\u3156\", \"\\u3153\", \"\\u3156\"),\n    $14c78789229899a8$var$conjugator.vowel_contraction(\"\\u315E\", \"\\u3153\", \"\\u315E\"),\n    $14c78789229899a8$var$conjugator.dont_insert_eh,\n    $14c78789229899a8$var$conjugator.insert_eh({\n        \"\\uBA74\": true,\n        \"\\uC138\": true,\n        \"\\uC2ED\": true\n    }),\n    // default rule\n    function(x, y) {\n        return [\n            \"join\",\n            x + y\n        ];\n    }\n];\n$14c78789229899a8$var$conjugator.reasons = [];\n$14c78789229899a8$var$conjugator.merge = function(x, y) {\n    /* concatenates every element in a list using the rules to\n       merge the strings\n    */ var response = null;\n    $14c78789229899a8$var$conjugator.merge_rules.forEach(function(rule) {\n        if (!response) {\n            let output = rule(x, y);\n            if (output) {\n                $14c78789229899a8$var$conjugator.reasons.push((output[0] ? output[0] : \"\") + \" (\" + x + \" + \" + y + \" -> \" + output[1] + \")\");\n                response = output[1];\n            }\n        }\n    });\n    return response;\n};\n$14c78789229899a8$var$conjugator.both_regular_and_irregular = {\n    \"\\uC77C\": true,\n    \"\\uACF1\": true,\n    \"\\uD30C\\uBB3B\": true,\n    \"\\uB204\\uB974\": true,\n    \"\\uBB3B\": true,\n    \"\\uC774\\uB974\": true,\n    \"\\uB418\\uBB3B\": true,\n    \"\\uC370\": true,\n    \"\\uBD93\": true,\n    \"\\uB4E4\\uAE4C\\uBD88\": true,\n    \"\\uAD7D\": true,\n    \"\\uAC77\": true,\n    \"\\uB4A4\\uAE4C\\uBD88\": true,\n    \"\\uAE4C\\uBD88\": true\n};\n$14c78789229899a8$var$conjugator.not_p_irregular = {\n    \"\\uD138\\uC369\\uC774\\uC7A1\": true,\n    \"\\uB118\\uACA8\\uC7A1\": true,\n    \"\\uC6B0\\uC811\": true,\n    \"\\uC785\": true,\n    \"\\uB9DE\\uC811\": true,\n    \"\\uBB38\\uC7A1\": true,\n    \"\\uB2E4\\uC7A1\": true,\n    \"\\uAE4C\\uB4A4\\uC9D1\": true,\n    \"\\uBC30\\uC881\": true,\n    \"\\uBAA9\\uC7A1\": true,\n    \"\\uB044\\uC9D1\": true,\n    \"\\uC7A1\": true,\n    \"\\uC634\\uCF1C\\uC7A1\": true,\n    \"\\uAC80\\uC7A1\": true,\n    \"\\uB418\\uC21C\\uB77C\\uC7A1\": true,\n    \"\\uB0B4\\uC539\": true,\n    \"\\uBAA8\\uC9D1\": true,\n    \"\\uB530\\uC7A1\": true,\n    \"\\uC5C7\\uC7A1\": true,\n    \"\\uAE4C\\uC9D1\": true,\n    \"\\uACB9\\uC9D1\": true,\n    \"\\uC904\\uD1B5\\uBF51\": true,\n    \"\\uBC84\\uB974\\uC9D1\": true,\n    \"\\uC9C0\\uB974\\uC7A1\": true,\n    \"\\uCD94\\uCF1C\\uC7A1\": true,\n    \"\\uC5C5\": true,\n    \"\\uB418\\uC220\\uB798\\uC7A1\": true,\n    \"\\uB418\\uC811\": true,\n    \"\\uC881\\uB514\\uC881\": true,\n    \"\\uB354\\uC704\\uC7A1\": true,\n    \"\\uB9D0\\uC539\": true,\n    \"\\uB0B4\\uBF51\": true,\n    \"\\uC9D1\": true,\n    \"\\uAC78\\uBA38\\uC7A1\": true,\n    \"\\uD718\\uC5B4\\uC7A1\": true,\n    \"\\uAFF0\\uC785\": true,\n    \"\\uD669\\uC7A1\": true,\n    \"\\uC5D0\\uAD7D\": true,\n    \"\\uB0B4\\uAD7D\": true,\n    \"\\uB530\\uB77C\\uC7A1\": true,\n    \"\\uB9DE\\uB4A4\\uC9D1\": true,\n    \"\\uB458\\uB7EC\\uC5C5\": true,\n    \"\\uB298\\uC7A1\": true,\n    \"\\uB044\\uC7A1\": true,\n    \"\\uC6B0\\uADF8\\uB824\\uC7A1\": true,\n    \"\\uC5B4\\uC90D\": true,\n    \"\\uC5B8\\uAC78\\uC785\": true,\n    \"\\uB4E4\\uC774\\uACF1\": true,\n    \"\\uAEF4\\uC7A1\": true,\n    \"\\uACF1 \\uC811\": true,\n    \"\\uD6D4\\uCF1C\\uC7A1\": true,\n    \"\\uB2A6\\uCD94\\uC7A1\": true,\n    \"\\uAC08\\uC544\\uC785\": true,\n    \"\\uCE5C\\uC881\": true,\n    \"\\uD76C\\uC9DC\\uBF51\": true,\n    \"\\uB9C8\\uC74C\\uC7A1\": true,\n    \"\\uAC1C\\uBBF8\\uC7A1\": true,\n    \"\\uC634\\uC539\": true,\n    \"\\uCE58\\uC7A1\": true,\n    \"\\uADF8\\uB7EC\\uC7A1\": true,\n    \"\\uC6C0\\uCF1C\\uC7A1\": true,\n    \"\\uC539\": true,\n    \"\\uBE44\\uC9D1\": true,\n    \"\\uAF3D\": true,\n    \"\\uC0B4\\uC7A1\": true,\n    \"\\uC8C4\\uC785\": true,\n    \"\\uC878\\uC7A1\": true,\n    \"\\uAC00\\uB824\\uC7A1\": true,\n    \"\\uBF51\": true,\n    \"\\uAC77\\uC5B4\\uC7A1\": true,\n    \"\\uD5D0\\uC7A1\": true,\n    \"\\uB3CC\\uB77C\\uC785\": true,\n    \"\\uB367\\uC7A1\": true,\n    \"\\uC595\\uC7A1\": true,\n    \"\\uB0AB\\uC7A1\": true,\n    \"\\uBD80\\uC5EC\\uC7A1\": true,\n    \"\\uB9DE\\uBD99\\uC7A1\": true,\n    \"\\uAC78\\uC785\": true,\n    \"\\uC8FC\\uB984\\uC7A1\": true,\n    \"\\uAC77\\uC5B4\\uC785\": true,\n    \"\\uBE4C\\uBBF8\\uC7A1\": true,\n    \"\\uAC1C\\uC7A1\": true,\n    \"\\uAC89\\uC7A1\": true,\n    \"\\uC548\\uCAD1\\uC7A1\": true,\n    \"\\uC881\": true,\n    \"\\uD798\\uC785\": true,\n    \"\\uAC77\\uC7A1\": true,\n    \"\\uBC14\\uB974\\uC9D1\": true,\n    \"\\uAC10\\uC539\": true,\n    \"\\uC9D3\\uC539\": true,\n    \"\\uC190\\uC7A1\": true,\n    \"\\uD3EC\\uC9D1\": true,\n    \"\\uBD99\\uC7A1\": true,\n    \"\\uB0AE\\uC7A1\": true,\n    \"\\uCC45\\uC7A1\": true,\n    \"\\uACF1\\uC7A1\": true,\n    \"\\uD749\\uC7A1\": true,\n    \"\\uB4A4\\uC9D1\": true,\n    \"\\uB561\\uC7A1\": true,\n    \"\\uC5B4\\uB9BC\\uC7A1\": true,\n    \"\\uB367\\uAEF4\\uC785\": true,\n    \"\\uC218\\uC90D\": true,\n    \"\\uB4A4\\uC7A1\": true,\n    \"\\uAF2C\\uC9D1\": true,\n    \"\\uC608\\uAD7D\": true,\n    \"\\uB36E\\uCCD0\\uC7A1\": true,\n    \"\\uD5DB\\uC7A1\": true,\n    \"\\uB418\\uC539\": true,\n    \"\\uB0AE\\uCD94\\uC7A1\": true,\n    \"\\uB0A0\\uD30C\\uB78C\\uC7A1\": true,\n    \"\\uD2C0\\uC5B4\\uC7A1\": true,\n    \"\\uD5E4\\uC9D1\": true,\n    \"\\uB0A8\\uC758\\uB2EC\\uC7A1\": true,\n    \"\\uBC14\\uB85C\\uC7A1\": true,\n    \"\\uD760\\uC7A1\": true,\n    \"\\uD30C\\uC7A1\": true,\n    \"\\uC5BC\\uCD94\\uC7A1\": true,\n    \"\\uC190\\uAF3D\": true,\n    \"\\uC811\": true,\n    \"\\uCC28\\uB824\\uC785\": true,\n    \"\\uACE8\\uB77C\\uC7A1\": true,\n    \"\\uAC70\\uBA38\\uC7A1\": true,\n    \"\\uD6C4\\uB824\\uC7A1\": true,\n    \"\\uBA38\\uC90D\": true,\n    \"\\uB109\\uC7A5\\uBF51\": true,\n    \"\\uC0AC\\uB85C\\uC7A1\": true,\n    \"\\uB367\\uC785\": true,\n    \"\\uAEF4\\uC785\": true,\n    \"\\uC5BC\\uC785\": true,\n    \"\\uC6B0\\uC9D1\": true,\n    \"\\uC124\\uC7A1\": true,\n    \"\\uB2A6\\uC7A1\": true,\n    \"\\uBE44\\uC881\": true,\n    \"\\uACE0\\uB974\\uC7A1\": true,\n    \"\\uB54C\\uB824\\uC7A1\": true,\n    \"\\uB5BC\\uC9D1\": true,\n    \"\\uB418\\uC7A1\": true,\n    \"\\uD648\\uCF1C\\uC7A1\": true,\n    \"\\uB0B4\\uACF1\": true,\n    \"\\uACF1\\uC539\": true,\n    \"\\uBE7C\\uC785\": true,\n    \"\\uB4E4\\uC774\\uAD7D\": true,\n    \"\\uC0C8\\uC7A1\": true,\n    \"\\uC774\\uB974\\uC9D1\": true,\n    \"\\uB5A8\\uCCD0\\uC785\": true\n};\n$14c78789229899a8$var$conjugator.not_s_irregular = {\n    \"\\uB0B4\\uC19F\": true,\n    \"\\uBE57\": true,\n    \"\\uB4DC\\uC19F\": true,\n    \"\\uBE44\\uC6C3\": true,\n    \"\\uBE8F\": true,\n    \"\\uC0D8\\uC19F\": true,\n    \"\\uBC97\": true,\n    \"\\uB4E4\\uC774\\uC6C3\": true,\n    \"\\uC19F\": true,\n    \"\\uB418\\uBE8F\": true,\n    \"\\uBE7C\\uC557\": true,\n    \"\\uBC27\": true,\n    \"\\uC560\\uAE0B\": true,\n    \"\\uC9DC\\uB4DC\\uB77C\\uC6C3\": true,\n    \"\\uC5B4\\uADF8\\uC19F\": true,\n    \"\\uB4E4\\uC19F\": true,\n    \"\\uC53B\": true,\n    \"\\uBE68\\uAC00\\uBC97\": true,\n    \"\\uAE43\": true,\n    \"\\uBC8C\\uAC70\\uBC97\": true,\n    \"\\uC5C7\": true,\n    \"\\uB418\\uBE7C\\uC557\": true,\n    \"\\uC6C3\": true,\n    \"\\uC557\": true,\n    \"\\uD5D0\\uBC97\": true,\n    \"\\uC6A9\\uC19F\": true,\n    \"\\uB367\\uC19F\": true,\n    \"\\uBC1C\\uAC00\\uBC97\": true,\n    \"\\uBED8\\uAC70\\uBC97\": true,\n    \"\\uB0A0\\uC19F\": true,\n    \"\\uCE58\\uC19F\": true\n};\n$14c78789229899a8$var$conjugator.not_d_irregular = {\n    \"\\uB9DE\\uBC1B\": true,\n    \"\\uB0B4\\uB51B\": true,\n    \"\\uB0B4\\uB9AC\\uBC1B\": true,\n    \"\\uBC8B\": true,\n    \"\\uB4A4\\uB2EB\": true,\n    \"\\uC8FC\\uACE0\\uBC1B\": true,\n    \"\\uACF5\\uC5BB\": true,\n    \"\\uBB34\\uB72F\": true,\n    \"\\uBB3C\\uC5B4\\uB72F\": true,\n    \"\\uC5EC\\uB2EB\": true,\n    \"\\uADF8\\uB7EC\\uBB3B\": true,\n    \"\\uC787\\uB2EB\": true,\n    \"\\uB367\\uBB3B\": true,\n    \"\\uB418\\uBC1B\": true,\n    \"\\uBED7\": true,\n    \"\\uC62C\\uB9AC\\uB2EB\": true,\n    \"\\uD5D0\\uB72F\": true,\n    \"\\uB4E4\\uC774\\uB2EB\": true,\n    \"\\uD65C\\uAC77\": true,\n    \"\\uAC89\\uBB3B\": true,\n    \"\\uB2EB\": true,\n    \"\\uCC3D\\uBC1B\": true,\n    \"\\uAC74\\uB124\\uBC1B\": true,\n    \"\\uBB3C\\uC190\\uBC1B\": true,\n    \"\\uB4E4\\uC774\\uBC1B\": true,\n    \"\\uAC15\\uC694\\uBC1B\": true,\n    \"\\uB0B4\\uB9AC\\uBC8B\": true,\n    \"\\uBC1B\": true,\n    \"\\uC774\\uC5B4\\uBC1B\": true,\n    \"\\uBD80\\uB974\\uAC77\": true,\n    \"\\uC751\\uBC1B\": true,\n    \"\\uAC80\\uB72F\": true,\n    \"\\uC778\\uC815\\uBC1B\": true,\n    \"\\uB0B4\\uB824\\uB51B\": true,\n    \"\\uB0B4\\uC3DF\": true,\n    \"\\uB0B4\\uB9AC\\uBED7\": true,\n    \"\\uB108\\uB984\\uBC1B\": true,\n    \"\\uC138\\uBC1B\": true,\n    \"\\uB0B4 \\uB3CB\": true,\n    \"\\uB3CC\\uB824\\uBC1B\": true,\n    \"\\uC950\\uC5B4\\uB72F\": true,\n    \"\\uAEF4\\uBB3B\": true,\n    \"\\uBCF8\\uBC1B\": true,\n    \"\\uB4A4\\uBC1B\": true,\n    \"\\uAC15\\uC885\\uBC1B\": true,\n    \"\\uB0B4\\uB9AC\\uB2EB\": true,\n    \"\\uB5A0\\uBC1B\": true,\n    \"\\uD14C\\uBC1B\": true,\n    \"\\uB0B4\\uBC1B\": true,\n    \"\\uD760\\uB72F\": true,\n    \"\\uB450\\uB0A8\\uBC1B\": true,\n    \"\\uCE58\\uBC1B\": true,\n    \"\\uBD80\\uB974\\uB3CB\": true,\n    \"\\uB300\\uBC1B\": true,\n    \"\\uC124\\uAD73\": true,\n    \"\\uCC98\\uB2EB\": true,\n    \"\\uC5BB\": true,\n    \"\\uB4E4\\uC774\\uB3CB\": true,\n    \"\\uB3CB\": true,\n    \"\\uC8C4\\uBC1B\": true,\n    \"\\uC3DF\": true,\n    \"\\uC528\\uBC1B\": true,\n    \"\\uB531\\uC7A5\\uBC1B\": true,\n    \"\\uCE58\\uAC77\": true,\n    \"\\uBBFF\": true,\n    \"\\uCE58\\uBC8B\": true,\n    \"\\uBC84\\uB9BC\\uBC1B\": true,\n    \"\\uBD81\\uB3CB\": true,\n    \"\\uB51B\": true,\n    \"\\uCE58\\uACE0\\uBC1B\": true,\n    \"\\uC6B1\\uAC77\": true,\n    \"\\uBB3C\\uB824\\uBC1B\": true,\n    \"\\uB72F\": true,\n    \"\\uC934\\uB72F\": true,\n    \"\\uB118\\uACA8\\uBC1B\": true,\n    \"\\uC548\\uBC1B\": true,\n    \"\\uB0B4\\uBED7\": true,\n    \"\\uB0B4\\uB9AC\\uC3DF\": true,\n    \"\\uBC8B\\uB51B\": true,\n    \"\\uB4A4\\uBB3B\": true,\n    \"\\uBED7\\uB51B\": true,\n    \"\\uCE58\\uBED7\": true,\n    \"\\uCE58\\uB2EB\": true,\n    \"\\uC904\\uBC11\\uAC77\": true,\n    \"\\uAD73\": true,\n    \"\\uB0B4\\uB2EB\": true,\n    \"\\uB0B4\\uB9BC\\uBC1B\": true\n};\n$14c78789229899a8$var$conjugator.not_h_irregular = {\n    \"\\uB4E4\\uC774\\uC88B\": true,\n    \"\\uD130\\uB193\": true,\n    \"\\uC811\\uC5B4\\uB193\": true,\n    \"\\uC88B\": true,\n    \"\\uD480\\uC5B4\\uB193\": true,\n    \"\\uB0B4\\uC313\": true,\n    \"\\uAF34\\uC88B\": true,\n    \"\\uCE58\\uC313\": true,\n    \"\\uBB3C\\uC5B4\\uB123\": true,\n    \"\\uC787\\uB2FF\": true,\n    \"\\uB05D\\uB2FF\": true,\n    \"\\uADF8\\uB7EC\\uB123\": true,\n    \"\\uBF55\\uB193\": true,\n    \"\\uB0B3\": true,\n    \"\\uB0B4\\uB9AC\\uCC27\": true,\n    \"\\uD798\\uB2FF\": true,\n    \"\\uB0B4\\uB824\\uB193\": true,\n    \"\\uC138\\uB193\": true,\n    \"\\uB458\\uB7EC\\uB193\": true,\n    \"\\uB4E4\\uB193\": true,\n    \"\\uB9DE\\uCC27\": true,\n    \"\\uC7A1\\uC544\\uB123\": true,\n    \"\\uB3CC\\uB77C\\uC313\": true,\n    \"\\uB367\\uC313\": true,\n    \"\\uAC08\\uB77C\\uB54B\": true,\n    \"\\uC8FC\\uB193\": true,\n    \"\\uAC08\\uB77C\\uB193\": true,\n    \"\\uB4E4\\uC774\\uB2FF\": true,\n    \"\\uC9D1\\uC5B4\\uB123\": true,\n    \"\\uB2FF\": true,\n    \"\\uC758\\uC88B\": true,\n    \"\\uB9C9\\uB193\": true,\n    \"\\uB0B4\\uB193\": true,\n    \"\\uB4E4\\uC5EC\\uB193\": true,\n    \"\\uC0AC\\uB193\": true,\n    \"\\uC370\\uB808\\uB193\": true,\n    \"\\uC9D3\\uCC27\": true,\n    \"\\uBC8B\\uB193\": true,\n    \"\\uCC27\": true,\n    \"\\uCE68\\uB193\": true,\n    \"\\uB4E4\\uC774\\uCC27\": true,\n    \"\\uB458\\uB7EC\\uC313\": true,\n    \"\\uD138\\uC5B4\\uB193\": true,\n    \"\\uB2F4\\uC313\": true,\n    \"\\uB3CC\\uB77C\\uB193\": true,\n    \"\\uB418\\uC7A1\\uC544\\uB123\": true,\n    \"\\uB04C\\uC5B4\\uB123\": true,\n    \"\\uB367\\uB193\": true,\n    \"\\uB9DE\\uB2FF\": true,\n    \"\\uCC98\\uB123\": true,\n    \"\\uBE7B\": true,\n    \"\\uBEE5\\uB193\": true,\n    \"\\uB0B4\\uB9AC\\uC313\": true,\n    \"\\uACF1\\uB193\": true,\n    \"\\uC124\\uB808\\uBC1C\\uB193\": true,\n    \"\\uC6B0\\uACA8\\uB123\": true,\n    \"\\uB193\": true,\n    \"\\uC218\\uB193\": true,\n    \"\\uC368\\uB123\": true,\n    \"\\uB110\\uC5B4\\uB193\": true,\n    \"\\uB36E\\uC313\": true,\n    \"\\uC5F0\\uB2FF\": true,\n    \"\\uD5DB\\uB193\": true,\n    \"\\uB3CC\\uB824\\uB193\": true,\n    \"\\uB418\\uC313\": true,\n    \"\\uC6B1\\uC5EC\\uB123\": true,\n    \"\\uC557\\uC544\\uB123\": true,\n    \"\\uC62C\\uB824\\uB193\": true,\n    \"\\uD5DB\\uBC29\\uB193\": true,\n    \"\\uB0A0\\uC544\\uB193\": true,\n    \"\\uB4A4\\uB193\": true,\n    \"\\uC5C5\\uC218\\uB193\": true,\n    \"\\uAC00\\uB85C\\uB193\": true,\n    \"\\uB9DE\\uB193\": true,\n    \"\\uD3B4\\uB193\": true,\n    \"\\uB0B4\\uCF1C\\uB193\": true,\n    \"\\uC313\": true,\n    \"\\uB059\\uC9DC\\uB193\": true,\n    \"\\uB4E4\\uC774\\uC313\": true,\n    \"\\uACB9\\uC313\": true,\n    \"\\uAE30\\uCD94\\uB193\": true,\n    \"\\uB123\": true,\n    \"\\uBD88\\uC5B4\\uB123\": true,\n    \"\\uB298\\uC5B4\\uB193\": true,\n    \"\\uAE01\\uC5B4\\uB193\": true,\n    \"\\uC5B4\\uAE0B\\uB193\": true,\n    \"\\uC55E\\uB123\": true,\n    \"\\uB20C\\uB7EC\\uB193\": true,\n    \"\\uB54B\": true,\n    \"\\uB4E4\\uC5EC\\uC313\": true,\n    \"\\uBE57\\uB193\": true,\n    \"\\uC0AC\\uC774\\uC88B\": true,\n    \"\\uB418\\uB193\": true,\n    \"\\uD5DB\\uBD88\\uB193\": true,\n    \"\\uBAB0\\uC544\\uB123\": true,\n    \"\\uBA39\\uB193\": true,\n    \"\\uBC00\\uCCD0\\uB193\": true,\n    \"\\uC0B4\\uB2FF\": true,\n    \"\\uD53C\\uC0C8\\uB193\": true,\n    \"\\uBE7C\\uB193\": true,\n    \"\\uD558\\uCC28\\uB193\": true,\n    \"\\uD2C0\\uC5B4\\uB123\": true\n};\n$14c78789229899a8$var$conjugator.not_l_euh_irregular = {\n    \"\\uC6B0\\uB7EC\\uB974\": true,\n    \"\\uB530\\uB974\": true,\n    \"\\uBD99\\uB530\\uB974\": true,\n    \"\\uB2A6\\uCE58\\uB974\": true,\n    \"\\uB2E4\\uB2E4\\uB974\": true,\n    \"\\uC787\\uB530\\uB974\": true,\n    \"\\uCE58\\uB974\": true\n};\n$14c78789229899a8$var$conjugator.not_l_irregular = {};\n$14c78789229899a8$var$conjugator.after_last_space = function(infinitive) {\n    return infinitive.split(\" \").reverse()[0];\n};\n$14c78789229899a8$var$conjugator.is_s_irregular = function(infinitive, regular) {\n    if (regular) return false;\n    return (0, $8ro1P.hangeul).match(infinitive.charAt(infinitive.length - 1), \"*\", \"*\", \"\\u11BA\") && !($14c78789229899a8$var$conjugator.after_last_space(infinitive) in $14c78789229899a8$var$conjugator.not_s_irregular);\n};\n$14c78789229899a8$var$conjugator.is_l_irregular = function(infinitive, regular) {\n    if (regular) return false;\n    return (0, $8ro1P.hangeul).match(infinitive.charAt(infinitive.length - 1), \"*\", \"*\", \"\\u11AF\") && !($14c78789229899a8$var$conjugator.after_last_space(infinitive) in $14c78789229899a8$var$conjugator.not_l_irregular);\n};\n$14c78789229899a8$var$conjugator.is_l_euh_irregular = function(infinitive, regular) {\n    if (regular) return false;\n    return (0, $8ro1P.hangeul).match(infinitive.charAt(infinitive.length - 1), \"\\u1105\", \"\\u3161\", null) && !($14c78789229899a8$var$conjugator.after_last_space(infinitive) in $14c78789229899a8$var$conjugator.not_l_euh_irregular);\n};\n$14c78789229899a8$var$conjugator.is_h_irregular = function(infinitive, regular) {\n    if (regular) return false;\n    return ((0, $8ro1P.hangeul).padchim(infinitive.charAt(infinitive.length - 1)) == \"\\u11C2\" || infinitive.charAt(infinitive.length - 1) == \"\\uB7EC\") && !($14c78789229899a8$var$conjugator.after_last_space(infinitive) in $14c78789229899a8$var$conjugator.not_h_irregular);\n};\n$14c78789229899a8$var$conjugator.is_p_irregular = function(infinitive, regular) {\n    if (regular) return false;\n    return (0, $8ro1P.hangeul).match(infinitive.charAt(infinitive.length - 1), \"*\", \"*\", \"\\u11B8\") && !($14c78789229899a8$var$conjugator.after_last_space(infinitive) in $14c78789229899a8$var$conjugator.not_p_irregular);\n};\n$14c78789229899a8$var$conjugator.is_d_irregular = function(infinitive, regular) {\n    if (regular) return false;\n    return (0, $8ro1P.hangeul).match(infinitive.charAt(infinitive.length - 1), \"*\", \"*\", \"\\u11AE\") && !($14c78789229899a8$var$conjugator.after_last_space(infinitive) in $14c78789229899a8$var$conjugator.not_d_irregular);\n};\n$14c78789229899a8$var$conjugator.verb_types = {\n    \"\\u3145 \\uBD88\\uADDC\\uCE59 \\uB3D9\\uC0AC (irregular verb)\": $14c78789229899a8$var$conjugator.is_s_irregular,\n    \"\\u3139 \\uBD88\\uADDC\\uCE59 \\uB3D9\\uC0AC (irregular verb)\": $14c78789229899a8$var$conjugator.is_l_irregular,\n    \"\\uB974 \\uBD88\\uADDC\\uCE59 \\uB3D9\\uC0AC (irregular verb)\": $14c78789229899a8$var$conjugator.is_l_euh_irregular,\n    \"\\u314E \\uBD88\\uADDC\\uCE59 \\uB3D9\\uC0AC (irregular verb)\": $14c78789229899a8$var$conjugator.is_h_irregular,\n    \"\\u3142 \\uBD88\\uADDC\\uCE59 \\uB3D9\\uC0AC (irregular verb)\": $14c78789229899a8$var$conjugator.is_p_irregular,\n    \"\\u3137 \\uBD88\\uADDC\\uCE59 \\uB3D9\\uC0AC (irregular verb)\": $14c78789229899a8$var$conjugator.is_d_irregular\n};\n$14c78789229899a8$var$conjugator.verb_type = function(infinitive, regular) {\n    if (regular) return \"regular verb\";\n    for(irregular_name in $14c78789229899a8$var$conjugator.verb_types){\n        func = $14c78789229899a8$var$conjugator.verb_types[irregular_name];\n        if (func($14c78789229899a8$var$conjugator.base(infinitive))) return irregular_name;\n    }\n    return \"regular verb\";\n};\n$14c78789229899a8$var$conjugator.base = function(infinitive, regular) {\n    if (infinitive.charAt(infinitive.length - 1) == \"\\uB2E4\") return infinitive.substring(0, infinitive.length - 1);\n    else return infinitive;\n};\n$14c78789229899a8$var$conjugator.base2 = function(infinitive, regular) {\n    infinitive = $14c78789229899a8$var$conjugator.base(infinitive, regular);\n    if (infinitive == \"\\uC544\\uB2C8\") {\n        infinitive = new (0, $8ro1P.hangeul).Geulja(\"\\uC544\\uB2C8\");\n        infinitive.hidden_padchim = true;\n        return infinitive;\n    }\n    if (infinitive == \"\\uBD59\") return \"\\uBD48\";\n    if (infinitive == \"\\uD478\") return \"\\uD37C\";\n    let new_infinitive = infinitive;\n    if ($14c78789229899a8$var$conjugator.is_h_irregular(infinitive, regular)) {\n        new_infinitive = $14c78789229899a8$var$conjugator.merge(infinitive.substring(0, infinitive.length - 1) + (0, $8ro1P.hangeul).join((0, $8ro1P.hangeul).lead(infinitive.charAt(infinitive.length - 1)), (0, $8ro1P.hangeul).vowel(infinitive.charAt(infinitive.length - 1))), \"\\uC774\");\n        $14c78789229899a8$var$conjugator.reasons.push(\"\\u314E irregular (\" + infinitive + \" -> \" + new_infinitive + \")\");\n    } else if ($14c78789229899a8$var$conjugator.is_p_irregular(infinitive, regular)) {\n        // only some verbs get ㅗ (highly irregular)\n        let new_vowel;\n        if (infinitive in {\n            \"\\uBB3B\\uC7A1\": true\n        } || infinitive.charAt(infinitive.length - 1) in {\n            \"\\uB3D5\": true,\n            \"\\uACF1\": true\n        }) new_vowel = \"\\u3157\";\n        else new_vowel = \"\\u315C\";\n        new_infinitive = $14c78789229899a8$var$conjugator.merge(infinitive.substring(0, infinitive.length - 1) + (0, $8ro1P.hangeul).join((0, $8ro1P.hangeul).lead(infinitive.charAt(infinitive.length - 1)), (0, $8ro1P.hangeul).vowel(infinitive.charAt(infinitive.length - 1))), (0, $8ro1P.hangeul).join(\"\\u110B\", new_vowel));\n        $14c78789229899a8$var$conjugator.reasons.push(\"\\u3142 irregular (\" + infinitive + \" -> \" + new_infinitive + \")\");\n    } else if ($14c78789229899a8$var$conjugator.is_d_irregular(infinitive, regular)) {\n        new_infinitive = new (0, $8ro1P.hangeul).Geulja(infinitive.substring(0, infinitive.length - 1) + (0, $8ro1P.hangeul).join((0, $8ro1P.hangeul).lead(infinitive.charAt(infinitive.length - 1)), (0, $8ro1P.hangeul).vowel(infinitive.charAt(infinitive.length - 1)), \"\\u11AF\"));\n        new_infinitive.original_padchim = \"\\u11AE\";\n        $14c78789229899a8$var$conjugator.reasons.push(\"\\u3137 irregular (\" + infinitive + \" -> \" + new_infinitive + \")\");\n    } else if ($14c78789229899a8$var$conjugator.is_s_irregular(infinitive, regular)) {\n        new_infinitive = new (0, $8ro1P.hangeul).Geulja(infinitive.substring(0, infinitive.length - 1) + (0, $8ro1P.hangeul).join((0, $8ro1P.hangeul).lead(infinitive.charAt(infinitive.length - 1)), (0, $8ro1P.hangeul).vowel(infinitive.charAt(infinitive.length - 1))));\n        new_infinitive.hidden_padchim = true;\n        $14c78789229899a8$var$conjugator.reasons.push(\"\\u3145 irregular (\" + infinitive + \" -> \" + new_infinitive + \" [hidden padchim])\");\n    }\n    return new_infinitive;\n};\n$14c78789229899a8$var$conjugator.base3 = function(infinitive, regular) {\n    infinitive = $14c78789229899a8$var$conjugator.base(infinitive, regular);\n    if (infinitive == \"\\uC544\\uB2C8\") return \"\\uC544\\uB2C8\";\n    if (infinitive == \"\\uD478\") return \"\\uD478\";\n    if (infinitive == \"\\uBD59\") return \"\\uBD48\";\n    if ($14c78789229899a8$var$conjugator.is_h_irregular(infinitive, regular)) return infinitive.substring(0, infinitive.length - 1) + (0, $8ro1P.hangeul).join((0, $8ro1P.hangeul).lead(infinitive.charAt(infinitive.length - 1)), (0, $8ro1P.hangeul).vowel(infinitive.charAt(infinitive.length - 1)));\n    else if ($14c78789229899a8$var$conjugator.is_p_irregular(infinitive, regular)) return infinitive.substring(0, infinitive.length - 1) + (0, $8ro1P.hangeul).join((0, $8ro1P.hangeul).lead(infinitive.charAt(infinitive.length - 1)), (0, $8ro1P.hangeul).vowel(infinitive.charAt(infinitive.length - 1))) + \"\\uC6B0\";\n    else return $14c78789229899a8$var$conjugator.base2(infinitive, regular);\n};\n$14c78789229899a8$var$conjugator.declarative_present_informal_low = function(infinitive, regular, further_use) {\n    infinitive = $14c78789229899a8$var$conjugator.base2(infinitive, regular);\n    if (!further_use && (infinitive == \"\\uC774\" && !infinitive.hidden_padchim || infinitive == \"\\uC544\\uB2C8\") || regular && infinitive.charAt(infinitive.length - 1) == \"\\uC774\") {\n        $14c78789229899a8$var$conjugator.reasons.push(\"\\uC57C irregular\");\n        return infinitive + \"\\uC57C\";\n    }\n    // 르 irregular\n    if (regular && infinitive == \"\\uC774\\uB974\") return \"\\uC77C\\uB7EC\";\n    if ($14c78789229899a8$var$conjugator.is_l_euh_irregular(infinitive, regular)) {\n        let new_base = infinitive.substring(0, infinitive.length - 2) + (0, $8ro1P.hangeul).join((0, $8ro1P.hangeul).lead(infinitive[infinitive.length - 2]), (0, $8ro1P.hangeul).vowel(infinitive[infinitive.length - 2]), \"\\u11AF\");\n        if (infinitive.substring(infinitive.length - 2, infinitive.length) in {\n            \"\\uD478\\uB974\": true,\n            \"\\uC774\\uB974\": true\n        }) {\n            new_base = new_base + (0, $8ro1P.hangeul).join(\"\\u1105\", (0, $8ro1P.hangeul).vowel((0, $8ro1P.hangeul).find_vowel_to_append(new_base)));\n            $14c78789229899a8$var$conjugator.reasons.push(\"irregular stem + \" + infinitive + \" -> \" + new_base);\n            return infinitive + \"\\uB7EC\";\n        } else if ((0, $8ro1P.hangeul).find_vowel_to_append(infinitive.substring(0, infinitive.length - 1)) == \"\\uC544\") {\n            new_base += \"\\uB77C\";\n            $14c78789229899a8$var$conjugator.reasons.push(\"\\uB974 irregular stem change [\" + infinitive + \" -> \" + new_base + \"]\");\n            return new_base;\n        } else {\n            new_base += \"\\uB7EC\";\n            $14c78789229899a8$var$conjugator.reasons.push(\"\\uB974 irregular stem change [\" + infinitive + \" -> \" + new_base + \"]\");\n            return new_base;\n        }\n    } else if (infinitive.charAt(infinitive.length - 1) == \"\\uD558\") return $14c78789229899a8$var$conjugator.merge(infinitive, \"\\uC5EC\");\n    else if ($14c78789229899a8$var$conjugator.is_h_irregular(infinitive, regular)) return $14c78789229899a8$var$conjugator.merge(infinitive, \"\\uC774\");\n    return $14c78789229899a8$var$conjugator.merge(infinitive, (0, $8ro1P.hangeul).find_vowel_to_append(infinitive));\n};\n$14c78789229899a8$var$conjugator.declarative_present_informal_low.conjugation = true;\n$14c78789229899a8$var$conjugator.declarative_present_informal_high = function(infinitive, regular) {\n    infinitive = $14c78789229899a8$var$conjugator.base2(infinitive, regular);\n    if (infinitive == \"\\uC774\" && !infinitive.hidden_padchim || infinitive.charAt(infinitive.length - 1) == \"\\uC774\" && regular || infinitive == \"\\uC544\\uB2C8\") {\n        $14c78789229899a8$var$conjugator.reasons.push(\"\\uC5D0\\uC694 irregular\");\n        return infinitive + \"\\uC5D0\\uC694\";\n    }\n    return $14c78789229899a8$var$conjugator.merge($14c78789229899a8$var$conjugator.declarative_present_informal_low(infinitive, regular, true), \"\\uC694\");\n};\n$14c78789229899a8$var$conjugator.declarative_present_informal_high.conjugation = true;\n$14c78789229899a8$var$conjugator.declarative_present_formal_low = function(infinitive, regular) {\n    if ($14c78789229899a8$var$conjugator.is_l_irregular($14c78789229899a8$var$conjugator.base(infinitive), regular)) return $14c78789229899a8$var$conjugator.drop_l_and_borrow_padchim($14c78789229899a8$var$conjugator.base(infinitive, regular), \"\\uB294\\uB2E4\");\n    return $14c78789229899a8$var$conjugator.merge($14c78789229899a8$var$conjugator.base(infinitive, regular), \"\\uB294\\uB2E4\");\n};\n$14c78789229899a8$var$conjugator.declarative_present_formal_low.conjugation = true;\n$14c78789229899a8$var$conjugator.declarative_present_formal_high = function(infinitive, regular) {\n    if ($14c78789229899a8$var$conjugator.is_l_irregular($14c78789229899a8$var$conjugator.base(infinitive), regular)) return $14c78789229899a8$var$conjugator.drop_l_and_borrow_padchim($14c78789229899a8$var$conjugator.base(infinitive, regular), \"\\uC2B5\\uB2C8\\uB2E4\");\n    return $14c78789229899a8$var$conjugator.merge($14c78789229899a8$var$conjugator.base(infinitive, regular), \"\\uC2B5\\uB2C8\\uB2E4\");\n};\n$14c78789229899a8$var$conjugator.declarative_present_formal_high.conjugation = true;\n$14c78789229899a8$var$conjugator.past_base = function(infinitive, regular) {\n    let ps = $14c78789229899a8$var$conjugator.declarative_present_informal_low(infinitive, regular, true);\n    if ((0, $8ro1P.hangeul).find_vowel_to_append(ps) == \"\\uC544\") return $14c78789229899a8$var$conjugator.merge(ps, \"\\uC558\");\n    else return $14c78789229899a8$var$conjugator.merge(ps, \"\\uC5C8\");\n};\n$14c78789229899a8$var$conjugator.past_base.conjugation = true;\n$14c78789229899a8$var$conjugator.declarative_past_informal_low = function(infinitive, regular) {\n    return $14c78789229899a8$var$conjugator.merge($14c78789229899a8$var$conjugator.past_base(infinitive, regular), \"\\uC5B4\");\n};\n$14c78789229899a8$var$conjugator.declarative_past_informal_low.conjugation = true;\n$14c78789229899a8$var$conjugator.declarative_past_informal_high = function(infinitive, regular) {\n    return $14c78789229899a8$var$conjugator.merge($14c78789229899a8$var$conjugator.declarative_past_informal_low(infinitive, regular), \"\\uC694\");\n};\n$14c78789229899a8$var$conjugator.declarative_past_informal_high.conjugation = true;\n$14c78789229899a8$var$conjugator.declarative_past_formal_low = function(infinitive, regular) {\n    return $14c78789229899a8$var$conjugator.merge($14c78789229899a8$var$conjugator.past_base(infinitive, regular), \"\\uB2E4\");\n};\n$14c78789229899a8$var$conjugator.declarative_past_formal_low.conjugation = true;\n$14c78789229899a8$var$conjugator.declarative_past_formal_high = function(infinitive, regular) {\n    return $14c78789229899a8$var$conjugator.merge($14c78789229899a8$var$conjugator.past_base(infinitive, regular), \"\\uC2B5\\uB2C8\\uB2E4\");\n};\n$14c78789229899a8$var$conjugator.declarative_past_formal_high.conjugation = true;\n$14c78789229899a8$var$conjugator.future_base = function(infinitive, regular) {\n    if ($14c78789229899a8$var$conjugator.is_l_irregular($14c78789229899a8$var$conjugator.base(infinitive, regular))) return $14c78789229899a8$var$conjugator.drop_l_and_borrow_padchim($14c78789229899a8$var$conjugator.base3(infinitive, regular), \"\\uC744\");\n    return $14c78789229899a8$var$conjugator.merge($14c78789229899a8$var$conjugator.base3(infinitive, regular), \"\\uC744\");\n};\n$14c78789229899a8$var$conjugator.future_base.conjugation = true;\n$14c78789229899a8$var$conjugator.declarative_future_informal_low = function(infinitive, regular) {\n    return $14c78789229899a8$var$conjugator.merge($14c78789229899a8$var$conjugator.future_base(infinitive, regular), \" \\uAC70\\uC57C\");\n};\n$14c78789229899a8$var$conjugator.declarative_future_informal_low.conjugation = true;\n$14c78789229899a8$var$conjugator.declarative_future_informal_high = function(infinitive, regular) {\n    return $14c78789229899a8$var$conjugator.merge($14c78789229899a8$var$conjugator.future_base(infinitive, regular), \" \\uAC70\\uC608\\uC694\");\n};\n$14c78789229899a8$var$conjugator.declarative_future_informal_high.conjugation = true;\n$14c78789229899a8$var$conjugator.declarative_future_formal_low = function(infinitive, regular) {\n    return $14c78789229899a8$var$conjugator.merge($14c78789229899a8$var$conjugator.future_base(infinitive, regular), \" \\uAC70\\uB2E4\");\n};\n$14c78789229899a8$var$conjugator.declarative_future_formal_low.conjugation = true;\n$14c78789229899a8$var$conjugator.declarative_future_formal_high = function(infinitive, regular) {\n    return $14c78789229899a8$var$conjugator.merge($14c78789229899a8$var$conjugator.future_base(infinitive, regular), \" \\uAC81\\uB2C8\\uB2E4\");\n};\n$14c78789229899a8$var$conjugator.declarative_future_formal_high.conjugation = true;\n$14c78789229899a8$var$conjugator.declarative_future_conditional_informal_low = function(infinitive, regular) {\n    return $14c78789229899a8$var$conjugator.merge($14c78789229899a8$var$conjugator.base(infinitive, regular), \"\\uACA0\\uC5B4\");\n};\n$14c78789229899a8$var$conjugator.declarative_future_conditional_informal_low.conjugation = true;\n$14c78789229899a8$var$conjugator.declarative_future_conditional_informal_high = function(infinitive, regular) {\n    return $14c78789229899a8$var$conjugator.merge($14c78789229899a8$var$conjugator.base(infinitive, regular), \"\\uACA0\\uC5B4\\uC694\");\n};\n$14c78789229899a8$var$conjugator.declarative_future_conditional_informal_high.conjugation = true;\n$14c78789229899a8$var$conjugator.declarative_future_conditional_formal_low = function(infinitive, regular) {\n    return $14c78789229899a8$var$conjugator.merge($14c78789229899a8$var$conjugator.base(infinitive, regular), \"\\uACA0\\uB2E4\");\n};\n$14c78789229899a8$var$conjugator.declarative_future_conditional_formal_low.conjugation = true;\n$14c78789229899a8$var$conjugator.declarative_future_conditional_formal_high = function(infinitive, regular) {\n    return $14c78789229899a8$var$conjugator.merge($14c78789229899a8$var$conjugator.base(infinitive, regular), \"\\uACA0\\uC2B5\\uB2C8\\uB2E4\");\n};\n$14c78789229899a8$var$conjugator.declarative_future_conditional_formal_high.conjugation = true;\n$14c78789229899a8$var$conjugator.inquisitive_present_informal_low = function(infinitive, regular) {\n    return $14c78789229899a8$var$conjugator.merge($14c78789229899a8$var$conjugator.declarative_present_informal_low(infinitive, regular), \"?\");\n};\n$14c78789229899a8$var$conjugator.inquisitive_present_informal_low.conjugation = true;\n$14c78789229899a8$var$conjugator.inquisitive_present_informal_high = function(infinitive, regular) {\n    return $14c78789229899a8$var$conjugator.merge($14c78789229899a8$var$conjugator.declarative_present_informal_high(infinitive, regular), \"?\");\n};\n$14c78789229899a8$var$conjugator.inquisitive_present_informal_high.conjugation = true;\n$14c78789229899a8$var$conjugator.inquisitive_present_formal_low = function(infinitive, regular) {\n    infinitive = $14c78789229899a8$var$conjugator.base(infinitive, regular);\n    if ($14c78789229899a8$var$conjugator.is_l_irregular(infinitive, regular)) return $14c78789229899a8$var$conjugator.drop_l(infinitive, \"\\uB2C8?\");\n    return $14c78789229899a8$var$conjugator.merge(infinitive, \"\\uB2C8?\");\n};\n$14c78789229899a8$var$conjugator.inquisitive_present_formal_low.conjugation = true;\n$14c78789229899a8$var$conjugator.inquisitive_present_formal_high = function(infinitive, regular) {\n    infinitive = $14c78789229899a8$var$conjugator.base(infinitive, regular);\n    if ($14c78789229899a8$var$conjugator.is_l_irregular(infinitive, regular)) return $14c78789229899a8$var$conjugator.drop_l_and_borrow_padchim(infinitive, \"\\uC2B5\\uB2C8\\uAE4C?\");\n    return $14c78789229899a8$var$conjugator.merge(infinitive, \"\\uC2B5\\uB2C8\\uAE4C?\");\n};\n$14c78789229899a8$var$conjugator.inquisitive_present_formal_high.conjugation = true;\n$14c78789229899a8$var$conjugator.inquisitive_past_informal_low = function(infinitive, regular) {\n    return $14c78789229899a8$var$conjugator.declarative_past_informal_low(infinitive, regular) + \"?\";\n};\n$14c78789229899a8$var$conjugator.inquisitive_past_informal_low.conjugation = true;\n$14c78789229899a8$var$conjugator.inquisitive_past_informal_high = function(infinitive, regular) {\n    return $14c78789229899a8$var$conjugator.merge($14c78789229899a8$var$conjugator.declarative_past_informal_high(infinitive, regular), \"?\");\n};\n$14c78789229899a8$var$conjugator.inquisitive_past_informal_high.conjugation = true;\n$14c78789229899a8$var$conjugator.inquisitive_past_formal_low = function(infinitive, regular) {\n    return $14c78789229899a8$var$conjugator.merge($14c78789229899a8$var$conjugator.past_base(infinitive, regular), \"\\uB2C8?\");\n};\n$14c78789229899a8$var$conjugator.inquisitive_past_formal_low.conjugation = true;\n$14c78789229899a8$var$conjugator.inquisitive_past_formal_high = function(infinitive, regular) {\n    return $14c78789229899a8$var$conjugator.merge($14c78789229899a8$var$conjugator.past_base(infinitive, regular), \"\\uC2B5\\uB2C8\\uAE4C?\");\n};\n$14c78789229899a8$var$conjugator.inquisitive_past_formal_high.conjugation = true;\n$14c78789229899a8$var$conjugator.imperative_present_informal_low = function(infinitive, regular) {\n    return $14c78789229899a8$var$conjugator.declarative_present_informal_low(infinitive, regular);\n};\n$14c78789229899a8$var$conjugator.imperative_present_informal_low.conjugation = true;\n$14c78789229899a8$var$conjugator.imperative_present_informal_high = function(infinitive, regular) {\n    if ($14c78789229899a8$var$conjugator.is_l_irregular($14c78789229899a8$var$conjugator.base(infinitive, regular))) return $14c78789229899a8$var$conjugator.drop_l($14c78789229899a8$var$conjugator.base3(infinitive, regular), \"\\uC138\\uC694\");\n    return $14c78789229899a8$var$conjugator.merge($14c78789229899a8$var$conjugator.base3(infinitive, regular), \"\\uC138\\uC694\");\n};\n$14c78789229899a8$var$conjugator.imperative_present_informal_high.conjugation = true;\n$14c78789229899a8$var$conjugator.imperative_present_formal_low = function(infinitive, regular) {\n    return $14c78789229899a8$var$conjugator.merge($14c78789229899a8$var$conjugator.imperative_present_informal_low(infinitive, regular), \"\\uB77C\");\n};\n$14c78789229899a8$var$conjugator.imperative_present_formal_low.conjugation = true;\n$14c78789229899a8$var$conjugator.imperative_present_formal_high = function(infinitive, regular) {\n    if ($14c78789229899a8$var$conjugator.is_l_irregular($14c78789229899a8$var$conjugator.base(infinitive, regular))) return $14c78789229899a8$var$conjugator.drop_l($14c78789229899a8$var$conjugator.base3(infinitive, regular), \"\\uC2ED\\uC2DC\\uC624\");\n    return $14c78789229899a8$var$conjugator.merge($14c78789229899a8$var$conjugator.base3(infinitive, regular), \"\\uC2ED\\uC2DC\\uC624\");\n};\n$14c78789229899a8$var$conjugator.imperative_present_formal_high.conjugation = true;\n$14c78789229899a8$var$conjugator.propositive_present_informal_low = function(infinitive, regular) {\n    return $14c78789229899a8$var$conjugator.declarative_present_informal_low(infinitive, regular);\n};\n$14c78789229899a8$var$conjugator.propositive_present_informal_low.conjugation = true;\n$14c78789229899a8$var$conjugator.propositive_present_informal_high = function(infinitive, regular) {\n    return $14c78789229899a8$var$conjugator.declarative_present_informal_high(infinitive, regular);\n};\n$14c78789229899a8$var$conjugator.propositive_present_informal_high.conjugation = true;\n$14c78789229899a8$var$conjugator.propositive_present_formal_low = function(infinitive, regular) {\n    return $14c78789229899a8$var$conjugator.merge($14c78789229899a8$var$conjugator.base(infinitive, regular), \"\\uC790\");\n};\n$14c78789229899a8$var$conjugator.propositive_present_formal_low.conjugation = true;\n$14c78789229899a8$var$conjugator.propositive_present_formal_high = function(infinitive, regular) {\n    infinitive = $14c78789229899a8$var$conjugator.base(infinitive);\n    if ($14c78789229899a8$var$conjugator.is_l_irregular(infinitive, regular)) return $14c78789229899a8$var$conjugator.drop_l_and_borrow_padchim($14c78789229899a8$var$conjugator.base3(infinitive, regular), \"\\uC74D\\uC2DC\\uB2E4\");\n    return $14c78789229899a8$var$conjugator.merge($14c78789229899a8$var$conjugator.base3(infinitive, regular), \"\\uC74D\\uC2DC\\uB2E4\");\n};\n$14c78789229899a8$var$conjugator.propositive_present_formal_high.conjugation = true;\n$14c78789229899a8$var$conjugator.connective_if = function(infinitive, regular) {\n    return $14c78789229899a8$var$conjugator.merge($14c78789229899a8$var$conjugator.base3(infinitive, regular), \"\\uBA74\");\n};\n$14c78789229899a8$var$conjugator.connective_if.conjugation = true;\n$14c78789229899a8$var$conjugator.connective_and = function(infinitive, regular) {\n    infinitive = $14c78789229899a8$var$conjugator.base(infinitive, regular);\n    return $14c78789229899a8$var$conjugator.merge($14c78789229899a8$var$conjugator.base(infinitive, regular), \"\\uACE0\");\n};\n$14c78789229899a8$var$conjugator.connective_and.conjugation = true;\n$14c78789229899a8$var$conjugator.nominal_ing = function(infinitive, regular) {\n    return $14c78789229899a8$var$conjugator.merge($14c78789229899a8$var$conjugator.base3(infinitive, regular), \"\\uC74C\");\n};\n$14c78789229899a8$var$conjugator.nominal_ing.conjugation = true;\n$14c78789229899a8$var$conjugator.conjugations = [];\nfor(let f1 in $14c78789229899a8$var$conjugator)if (f1 && $14c78789229899a8$var$conjugator[f1].conjugation) $14c78789229899a8$var$conjugator.conjugations.push(f1);\n$14c78789229899a8$var$conjugator.display_conjugations = function(infinitive, regular, callback) {\n    var both_regular_and_irregular = false;\n    infinitive = $14c78789229899a8$var$conjugator.base(infinitive, regular);\n    out = \"\";\n    if (infinitive in $14c78789229899a8$var$conjugator.both_regular_and_irregular) {\n        both_regular_and_irregular = true;\n        out += '<dd class=\"warning\">warning</dd>';\n        out += \"<dt>This verb has both regular and irregular forms.</dt>\";\n    }\n    out += '<div class=\"conjugation\"><dd>verb type</dd>';\n    out += \"<dt>\" + $14c78789229899a8$var$conjugator.verb_type(infinitive, regular);\n    if (both_regular_and_irregular) out += ' <button id=\"form-change\">view ' + (regular ? \"irregular\" : \"regular\") + \" form</button>\";\n    out += \"</dt></div>\";\n    for(conjugation in $14c78789229899a8$var$conjugator){\n        $14c78789229899a8$var$conjugator.reasons = [];\n        if ($14c78789229899a8$var$conjugator[conjugation].conjugation) {\n            out += '<div class=\"conjugation\"><dd>' + conjugation.replace(/_/g, \" \") + \"</dd>\";\n            var conjugated = $14c78789229899a8$var$conjugator[conjugation](infinitive, regular);\n            var pron = (0, (/*@__PURE__*/$parcel$interopDefault($666feef8e7b6d3b0$exports))).get_pronunciation(conjugated);\n            var romanized = romanization.romanize(pron);\n            out += \"<dt>\" + conjugated + ' <button class=\"show-reasons\">\\u21B4</button></dt>';\n            out += '<ul class=\"reasons\">';\n            out += \"<li>pronunciation [\" + (pron != conjugated ? pron + \" / \" : \"\") + romanized + \"]</li>\";\n            for(reason in $14c78789229899a8$var$conjugator.reasons)out += \"<li>\" + $14c78789229899a8$var$conjugator.reasons[reason] + \"</li>\";\n            out += \"</ul></div>\";\n        }\n    }\n    callback(out);\n};\n$14c78789229899a8$var$conjugator.each_conjugation = function(infinitive, regular, callback) {\n    infinitive = $14c78789229899a8$var$conjugator.base(infinitive, regular);\n    for(conjugation in $14c78789229899a8$var$conjugator){\n        $14c78789229899a8$var$conjugator.reasons = [];\n        if ($14c78789229899a8$var$conjugator[conjugation].conjugation) {\n            var r = {};\n            r.infinitive = infinitive;\n            r.conjugation_name = conjugation.replace(/_/g, \" \");\n            r.conjugated = $14c78789229899a8$var$conjugator[conjugation](infinitive, regular);\n            r.pronunciation = (0, (/*@__PURE__*/$parcel$interopDefault($666feef8e7b6d3b0$exports))).get_pronunciation(r.conjugated);\n            r.romanized = romanization.romanize(r.pronunciation);\n            r.reasons = [];\n            for(reason in $14c78789229899a8$var$conjugator.reasons)r.reasons.push($14c78789229899a8$var$conjugator.reasons[reason]);\n            callback(r);\n        }\n    }\n};\nvar $14c78789229899a8$export$1b246651ba34c93e = {\n    \"declarative\": {\n        \"present\": {\n            \"informal\": {\n                \"plain\": $14c78789229899a8$var$conjugator.declarative_present_informal_low,\n                \"polite\": $14c78789229899a8$var$conjugator.declarative_present_informal_high\n            },\n            \"formal\": {\n                \"plain\": $14c78789229899a8$var$conjugator.declarative_present_formal_low,\n                \"polite\": $14c78789229899a8$var$conjugator.declarative_present_formal_high\n            }\n        },\n        \"past\": {\n            \"informal\": {\n                \"plain\": $14c78789229899a8$var$conjugator.declarative_past_informal_low,\n                \"polite\": $14c78789229899a8$var$conjugator.declarative_past_informal_high\n            },\n            \"formal\": {\n                \"plain\": $14c78789229899a8$var$conjugator.declarative_past_formal_low,\n                \"polite\": $14c78789229899a8$var$conjugator.declarative_past_formal_high\n            }\n        }\n    }\n};\n// Export functions to node\ntry {\n    for(f in $14c78789229899a8$var$conjugator)$14c78789229899a8$exports[f] = $14c78789229899a8$var$conjugator[f];\n} catch (e) {}\n\n\n\"use strict\";\nconst $2b6e161c9edcf319$var$isTouch = \"ontouchstart\" in window || navigator.msMaxTouchPoints > 0;\ndocument.getElementById(\"press-any-key-text\").textContent = $2b6e161c9edcf319$var$isTouch ? \"Tap to continue\" : \"Press Enter/Return to continue\";\n// Stored in state.activeScreen\nconst $2b6e161c9edcf319$var$SCREENS = Object.freeze({\n    question: 0,\n    // Incorrect and correct answers are considered the same \"results\" screen\n    results: 1,\n    settings: 2\n});\nfunction $2b6e161c9edcf319$var$wordTypeToDisplayText(type) {\n    if (type == \"u\") return \"\\u3046-verb\";\n    else if (type == \"ru\") return \"\\u308B-verb\";\n    else if (type == \"irv\" || type == \"ira\") return \"Irregular\";\n    else if (type == \"i\") return \"\\u3044-adjective\";\n    else if (type == \"na\") return \"\\u306A-adjective\";\n}\nfunction $2b6e161c9edcf319$var$conjugationInqueryFormatting(conjugation) {\n    let newString = \"\";\n    function createInqueryText(text, emoji) {\n        return `<div class=\"conjugation-inquery\"><div class=\"inquery-emoji\">${emoji}</div><div class=\"inquery-text\">${text}</div></div> `;\n    }\n    if (conjugation.type === (0, $18fe9b1b6336f500$export$45aabe1f61557e96).past) newString += createInqueryText((0, $18fe9b1b6336f500$export$45aabe1f61557e96).past, \"\\u231A\");\n    else if (conjugation.type === (0, $18fe9b1b6336f500$export$45aabe1f61557e96).te || conjugation.type === (0, $18fe9b1b6336f500$export$45aabe1f61557e96).adverb) newString += conjugation.type;\n    else if (conjugation.type === (0, $18fe9b1b6336f500$export$45aabe1f61557e96).volitional) newString += createInqueryText((0, $18fe9b1b6336f500$export$45aabe1f61557e96).volitional, \"\\uD83C\\uDF7B\");\n    else if (conjugation.type === (0, $18fe9b1b6336f500$export$45aabe1f61557e96).passive) newString += createInqueryText((0, $18fe9b1b6336f500$export$45aabe1f61557e96).passive, \"\\uD83E\\uDDD8\");\n    else if (conjugation.type === (0, $18fe9b1b6336f500$export$45aabe1f61557e96).causative) newString += createInqueryText((0, $18fe9b1b6336f500$export$45aabe1f61557e96).causative, \"\\uD83D\\uDC69\\u200D\\uD83C\\uDFEB\");\n    else if (conjugation.type === (0, $18fe9b1b6336f500$export$45aabe1f61557e96).potential) newString += createInqueryText((0, $18fe9b1b6336f500$export$45aabe1f61557e96).potential, \"\\u200D\\uD83C\\uDFCB\");\n    else if (conjugation.type === (0, $18fe9b1b6336f500$export$45aabe1f61557e96).imperative) newString += createInqueryText((0, $18fe9b1b6336f500$export$45aabe1f61557e96).imperative, \"\\uD83D\\uDCE2\");\n    // This used to also add \"Affirmative\" text when affirmative was true, but it was a little redundant.\n    // Now it only adds \"Negative\" text when affirmative is false.\n    // if (conjugation.affirmative === false) {\n    // \tnewString += createInqueryText(\"Negative\", \"🚫\");\n    // } else {\n    // \tnewString += createInqueryText(\"Affirmative\", \"✅\");\n    // }\n    if (conjugation.formal === true) newString += createInqueryText(\"Formal\", \"\\uD83D\\uDC54\");\n    else if (conjugation.formal === false) newString += createInqueryText(\"Informal\", \"\\uD83D\\uDC6A\");\n    if (conjugation.polite === true) newString += createInqueryText(\"Polite\", \"\\uD83D\\uDC54\");\n    else if (conjugation.polite === false) newString += createInqueryText(\"Impolite\", \"\\uD83D\\uDC6A\");\n    if (conjugation.polite === false && conjugation.formal == false) newString += createInqueryText(\"(Casual)\", \"\");\n    return newString;\n}\nfunction $2b6e161c9edcf319$var$changeVerbBoxFontColor(color) {\n    let ps = document.getElementById(\"verb-box\").getElementsByTagName(\"p\");\n    for (let p of Array.from(ps))p.style.color = color;\n}\nfunction $2b6e161c9edcf319$var$loadNewWord(wordList) {\n    let word = $2b6e161c9edcf319$var$pickRandomWord(wordList);\n    $2b6e161c9edcf319$var$updateCurrentWord(word);\n    $2b6e161c9edcf319$var$changeVerbBoxFontColor(\"rgb(244, 226, 197)\");\n    return word;\n}\nfunction $2b6e161c9edcf319$var$updateCurrentWord(word) {\n    // Caution: verb-box is controlled using a combination of the background-none class and setting style.background directly.\n    // The background-none class is useful for other CSS selectors to grab onto,\n    // while the style.background is useful for setting variable bg colors.\n    (0, $820877bea407f5fe$export$877ee1ca1de102fd)(document.getElementById(\"verb-box\"), true);\n    // The <rt> element had different padding on different browsers.\n    // Rather than attacking it with CSS, just replace it with a span we have control over.\n    const verbHtml = word.wordJSON.hangeul.replaceAll(\"<rt>\", '<span class=\"rt\">').replaceAll(\"</rt>\", \"</span>\");\n    document.getElementById(\"verb-text\").innerHTML = verbHtml;\n    document.getElementById(\"translation\").textContent = word.wordJSON.eng;\n    // Set verb-type to a non-breaking space to preserve vertical height\n    document.getElementById(\"verb-type\").textContent = \"\\xa0\";\n    document.getElementById(\"conjugation-inquery-text\").innerHTML = $2b6e161c9edcf319$var$conjugationInqueryFormatting(word.conjugation);\n}\nfunction $2b6e161c9edcf319$var$extractKoreanCharacters(text) {\n    // Use a regex to match only Korean Hangul characters (Unicode range \\uAC00-\\uD7A3)\n    return text.replace(/[^\\uAC00-\\uD7A3]/g, \"\");\n}\nfunction $2b6e161c9edcf319$var$getNegation(word) {\n    return word.slice(0, -1) + \"\\uC9C0 \\uC54A\\uB2E4\";\n}\nfunction $2b6e161c9edcf319$var$getKoreanConjugation(word, mood, tense, formality, politeness) {\n    let conjugator_function = (0, $14c78789229899a8$exports.conjugator_functions)[mood][tense][formality][politeness];\n    const conjugation = conjugator_function(word);\n    let type;\n    if (tense == \"present\") type = (0, $18fe9b1b6336f500$export$45aabe1f61557e96).present;\n    else type = (0, $18fe9b1b6336f500$export$45aabe1f61557e96).past;\n    return new $2b6e161c9edcf319$var$Conjugation([\n        conjugation\n    ], type, true, formality == \"formal\", politeness == \"polite\");\n}\nfunction $2b6e161c9edcf319$var$getAllKoreanConjugations(wordJSON) {\n    const allConjugations = [];\n    const word = $2b6e161c9edcf319$var$extractKoreanCharacters(wordJSON.hangeul);\n    const moods = [\n        \"declarative\"\n    ];\n    const tenses = [\n        \"present\",\n        \"past\"\n    ];\n    const formalities = [\n        \"informal\",\n        \"formal\"\n    ];\n    const politeness = [\n        \"plain\",\n        \"polite\"\n    ];\n    for (const mood of moods)for (const tense of tenses){\n        for (const formal of formalities)for (const polite of politeness)allConjugations.push($2b6e161c9edcf319$var$getKoreanConjugation(word, mood, tense, formal, polite));\n    }\n    return allConjugations.flat();\n}\nclass $2b6e161c9edcf319$var$Conjugation {\n    // conjugationType is CONJUGATION_TYPES enum\n    constructor(validAnswers, conjugationType, affirmative, formal, polite){\n        this.validAnswers = validAnswers;\n        this.type = conjugationType;\n        this.affirmative = affirmative;\n        this.formal = formal;\n        this.polite = polite;\n    }\n}\nclass $2b6e161c9edcf319$var$Word {\n    // conjugation is Conjugation class object\n    constructor(wordJSON, conjugation){\n        this.wordJSON = wordJSON;\n        this.conjugation = conjugation;\n        // Probability is updated directly by external functions\n        this.probability = 0;\n        // wasRecentlyIncorrect is used when calculating probability\n        this.wasRecentlyIncorrect = false;\n    }\n}\nclass $2b6e161c9edcf319$var$WordRecentlySeen {\n    constructor(word, wasCorrect){\n        this.word = word;\n        this.wasCorrect = wasCorrect;\n    }\n}\nfunction $2b6e161c9edcf319$var$findMinProb(currentWords) {\n    let min = 2;\n    for(let i = 0; i < currentWords.length; i++)for(let j = 0; j < currentWords[i].length; j++)min = currentWords[i][j].probability < min && currentWords[i][j].probability != 0 ? currentWords[i][j].probability : min;\n    return min;\n}\nfunction $2b6e161c9edcf319$var$findMaxProb(currentWords) {\n    let max = 0;\n    for(let i = 0; i < currentWords.length; i++)for(let j = 0; j < currentWords[i].length; j++)max = currentWords[i][j].probability > max ? currentWords[i][j].probability : max;\n    return max;\n}\nfunction $2b6e161c9edcf319$var$normalizeProbabilities(currentWords) {\n    let totalProbability = 0;\n    // get total of probabilities\n    for(let i = 0; i < currentWords.length; i++)for(let j = 0; j < currentWords[i].length; j++)totalProbability += currentWords[i][j].probability;\n    // normalize\n    for(let i = 0; i < currentWords.length; i++)for(let j = 0; j < currentWords[i].length; j++)currentWords[i][j].probability /= totalProbability;\n}\nfunction $2b6e161c9edcf319$var$setAllProbabilitiesToValue(currentWords, value) {\n    for(let i = 0; i < currentWords.length; i++)for(let j = 0; j < currentWords[i].length; j++)currentWords[i][j].probability = value;\n}\n// Sets all of the probabilities to the same normalized value\nfunction $2b6e161c9edcf319$var$equalizeProbabilities(currentWords) {\n    $2b6e161c9edcf319$var$setAllProbabilitiesToValue(currentWords, 1);\n    // Now that all of the probabilities are equal,\n    // normalize them so together they all add up to 1.\n    $2b6e161c9edcf319$var$normalizeProbabilities(currentWords);\n}\nfunction $2b6e161c9edcf319$var$updateProbabilites(currentWords, wordsRecentlySeenQueue, currentWord, currentWordWasCorrect) {\n    const roundsToWait = 2;\n    // If the number of current verb + adjective conjugations is less than roundsToWait + 1,\n    // the pool of conjugations is too small for our wordsRecentlySeenQueue to work.\n    if (currentWords[0].length + currentWords[1].length < roundsToWait + 1) {\n        // Set all probabilities except the current word to be equal to avoid getting the same question twice\n        $2b6e161c9edcf319$var$setAllProbabilitiesToValue(currentWords, 1);\n        currentWord.probability = 0;\n        $2b6e161c9edcf319$var$normalizeProbabilities(currentWords);\n        return;\n    }\n    // Lower probability of running into words in the same group\n    if (currentWord.wordJSON.group) {\n        const currentConjugation = currentWord.conjugation;\n        const group = currentWord.wordJSON.group;\n        currentWords[getPartOfSpeech(currentWord.wordJSON) === (0, $18fe9b1b6336f500$export$aa00f474800863da).verb ? 0 : 1].filter((word)=>{\n            const conjugation = word.conjugation;\n            // Only alter probabilities of the exact same conjugation for other words in the group\n            return word.wordJSON.group === group && word !== currentWord && conjugation.type === currentConjugation.type && conjugation.affirmative === currentConjugation.affirmative && conjugation.polite === currentConjugation.polite;\n        }).forEach((word)=>{\n            // Have to be careful with lowering this too much, because it can affect findMinProb for other conjugations.\n            // Also, lowering it by a lot will make all of these words appear in a cluster after all the other words have been seen.\n            // Note that this is happening whether currentWordWasCorrect is true or false,\n            // so if someone got currentWord wrong many times it would tank the probabilities in this forEach over time.\n            word.probability /= 3;\n        });\n    }\n    // We wait \"roundsToWait\" rounds to set the probability of questions.\n    // This allows us to have a few rounds immediately after a question where it's guaranteed to not appear again,\n    // followed by the ability to set a high probability for the question to show up immediately after that waiting period (if the answer was incorrect).\n    if (wordsRecentlySeenQueue.length >= roundsToWait) {\n        let dequeuedWord = wordsRecentlySeenQueue.shift();\n        // Using findMinProb isn't a good solution because if you get one correct it's going to shrink the min prob a lot and affect future questions you get right or wrong.\n        // In the future there should probably be a static probability given to corrects, incorrects, and unseens, where that probability slowly grows the longer the word hasn't been seen.\n        let currentMinProb = $2b6e161c9edcf319$var$findMinProb(currentWords);\n        const correctProbModifier = 0.5;\n        const incorrectProbModifier = 0.85;\n        let newProbability;\n        if (dequeuedWord.wasCorrect && !dequeuedWord.word.wasRecentlyIncorrect) newProbability = currentMinProb * correctProbModifier;\n        else if (dequeuedWord.wasCorrect && dequeuedWord.word.wasRecentlyIncorrect) {\n            newProbability = currentMinProb * incorrectProbModifier;\n            dequeuedWord.word.wasRecentlyIncorrect = false;\n        } else if (!dequeuedWord.wasCorrect) // Set to an arbitrary high number to (nearly) guarantee this question is asked next.\n        newProbability = 10;\n        dequeuedWord.word.probability = newProbability;\n    }\n    // Keep track of misses so when the user finally gets it right,\n    // we can still give it a higher probability of appearing again than\n    // questions they got right on the first try.\n    if (!currentWordWasCorrect) currentWord.wasRecentlyIncorrect = true;\n    wordsRecentlySeenQueue.push(new $2b6e161c9edcf319$var$WordRecentlySeen(currentWord, currentWordWasCorrect));\n    // Make sure the user will not see the current question until at least \"roundsToWait\" number of rounds\n    currentWord.probability = 0;\n    $2b6e161c9edcf319$var$normalizeProbabilities(currentWords);\n}\n// returns 2D array [verbarray, adjarray]\nfunction $2b6e161c9edcf319$var$createWordList(JSONWords) {\n    let wordList = (0, $820877bea407f5fe$export$4720c7d384d77b7d)(JSONWords.length);\n    for(let i = 0; i < JSONWords.length; i++)for(let j = 0; j < JSONWords[i].length; j++){\n        let conjugations = $2b6e161c9edcf319$var$getAllKoreanConjugations(JSONWords[i][j]);\n        for(let k = 0; k < conjugations.length; k++)wordList[i].push(new $2b6e161c9edcf319$var$Word(JSONWords[i][j], conjugations[k]));\n    }\n    return wordList;\n}\nfunction $2b6e161c9edcf319$var$pickRandomWord(wordList) {\n    let random = Math.random();\n    try {\n        for(let i = 0; i < wordList.length; i++)for(let j = 0; j < wordList[i].length; j++){\n            if (random < wordList[i][j].probability) return wordList[i][j];\n            // console.log(random)\n            random -= wordList[i][j].probability;\n        }\n        throw \"no random word chosen\";\n    } catch (err) {\n        console.error(err);\n        return wordList[0][getRandomInt(wordList[0].length - 1)];\n    }\n}\nfunction $2b6e161c9edcf319$var$addToScore(amount = 1, maxScoreObjects, maxScoreIndex) {\n    if (amount == 0) return;\n    let max = document.getElementById(\"max-streak-text\");\n    let current = document.getElementById(\"current-streak-text\");\n    if (parseInt(max.textContent) <= parseInt(current.textContent)) {\n        let newAmount = parseInt(max.textContent) + amount;\n        max.textContent = newAmount;\n        if (!document.getElementById(\"max-streak\").classList.contains(\"display-none\")) max.classList.add(\"grow-animation\");\n        maxScoreObjects[maxScoreIndex].score = newAmount;\n        localStorage.setItem(\"maxScoreObjects\", JSON.stringify(maxScoreObjects));\n    }\n    current.textContent = parseInt(current.textContent) + amount;\n    if (!document.getElementById(\"current-streak\").classList.contains(\"display-none\")) current.classList.add(\"grow-animation\");\n}\nfunction $2b6e161c9edcf319$var$typeToWordBoxColor(type) {\n    switch(type){\n        case \"u\":\n            return \"rgb(255, 125, 0)\";\n        case \"ru\":\n            return \"rgb(5, 80, 245)\";\n        case \"irv\":\n            return \"gray\";\n        case \"ira\":\n            return \"gray\";\n        case \"i\":\n            return \"rgb(0, 180, 240)\";\n        case \"na\":\n            return \"rgb(143, 73, 40)\";\n    }\n}\nfunction $2b6e161c9edcf319$var$updateStatusBoxes(word, entryText) {\n    let statusBox = document.getElementById(\"status-box\");\n    (0, $820877bea407f5fe$export$ef83af2c8dc2c683)(statusBox, false);\n    if (word.conjugation.validAnswers.some((e)=>e == entryText)) {\n        statusBox.style.background = \"green\";\n        const subConjugationForm = $2b6e161c9edcf319$var$getSubConjugationForm(word, entryText);\n        document.getElementById(\"status-text\").innerHTML = `Correct${subConjugationForm != null ? '<span class=\"sub-conjugation-indicator\">(' + subConjugationForm + \")</span>\" : \"\"}<br>${entryText} \\u{25CB}`;\n    } else {\n        document.getElementById(\"verb-box\").style.background = $2b6e161c9edcf319$var$typeToWordBoxColor(word.wordJSON.type);\n        (0, $820877bea407f5fe$export$877ee1ca1de102fd)(document.getElementById(\"verb-box\"), false);\n        $2b6e161c9edcf319$var$changeVerbBoxFontColor(\"white\");\n        document.getElementById(\"verb-type\").textContent = $2b6e161c9edcf319$var$wordTypeToDisplayText(word.wordJSON.type);\n        statusBox.style.background = \"rgb(218, 5, 5)\";\n        // Assuming validAnswers[0] is the hiragana answer\n        document.getElementById(\"status-text\").innerHTML = (entryText == \"\" ? \"_\" : entryText) + \" \\xd7<br>\" + word.conjugation.validAnswers[0] + \" \\u25CB\";\n    }\n}\n// If this valid answer is in a non-standard form worth pointing out to the user,\n// return a string containing that form's name.\n// This applies to conjugation types that allow multiple correct answers for the same question,\n// where the user may enter a correct answer without realizing why it was correct.\nfunction $2b6e161c9edcf319$var$getSubConjugationForm(word, validAnswer) {\n    // const kanjiWord = toKanjiPlusHiragana(word.wordJSON.kanji);\n    // const hiraganaWord = toHiragana(word.wordJSON.kanji);\n    // // Check for potential \"れる\" short form\n    // if (\n    // \tword.conjugation.type === CONJUGATION_TYPES.potential &&\n    // \t(word.wordJSON.type === \"ru\" || kanjiWord === \"来る\")\n    // ) {\n    // \tconst shortFormStems = [];\n    // \tshortFormStems.push(dropFinalLetter(kanjiWord) + \"れ\");\n    // \tif (word.wordJSON.type === \"ru\") {\n    // \t\tshortFormStems.push(dropFinalLetter(hiraganaWord) + \"れ\");\n    // \t} else if (kanjiWord === \"来る\") {\n    // \t\tshortFormStems.push(\"これ\");\n    // \t}\n    // \tif (shortFormStems.some((stem) => validAnswer.startsWith(stem))) {\n    // \t\treturn \"ら-omitted short form\";\n    // \t}\n    // }\n    return null;\n}\nclass $2b6e161c9edcf319$export$bebac4be63daee5b {\n    constructor(score, settings){\n        this.score = score;\n        this.settings = settings;\n    }\n}\n// Array index 0 = verbs, 1 = adjectives\n// Stored in an array instead of object to make parsing faster. Upon reflection this was not worth it.\nfunction $2b6e161c9edcf319$var$initApp() {\n    let wordData = (0, $d3e8101abf179243$export$7530f3eeac5df28);\n    new $2b6e161c9edcf319$var$ConjugationApp([\n        wordData.verbs,\n        wordData.adjectives\n    ]);\n}\nclass $2b6e161c9edcf319$var$ConjugationApp {\n    constructor(words){\n        const mainInput = document.getElementById(\"main-text-input\");\n        // bind(mainInput);\n        this.initState(words);\n        mainInput.addEventListener(\"keydown\", (e)=>this.inputKeyPress(e));\n        document.getElementById(\"options-button\").addEventListener(\"click\", (e)=>this.settingsButtonClicked(e));\n        document.getElementById(\"options-form\").addEventListener(\"submit\", (e)=>this.backButtonClicked(e));\n        document.getElementById(\"current-streak-text\").addEventListener(\"animationend\", (e)=>{\n            document.getElementById(\"current-streak-text\").classList.remove(e.animationName);\n        });\n        document.getElementById(\"max-streak-text\").addEventListener(\"animationend\", (e)=>{\n            document.getElementById(\"max-streak-text\").classList.remove(e.animationName);\n        });\n        document.getElementById(\"status-box\").addEventListener(\"animationend\", (e)=>{\n            document.getElementById(\"status-box\").classList.remove(e.animationName);\n        });\n        document.getElementById(\"input-tooltip\").addEventListener(\"animationend\", (e)=>{\n            document.getElementById(\"input-tooltip\").classList.remove(e.animationName);\n        });\n        document.addEventListener(\"keydown\", this.onKeyDown.bind(this));\n        document.addEventListener(\"touchend\", this.onTouchEnd.bind(this));\n        (0, $68e612a17b33f886$export$41be671a9fdd6b82)();\n    }\n    loadMainView() {\n        this.state.activeScreen = $2b6e161c9edcf319$var$SCREENS.question;\n        document.getElementById(\"main-view\").classList.add(\"question-screen\");\n        document.getElementById(\"main-view\").classList.remove(\"results-screen\");\n        document.getElementById(\"input-tooltip\").classList.remove(\"tooltip-fade-animation\");\n        (0, $820877bea407f5fe$export$ef83af2c8dc2c683)(document.getElementById(\"press-any-key-text\"), true);\n        (0, $820877bea407f5fe$export$ef83af2c8dc2c683)(document.getElementById(\"status-box\"), true);\n        if (this.state.currentStreak0OnReset) {\n            document.getElementById(\"current-streak-text\").textContent = \"0\";\n            this.state.currentStreak0OnReset = false;\n        }\n        if (this.state.loadWordOnReset) {\n            this.state.currentWord = $2b6e161c9edcf319$var$loadNewWord(this.state.currentWordList);\n            this.state.loadWordOnReset = false;\n        }\n        // Furigana and translation may need to be hidden during the question screen\n        (0, $68e612a17b33f886$export$e91dd64c29cc7054)(this.state.settings.furigana, this.state.settings.furiganaTiming === (0, $68e612a17b33f886$export$1a0f0b5f10fa2085).onlyAfterAnswering);\n        (0, $68e612a17b33f886$export$42fe1bab90555082)(this.state.settings.translation, this.state.settings.translationTiming === (0, $68e612a17b33f886$export$1a0f0b5f10fa2085).onlyAfterAnswering);\n        const mainInput = document.getElementById(\"main-text-input\");\n        mainInput.disabled = false;\n        mainInput.value = \"\";\n        if (!$2b6e161c9edcf319$var$isTouch) mainInput.focus();\n    }\n    // Handle generic keydown events that aren't targeting a specific element\n    onKeyDown(e) {\n        let keyCode = e.keyCode ? e.keyCode : e.which;\n        if (this.state.activeScreen === $2b6e161c9edcf319$var$SCREENS.results && keyCode == \"13\" && document.activeElement.id !== \"options-button\") this.loadMainView();\n    }\n    // Handle generic touchend events that aren't targeting a specific element\n    onTouchEnd(e) {\n        if (this.state.activeScreen === $2b6e161c9edcf319$var$SCREENS.results && e.target != document.getElementById(\"options-button\")) this.loadMainView();\n    }\n    inputKeyPress(e) {\n        let keyCode = e.keyCode ? e.keyCode : e.which;\n        if (keyCode == \"13\") {\n            e.stopPropagation();\n            const mainInput = document.getElementById(\"main-text-input\");\n            let inputValue = mainInput.value;\n            // const finalChar = inputValue[inputValue.length - 1];\n            // switch (finalChar) {\n            // \t// Set hanging n to ん\n            // \tcase \"n\":\n            // \t\tinputValue = inputValue.replace(/n$/, \"ん\");\n            // \t\tbreak;\n            // \t// Remove hanging 。\n            // \tcase \"。\":\n            // \t\tinputValue = inputValue.replace(/。$/, \"\");\n            // }\n            // if (!isJapanese(inputValue)) {\n            // \tdocument\n            // \t\t.getElementById(\"input-tooltip\")\n            // \t\t.classList.add(\"tooltip-fade-animation\");\n            // \treturn;\n            // } else {\n            // \tdocument\n            // \t\t.getElementById(\"input-tooltip\")\n            // \t\t.classList.remove(\"tooltip-fade-animation\");\n            // }\n            this.state.activeScreen = $2b6e161c9edcf319$var$SCREENS.results;\n            document.getElementById(\"main-view\").classList.remove(\"question-screen\");\n            document.getElementById(\"main-view\").classList.add(\"results-screen\");\n            mainInput.blur();\n            $2b6e161c9edcf319$var$updateStatusBoxes(this.state.currentWord, inputValue);\n            // If the furigana or translation were made transparent during the question, make them visible now\n            (0, $68e612a17b33f886$export$e91dd64c29cc7054)(this.state.settings.furigana, false);\n            (0, $68e612a17b33f886$export$42fe1bab90555082)(this.state.settings.translation, false);\n            // update probabilities before next word is chosen so don't choose same word\n            const inputWasCorrect = this.state.currentWord.conjugation.validAnswers.some((e)=>e == inputValue);\n            $2b6e161c9edcf319$var$updateProbabilites(this.state.currentWordList, this.state.wordsRecentlySeenQueue, this.state.currentWord, inputWasCorrect);\n            if (inputWasCorrect) {\n                $2b6e161c9edcf319$var$addToScore(1, this.state.maxScoreObjects, this.state.maxScoreIndex);\n                this.state.currentStreak0OnReset = false;\n            } else this.state.currentStreak0OnReset = true;\n            this.state.loadWordOnReset = true;\n            mainInput.disabled = true;\n            (0, $820877bea407f5fe$export$ef83af2c8dc2c683)(document.getElementById(\"press-any-key-text\"), false);\n            mainInput.value = \"\";\n        }\n    }\n    settingsButtonClicked(e) {\n        this.state.activeScreen = $2b6e161c9edcf319$var$SCREENS.settings;\n        (0, $68e612a17b33f886$export$b8407eada850d56b)(this.state.settings);\n        (0, $68e612a17b33f886$export$f1d3883d7bdbc350)();\n        (0, $820877bea407f5fe$export$ef83af2c8dc2c683)(document.getElementById(\"main-view\"), true);\n        (0, $820877bea407f5fe$export$ef83af2c8dc2c683)(document.getElementById(\"options-view\"), false);\n        (0, $820877bea407f5fe$export$ef83af2c8dc2c683)(document.getElementById(\"donation-section\"), false);\n    }\n    backButtonClicked(e) {\n        e.preventDefault();\n        (0, $68e612a17b33f886$export$484e1e7497eb0732)(this.state.settings);\n        localStorage.setItem(\"settings\", JSON.stringify(this.state.settings));\n        const visibleConjugationSettings = (0, $68e612a17b33f886$export$f35d7c2709d46536)();\n        let newMaxScoreIndex = (0, $68e612a17b33f886$export$30675527ad91ffe6)(this.state.maxScoreObjects, visibleConjugationSettings);\n        if (newMaxScoreIndex === -1) {\n            this.state.maxScoreObjects.push(new $2b6e161c9edcf319$export$bebac4be63daee5b(0, visibleConjugationSettings));\n            localStorage.setItem(\"maxScoreObjects\", JSON.stringify(this.state.maxScoreObjects));\n            newMaxScoreIndex = this.state.maxScoreObjects.length - 1;\n        }\n        if (newMaxScoreIndex !== this.state.maxScoreIndex) {\n            localStorage.setItem(\"maxScoreIndex\", newMaxScoreIndex);\n            this.state.maxScoreIndex = newMaxScoreIndex;\n            this.state.currentStreak0OnReset = true;\n            this.state.loadWordOnReset = true;\n            this.applySettingsUpdateWordList();\n        // Note that the wordsRecentlySeenQueue is not cleared.\n        // This is intentional, so if the new word list happens to include the words you recently missed,\n        // they still have the chance of appearing again in a couple of rounds to retry.\n        // If currentWordList doesn't contain those words in the queue, they won't be chosen anyways so the queue probability logic silenty fails.\n        } else // If none of the conjugation settings were changed, don't reload the word list or reset the probabilities\n        (0, $68e612a17b33f886$export$7b52e59d7da90ebe)(this.state.settings);\n        document.getElementById(\"max-streak-text\").textContent = this.state.maxScoreObjects[this.state.maxScoreIndex].score;\n        (0, $820877bea407f5fe$export$ef83af2c8dc2c683)(document.getElementById(\"main-view\"), false);\n        (0, $820877bea407f5fe$export$ef83af2c8dc2c683)(document.getElementById(\"options-view\"), true);\n        (0, $820877bea407f5fe$export$ef83af2c8dc2c683)(document.getElementById(\"donation-section\"), true);\n        this.loadMainView();\n    }\n    initState(words) {\n        this.state = {};\n        this.state.completeWordList = $2b6e161c9edcf319$var$createWordList(words);\n        if (!localStorage.getItem(\"maxScoreObjects\") || !localStorage.getItem(\"maxScoreIndex\") || !localStorage.getItem(\"settings\")) {\n            this.state.maxScoreIndex = 0;\n            localStorage.setItem(\"maxScoreIndex\", this.state.maxScoreIndex);\n            this.state.settings = (0, $68e612a17b33f886$export$f598fee9a8761f8f)();\n            localStorage.setItem(\"settings\", JSON.stringify(this.state.settings));\n            this.state.maxScoreObjects = [\n                new $2b6e161c9edcf319$export$bebac4be63daee5b(0, (0, $68e612a17b33f886$export$d04e1a4f8a41f042)(this.state.settings))\n            ];\n            localStorage.setItem(\"maxScoreObjects\", JSON.stringify(this.state.maxScoreObjects));\n        } else {\n            this.state.maxScoreIndex = parseInt(localStorage.getItem(\"maxScoreIndex\"));\n            this.state.settings = Object.assign((0, $68e612a17b33f886$export$100e28ec40f7f33c)(), JSON.parse(localStorage.getItem(\"settings\")));\n            this.state.maxScoreObjects = JSON.parse(localStorage.getItem(\"maxScoreObjects\"));\n        }\n        this.applySettingsUpdateWordList();\n        this.state.currentWord = $2b6e161c9edcf319$var$loadNewWord(this.state.currentWordList);\n        this.state.wordsRecentlySeenQueue = [];\n        this.state.currentStreak0OnReset = false;\n        this.state.loadWordOnReset = false;\n        document.getElementById(\"max-streak-text\").textContent = this.state.maxScoreObjects[this.state.maxScoreIndex].score;\n        this.loadMainView();\n    }\n    applySettingsUpdateWordList() {\n        const filteredWords = (0, $68e612a17b33f886$export$9ad811eb0029a5fe)(this.state.settings, this.state.completeWordList);\n        $2b6e161c9edcf319$var$equalizeProbabilities(filteredWords);\n        this.state.currentWordList = filteredWords;\n    }\n}\n$2b6e161c9edcf319$var$initApp();\n// Keeping the top container hidden at the beginning prevents 1 frame of malformed UI being shown\n(0, $820877bea407f5fe$export$ef83af2c8dc2c683)(document.getElementById(\"toppest-container\"), false);\nif (!$2b6e161c9edcf319$var$isTouch) document.getElementById(\"main-text-input\").focus();\n\n\n//# sourceMappingURL=index.a2bfee2a.js.map\n","// vim: set ts=4 sw=4 expandtab\n// (C) 2010 Dan Bravender - licensed under the AGPL 3.0\n\n/*  Geulja is used to track modifications that have been made to\n    characters. Currently, it keeps track of characters' original\n    padchims (for ㄷ -> ㄹ irregulars) and if the character has\n    no padchim but should be treated as if it does (for ㅅ\n    irregulars). When substrings are extracted the Geulja class\n    keeps these markers for the last character only.\n*/\n\nexport function Geulja(__value__) {\n    this.__value__ = __value__ || \"\";\n    this._length = this.__value__.length; // Use a different property name for length\n    this.hidden_padchim = false;\n    this.original_padchim = null;\n\n    this.charAt = function () {\n        let result = String.prototype.charAt.apply(this, arguments);\n        if (arguments[0] == this._length - 1) { // Use _length here\n            result = new Geulja(result);\n            result.original_padchim = this.original_padchim;\n            result.hidden_padchim = this.hidden_padchim;\n        }\n        return result;\n    };\n}\n\n// with(Geulja.prototype = new String) {\n//     toString = valueOf = function() {\n//         return this.__value__\n//     };\n// }\n\nGeulja.prototype = new String();\n\n// Assign the methods directly to Geulja.prototype\nGeulja.prototype.toString = Geulja.prototype.valueOf = function () {\n    return this.__value__;\n};\n\n\nexport var hangeul = {};\n\nhangeul.Geulja = Geulja;\nhangeul.is_hangeul = function (character) {\n    if (character.charCodeAt(0) >= '가'.charCodeAt(0) &&\n        character.charCodeAt(0) <= '힣'.charCodeAt(0)) {\n        return true;\n    }\n    return false;\n};\n// Equations lifted directly from:\n// http://www.kfunigraz.ac.at/~katzer/korean_hangul_unicode.html\nhangeul.lead = function (character) {\n    return String.fromCharCode((Math.floor(character.charCodeAt(0) - 44032) / 588) + 4352);\n};\nhangeul.vowel = function (character) {\n    let padchim_character = hangeul.padchim(character);\n    let padchim_offset;\n    if (!padchim_character || padchim_character == true) {\n        padchim_offset = -1;\n    } else {\n        padchim_offset = padchim_character.charCodeAt(0) - 'ᆨ'.charCodeAt(0);\n    }\n    return String.fromCharCode(Math.floor(((character.charCodeAt(0) - 44032 - padchim_offset) % 588) / 28) + 'ㅏ'.charCodeAt(0));\n};\nhangeul.padchim = function (character) {\n    if (character.hidden_padchim) {\n        return true;\n    }\n    if (character.original_padchim) {\n        return character.original_padchim;\n    }\n    let p = String.fromCharCode(((character.charCodeAt(0) - 44032) % 28) + 'ᆨ'.charCodeAt(0) - 1)\n    if (p.charCodeAt(0) == 4519) {\n        return null;\n    } else {\n        return p;\n    }\n};\nhangeul.join = function (lead, vowel, padchim) {\n    let lead_offset = lead.charCodeAt(0) - 'ᄀ'.charCodeAt(0);\n    let vowel_offset = vowel.charCodeAt(0) - 'ㅏ'.charCodeAt(0);\n    let padchim_offset;\n    if (padchim) {\n        padchim_offset = padchim.charCodeAt(0) - 'ᆨ'.charCodeAt(0);\n    } else {\n        padchim_offset = -1;\n    }\n    return String.fromCharCode(padchim_offset + (vowel_offset) * 28 + (lead_offset) * 588 + 44032 + 1);\n};\nhangeul.find_vowel_to_append = function (string) {\n    self = hangeul;\n    let append = null;\n    string.split('').reverse().forEach(function (character) {\n        if (character in { '뜨': true, '쓰': true, '트': true }) {\n            if (!append) append = '어';\n        }\n        if (self.vowel(character) == 'ㅡ' && !self.padchim(character)) {\n            //continue\n        } else if (self.vowel(character) in { 'ㅗ': true, 'ㅏ': true, 'ㅑ': true }) {\n            if (!append) append = '아';\n        } else {\n            if (!append) append = '어';\n        }\n    });\n    if (!append) append = '어';\n    return append;\n};\nhangeul.match = function (character, l, v, p) {\n    return (l == '*' || this.lead(character) == l) &&\n        (v == '*' || this.vowel(character) == v) &&\n        (p == '*' || this.padchim(character) == p)\n};\n\n\n\n\n// export var hangeul = (() => {\n//     this.Geulja = Geulja;\n//     this.is_hangeul = function (character) {\n//         if (character.charCodeAt(0) >= '가'.charCodeAt(0) &&\n//             character.charCodeAt(0) <= '힣'.charCodeAt(0)) {\n//             return true;\n//         }\n//         return false;\n//     };\n//     // Equations lifted directly from:\n//     // http://www.kfunigraz.ac.at/~katzer/korean_hangul_unicode.html\n//     this.lead = function (character) {\n//         return String.fromCharCode((Math.floor(character.charCodeAt(0) - 44032) / 588) + 4352);\n//     };\n//     this.vowel = function (character) {\n//         padchim_character = this.padchim(character);\n//         if (!padchim_character || padchim_character == true) {\n//             padchim_offset = -1;\n//         } else {\n//             padchim_offset = padchim_character.charCodeAt(0) - 'ᆨ'.charCodeAt(0);\n//         }\n//         return String.fromCharCode(Math.floor(((character.charCodeAt(0) - 44032 - padchim_offset) % 588) / 28) + 'ㅏ'.charCodeAt(0));\n//     };\n//     this.padchim = function (character) {\n//         if (character.hidden_padchim) {\n//             return true;\n//         }\n//         if (character.original_padchim) {\n//             return character.original_padchim;\n//         }\n//         p = String.fromCharCode(((character.charCodeAt(0) - 44032) % 28) + 'ᆨ'.charCodeAt(0) - 1)\n//         if (p.charCodeAt(0) == 4519) {\n//             return null;\n//         } else {\n//             return p;\n//         }\n//     };\n//     this.join = function (lead, vowel, padchim) {\n//         lead_offset = lead.charCodeAt(0) - 'ᄀ'.charCodeAt(0);\n//         vowel_offset = vowel.charCodeAt(0) - 'ㅏ'.charCodeAt(0);\n//         if (padchim) {\n//             padchim_offset = padchim.charCodeAt(0) - 'ᆨ'.charCodeAt(0);\n//         } else {\n//             padchim_offset = -1;\n//         }\n//         return String.fromCharCode(padchim_offset + (vowel_offset) * 28 + (lead_offset) * 588 + 44032 + 1);\n//     };\n//     this.find_vowel_to_append = function (string) {\n//         self = this;\n//         append = null;\n//         string.split('').reverse().forEach(function (character) {\n//             if (character in { '뜨': true, '쓰': true, '트': true }) {\n//                 if (!append) append = '어';\n//             }\n//             if (self.vowel(character) == 'ㅡ' && !self.padchim(character)) {\n//                 //continue\n//             } else if (self.vowel(character) in { 'ㅗ': true, 'ㅏ': true, 'ㅑ': true }) {\n//                 if (!append) append = '아';\n//             } else {\n//                 if (!append) append = '어';\n//             }\n//         });\n//         if (!append) append = '어';\n//         return append;\n//     };\n//     this.match = function (character, l, v, p) {\n//         return (l == '*' || this.lead(character) == l) &&\n//             (v == '*' || this.vowel(character) == v) &&\n//             (p == '*' || this.padchim(character) == p)\n//     };\n//     return this;\n// })();\n\n// Export functions to node\ntry {\n    for (f in hangeul) {\n        exports[f] = hangeul[f];\n    }\n} catch (e) {\n}\n","// since the weights are mostly only used to make things repeat after x amount of rounds, they are overkill\n// would be less work to just wait x rounds and immeditely show what you missed, without updating any weights.\n\"use strict\";\n// import { bind, isJapanese } from \"wanakana\";\nimport {\n\tCONDITIONAL_UI_TIMINGS,\n\tgetDefaultSettings,\n\tgetVisibleConjugationSettings,\n\tremoveNonConjugationSettings,\n\tshowFurigana,\n\tshowTranslation,\n\tfindMaxScoreIndex,\n\tapplyAllSettingsFilterWords,\n\tapplyNonConjugationSettings,\n\n\toptionsMenuInit,\n\tselectCheckboxesInUi,\n\tshowHideOptionsAndCheckErrors,\n\tinsertSettingsFromUi,\n\tgetDefaultAdditiveSettings,\n} from \"./settingManagement.js\";\nimport { japaneseWordData, koreanWordData, fullWordData } from \"./worddata.js\";\nimport { CONJUGATION_TYPES, PARTS_OF_SPEECH } from \"./wordEnums.js\";\nimport {\n\ttoggleDisplayNone,\n\tcreateArrayOfArrays,\n\ttoggleBackgroundNone,\n} from \"./utils.js\";\n\nimport { conjugator_functions } from \"./conjugation/conjugator.js\";\n\nconst isTouch = \"ontouchstart\" in window || navigator.msMaxTouchPoints > 0;\ndocument.getElementById(\"press-any-key-text\").textContent = isTouch\n\t? \"Tap to continue\"\n\t: \"Press Enter/Return to continue\";\n\n// Stored in state.activeScreen\nconst SCREENS = Object.freeze({\n\tquestion: 0,\n\t// Incorrect and correct answers are considered the same \"results\" screen\n\tresults: 1,\n\tsettings: 2,\n});\n\nfunction wordTypeToDisplayText(type) {\n\tif (type == \"u\") {\n\t\treturn \"う-verb\";\n\t} else if (type == \"ru\") {\n\t\treturn \"る-verb\";\n\t} else if (type == \"irv\" || type == \"ira\") {\n\t\treturn \"Irregular\";\n\t} else if (type == \"i\") {\n\t\treturn \"い-adjective\";\n\t} else if (type == \"na\") {\n\t\treturn \"な-adjective\";\n\t}\n}\n\nfunction conjugationInqueryFormatting(conjugation) {\n\tlet newString = \"\";\n\n\tfunction createInqueryText(text, emoji) {\n\t\treturn `<div class=\"conjugation-inquery\"><div class=\"inquery-emoji\">${emoji}</div><div class=\"inquery-text\">${text}</div></div> `;\n\t}\n\n\tif (conjugation.type === CONJUGATION_TYPES.past) {\n\t\tnewString += createInqueryText(CONJUGATION_TYPES.past, \"⌚\");\n\t} else if (\n\t\tconjugation.type === CONJUGATION_TYPES.te ||\n\t\tconjugation.type === CONJUGATION_TYPES.adverb\n\t) {\n\t\tnewString += conjugation.type;\n\t} else if (conjugation.type === CONJUGATION_TYPES.volitional) {\n\t\tnewString += createInqueryText(CONJUGATION_TYPES.volitional, \"🍻\");\n\t} else if (conjugation.type === CONJUGATION_TYPES.passive) {\n\t\tnewString += createInqueryText(CONJUGATION_TYPES.passive, \"🧘\");\n\t} else if (conjugation.type === CONJUGATION_TYPES.causative) {\n\t\tnewString += createInqueryText(CONJUGATION_TYPES.causative, \"👩‍🏫\");\n\t} else if (conjugation.type === CONJUGATION_TYPES.potential) {\n\t\tnewString += createInqueryText(CONJUGATION_TYPES.potential, \"‍🏋\");\n\t} else if (conjugation.type === CONJUGATION_TYPES.imperative) {\n\t\tnewString += createInqueryText(CONJUGATION_TYPES.imperative, \"📢\");\n\t}\n\n\t// This used to also add \"Affirmative\" text when affirmative was true, but it was a little redundant.\n\t// Now it only adds \"Negative\" text when affirmative is false.\n\t// if (conjugation.affirmative === false) {\n\t// \tnewString += createInqueryText(\"Negative\", \"🚫\");\n\t// } else {\n\t// \tnewString += createInqueryText(\"Affirmative\", \"✅\");\n\t// }\n\n\tif (conjugation.formal === true) {\n\t\tnewString += createInqueryText(\"Formal\", \"👔\");\n\t} else if (conjugation.formal === false) {\n\t\tnewString += createInqueryText(\"Informal\", \"👪\");\n\t}\n\n\tif (conjugation.polite === true) {\n\t\tnewString += createInqueryText(\"Polite\", \"👔\");\n\t} else if (conjugation.polite === false) {\n\t\tnewString += createInqueryText(\"Impolite\", \"👪\");\n\t}\n\n\tif (conjugation.polite === false && conjugation.formal == false) {\n\t\tnewString += createInqueryText(\"(Casual)\", \"\")\n\t}\n\n\treturn newString;\n}\n\nfunction changeVerbBoxFontColor(color) {\n\tlet ps = document.getElementById(\"verb-box\").getElementsByTagName(\"p\");\n\tfor (let p of Array.from(ps)) {\n\t\tp.style.color = color;\n\t}\n}\n\nfunction loadNewWord(wordList) {\n\tlet word = pickRandomWord(wordList);\n\tupdateCurrentWord(word);\n\tchangeVerbBoxFontColor(\"rgb(244, 226, 197)\");\n\treturn word;\n}\n\nfunction updateCurrentWord(word) {\n\t// Caution: verb-box is controlled using a combination of the background-none class and setting style.background directly.\n\t// The background-none class is useful for other CSS selectors to grab onto,\n\t// while the style.background is useful for setting variable bg colors.\n\ttoggleBackgroundNone(document.getElementById(\"verb-box\"), true);\n\t// The <rt> element had different padding on different browsers.\n\t// Rather than attacking it with CSS, just replace it with a span we have control over.\n\tconst verbHtml = word.wordJSON.hangeul\n\t\t.replaceAll(\"<rt>\", '<span class=\"rt\">')\n\t\t.replaceAll(\"</rt>\", \"</span>\");\n\tdocument.getElementById(\"verb-text\").innerHTML = verbHtml;\n\tdocument.getElementById(\"translation\").textContent = word.wordJSON.eng;\n\t// Set verb-type to a non-breaking space to preserve vertical height\n\tdocument.getElementById(\"verb-type\").textContent = \"\\u00A0\";\n\tdocument.getElementById(\"conjugation-inquery-text\").innerHTML =\n\t\tconjugationInqueryFormatting(word.conjugation);\n}\n\n\nfunction extractKoreanCharacters(text) {\n    // Use a regex to match only Korean Hangul characters (Unicode range \\uAC00-\\uD7A3)\n    return text.replace(/[^\\uAC00-\\uD7A3]/g, '');\n}\n\nfunction getNegation(word) {\n\treturn word.slice(0, -1) + \"지 않다\"\n}\n\nfunction getKoreanConjugation(word, mood, tense, formality, politeness) {\n\tlet conjugator_function = conjugator_functions[mood][tense][formality][politeness];\n\tconst conjugation = conjugator_function(word);\n\t\n\tlet type;\n\tif (tense == \"present\") {\n\t\ttype = CONJUGATION_TYPES.present;\n\t} else {\n\t\ttype = CONJUGATION_TYPES.past;\n\t}\n\n\treturn new Conjugation(\n\t\t[conjugation],\n\t\ttype,\n\t\ttrue,\n\t\t(formality == \"formal\"),\n\t\t(politeness == \"polite\")\n\t);\n}\n\nfunction getAllKoreanConjugations(wordJSON) {\n\tconst allConjugations = [];\n\tconst word = extractKoreanCharacters(wordJSON.hangeul)\n\n\tconst moods = [\"declarative\"];\n\tconst tenses = [\"present\", \"past\"]\n\tconst formalities = [\"informal\", \"formal\"]\n\tconst politeness = [\"plain\", \"polite\"]\n\n\tfor (const mood of moods) {\n\t\tfor (const tense of tenses) {\n\t\t\tfor (const formal of formalities) {\n\t\t\t\tfor (const polite of politeness) {\n\t\t\t\t\tallConjugations.push(\n\t\t\t\t\t\tgetKoreanConjugation(\n\t\t\t\t\t\t\tword,\n\t\t\t\t\t\t\tmood,\n\t\t\t\t\t\t\ttense,\n\t\t\t\t\t\t\tformal,\n\t\t\t\t\t\t\tpolite\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn allConjugations.flat();\n}\n\nclass Conjugation {\n\t// conjugationType is CONJUGATION_TYPES enum\n\tconstructor(validAnswers, conjugationType, affirmative, formal, polite) {\n\t\tthis.validAnswers = validAnswers;\n\t\tthis.type = conjugationType;\n\t\tthis.affirmative = affirmative;\n\t\tthis.formal = formal;\n\t\tthis.polite = polite\n\t}\n}\n\nclass Word {\n\t// conjugation is Conjugation class object\n\tconstructor(wordJSON, conjugation) {\n\t\tthis.wordJSON = wordJSON;\n\t\tthis.conjugation = conjugation;\n\n\t\t// Probability is updated directly by external functions\n\t\tthis.probability = 0;\n\t\t// wasRecentlyIncorrect is used when calculating probability\n\t\tthis.wasRecentlyIncorrect = false;\n\t}\n}\n\nclass WordRecentlySeen {\n\tconstructor(word, wasCorrect) {\n\t\tthis.word = word;\n\t\tthis.wasCorrect = wasCorrect;\n\t}\n}\n\nfunction findMinProb(currentWords) {\n\tlet min = 2;\n\tfor (let i = 0; i < currentWords.length; i++) {\n\t\tfor (let j = 0; j < currentWords[i].length; j++) {\n\t\t\tmin =\n\t\t\t\tcurrentWords[i][j].probability < min &&\n\t\t\t\tcurrentWords[i][j].probability != 0\n\t\t\t\t\t? currentWords[i][j].probability\n\t\t\t\t\t: min;\n\t\t}\n\t}\n\treturn min;\n}\n\nfunction findMaxProb(currentWords) {\n\tlet max = 0;\n\tfor (let i = 0; i < currentWords.length; i++) {\n\t\tfor (let j = 0; j < currentWords[i].length; j++) {\n\t\t\tmax =\n\t\t\t\tcurrentWords[i][j].probability > max\n\t\t\t\t\t? currentWords[i][j].probability\n\t\t\t\t\t: max;\n\t\t}\n\t}\n\treturn max;\n}\n\nfunction normalizeProbabilities(currentWords) {\n\tlet totalProbability = 0;\n\t// get total of probabilities\n\tfor (let i = 0; i < currentWords.length; i++) {\n\t\tfor (let j = 0; j < currentWords[i].length; j++) {\n\t\t\ttotalProbability += currentWords[i][j].probability;\n\t\t}\n\t}\n\n\t// normalize\n\tfor (let i = 0; i < currentWords.length; i++) {\n\t\tfor (let j = 0; j < currentWords[i].length; j++) {\n\t\t\tcurrentWords[i][j].probability /= totalProbability;\n\t\t}\n\t}\n}\n\nfunction setAllProbabilitiesToValue(currentWords, value) {\n\tfor (let i = 0; i < currentWords.length; i++) {\n\t\tfor (let j = 0; j < currentWords[i].length; j++) {\n\t\t\tcurrentWords[i][j].probability = value;\n\t\t}\n\t}\n}\n\n// Sets all of the probabilities to the same normalized value\nfunction equalizeProbabilities(currentWords) {\n\tsetAllProbabilitiesToValue(currentWords, 1);\n\n\t// Now that all of the probabilities are equal,\n\t// normalize them so together they all add up to 1.\n\tnormalizeProbabilities(currentWords);\n}\n\nfunction updateProbabilites(\n\tcurrentWords,\n\twordsRecentlySeenQueue,\n\tcurrentWord,\n\tcurrentWordWasCorrect\n) {\n\tconst roundsToWait = 2;\n\n\t// If the number of current verb + adjective conjugations is less than roundsToWait + 1,\n\t// the pool of conjugations is too small for our wordsRecentlySeenQueue to work.\n\tif (currentWords[0].length + currentWords[1].length < roundsToWait + 1) {\n\t\t// Set all probabilities except the current word to be equal to avoid getting the same question twice\n\t\tsetAllProbabilitiesToValue(currentWords, 1);\n\t\tcurrentWord.probability = 0;\n\t\tnormalizeProbabilities(currentWords);\n\t\treturn;\n\t}\n\n\t// Lower probability of running into words in the same group\n\tif (currentWord.wordJSON.group) {\n\t\tconst currentConjugation = currentWord.conjugation;\n\t\tconst group = currentWord.wordJSON.group;\n\n\t\tcurrentWords[\n\t\t\tgetPartOfSpeech(currentWord.wordJSON) === PARTS_OF_SPEECH.verb ? 0 : 1\n\t\t]\n\t\t\t.filter((word) => {\n\t\t\t\tconst conjugation = word.conjugation;\n\t\t\t\t// Only alter probabilities of the exact same conjugation for other words in the group\n\t\t\t\treturn (\n\t\t\t\t\tword.wordJSON.group === group &&\n\t\t\t\t\tword !== currentWord &&\n\t\t\t\t\tconjugation.type === currentConjugation.type &&\n\t\t\t\t\tconjugation.affirmative === currentConjugation.affirmative &&\n\t\t\t\t\tconjugation.polite === currentConjugation.polite\n\t\t\t\t);\n\t\t\t})\n\t\t\t.forEach((word) => {\n\t\t\t\t// Have to be careful with lowering this too much, because it can affect findMinProb for other conjugations.\n\t\t\t\t// Also, lowering it by a lot will make all of these words appear in a cluster after all the other words have been seen.\n\t\t\t\t// Note that this is happening whether currentWordWasCorrect is true or false,\n\t\t\t\t// so if someone got currentWord wrong many times it would tank the probabilities in this forEach over time.\n\t\t\t\tword.probability /= 3;\n\t\t\t});\n\t}\n\n\t// We wait \"roundsToWait\" rounds to set the probability of questions.\n\t// This allows us to have a few rounds immediately after a question where it's guaranteed to not appear again,\n\t// followed by the ability to set a high probability for the question to show up immediately after that waiting period (if the answer was incorrect).\n\tif (wordsRecentlySeenQueue.length >= roundsToWait) {\n\t\tlet dequeuedWord = wordsRecentlySeenQueue.shift();\n\t\t// Using findMinProb isn't a good solution because if you get one correct it's going to shrink the min prob a lot and affect future questions you get right or wrong.\n\t\t// In the future there should probably be a static probability given to corrects, incorrects, and unseens, where that probability slowly grows the longer the word hasn't been seen.\n\t\tlet currentMinProb = findMinProb(currentWords);\n\t\tconst correctProbModifier = 0.5;\n\t\tconst incorrectProbModifier = 0.85;\n\n\t\tlet newProbability;\n\n\t\tif (dequeuedWord.wasCorrect && !dequeuedWord.word.wasRecentlyIncorrect) {\n\t\t\tnewProbability = currentMinProb * correctProbModifier;\n\t\t} else if (\n\t\t\tdequeuedWord.wasCorrect &&\n\t\t\tdequeuedWord.word.wasRecentlyIncorrect\n\t\t) {\n\t\t\tnewProbability = currentMinProb * incorrectProbModifier;\n\t\t\tdequeuedWord.word.wasRecentlyIncorrect = false;\n\t\t} else if (!dequeuedWord.wasCorrect) {\n\t\t\t// Set to an arbitrary high number to (nearly) guarantee this question is asked next.\n\t\t\tnewProbability = 10;\n\t\t}\n\n\t\tdequeuedWord.word.probability = newProbability;\n\t}\n\n\t// Keep track of misses so when the user finally gets it right,\n\t// we can still give it a higher probability of appearing again than\n\t// questions they got right on the first try.\n\tif (!currentWordWasCorrect) {\n\t\tcurrentWord.wasRecentlyIncorrect = true;\n\t}\n\n\twordsRecentlySeenQueue.push(\n\t\tnew WordRecentlySeen(currentWord, currentWordWasCorrect)\n\t);\n\t// Make sure the user will not see the current question until at least \"roundsToWait\" number of rounds\n\tcurrentWord.probability = 0;\n\n\tnormalizeProbabilities(currentWords);\n}\n\n// returns 2D array [verbarray, adjarray]\nfunction createWordList(JSONWords) {\n\tlet wordList = createArrayOfArrays(JSONWords.length);\n\n\tfor (let i = 0; i < JSONWords.length; i++) {\n\t\tfor (let j = 0; j < JSONWords[i].length; j++) {\n\t\t\tlet conjugations = getAllKoreanConjugations(JSONWords[i][j]);\n\t\t\tfor (let k = 0; k < conjugations.length; k++) {\n\t\t\t\twordList[i].push(new Word(JSONWords[i][j], conjugations[k]));\n\t\t\t}\n\t\t}\n\t}\n\treturn wordList;\n}\n\nfunction pickRandomWord(wordList) {\n\tlet random = Math.random();\n\n\ttry {\n\t\tfor (let i = 0; i < wordList.length; i++) {\n\t\t\tfor (let j = 0; j < wordList[i].length; j++) {\n\t\t\t\tif (random < wordList[i][j].probability) {\n\t\t\t\t\treturn wordList[i][j];\n\t\t\t\t}\n\t\t\t\t// console.log(random)\n\t\t\t\trandom -= wordList[i][j].probability;\n\t\t\t}\n\t\t}\n\t\tthrow \"no random word chosen\";\n\t} catch (err) {\n\t\tconsole.error(err);\n\t\treturn wordList[0][getRandomInt(wordList[0].length - 1)];\n\t}\n}\n\nfunction addToScore(amount = 1, maxScoreObjects, maxScoreIndex) {\n\tif (amount == 0) {\n\t\treturn;\n\t}\n\tlet max = document.getElementById(\"max-streak-text\");\n\tlet current = document.getElementById(\"current-streak-text\");\n\n\tif (parseInt(max.textContent) <= parseInt(current.textContent)) {\n\t\tlet newAmount = parseInt(max.textContent) + amount;\n\t\tmax.textContent = newAmount;\n\t\tif (\n\t\t\t!document\n\t\t\t\t.getElementById(\"max-streak\")\n\t\t\t\t.classList.contains(\"display-none\")\n\t\t) {\n\t\t\tmax.classList.add(\"grow-animation\");\n\t\t}\n\n\t\tmaxScoreObjects[maxScoreIndex].score = newAmount;\n\t\tlocalStorage.setItem(\"maxScoreObjects\", JSON.stringify(maxScoreObjects));\n\t}\n\n\tcurrent.textContent = parseInt(current.textContent) + amount;\n\tif (\n\t\t!document\n\t\t\t.getElementById(\"current-streak\")\n\t\t\t.classList.contains(\"display-none\")\n\t) {\n\t\tcurrent.classList.add(\"grow-animation\");\n\t}\n}\n\nfunction typeToWordBoxColor(type) {\n\tswitch (type) {\n\t\tcase \"u\":\n\t\t\treturn \"rgb(255, 125, 0)\";\n\t\tcase \"ru\":\n\t\t\treturn \"rgb(5, 80, 245)\";\n\t\tcase \"irv\":\n\t\t\treturn \"gray\";\n\t\tcase \"ira\":\n\t\t\treturn \"gray\";\n\t\tcase \"i\":\n\t\t\treturn \"rgb(0, 180, 240)\";\n\t\tcase \"na\":\n\t\t\treturn \"rgb(143, 73, 40)\";\n\t}\n}\n\nfunction updateStatusBoxes(word, entryText) {\n\tlet statusBox = document.getElementById(\"status-box\");\n\ttoggleDisplayNone(statusBox, false);\n\n\tif (word.conjugation.validAnswers.some((e) => e == entryText)) {\n\t\tstatusBox.style.background = \"green\";\n\t\tconst subConjugationForm = getSubConjugationForm(word, entryText);\n\t\tdocument.getElementById(\"status-text\").innerHTML = `Correct${\n\t\t\tsubConjugationForm != null\n\t\t\t\t? '<span class=\"sub-conjugation-indicator\">(' +\n\t\t\t\t  subConjugationForm +\n\t\t\t\t  \")</span>\"\n\t\t\t\t: \"\"\n\t\t}<br>${entryText} ○`;\n\t} else {\n\t\tdocument.getElementById(\"verb-box\").style.background = typeToWordBoxColor(\n\t\t\tword.wordJSON.type\n\t\t);\n\t\ttoggleBackgroundNone(document.getElementById(\"verb-box\"), false);\n\t\tchangeVerbBoxFontColor(\"white\");\n\t\tdocument.getElementById(\"verb-type\").textContent = wordTypeToDisplayText(\n\t\t\tword.wordJSON.type\n\t\t);\n\n\t\tstatusBox.style.background = \"rgb(218, 5, 5)\";\n\t\t// Assuming validAnswers[0] is the hiragana answer\n\t\tdocument.getElementById(\"status-text\").innerHTML =\n\t\t\t(entryText == \"\" ? \"_\" : entryText) +\n\t\t\t\" ×<br>\" +\n\t\t\tword.conjugation.validAnswers[0] +\n\t\t\t\" ○\";\n\t}\n}\n\n// If this valid answer is in a non-standard form worth pointing out to the user,\n// return a string containing that form's name.\n// This applies to conjugation types that allow multiple correct answers for the same question,\n// where the user may enter a correct answer without realizing why it was correct.\nfunction getSubConjugationForm(word, validAnswer) {\n\t// const kanjiWord = toKanjiPlusHiragana(word.wordJSON.kanji);\n\t// const hiraganaWord = toHiragana(word.wordJSON.kanji);\n\n\t// // Check for potential \"れる\" short form\n\t// if (\n\t// \tword.conjugation.type === CONJUGATION_TYPES.potential &&\n\t// \t(word.wordJSON.type === \"ru\" || kanjiWord === \"来る\")\n\t// ) {\n\t// \tconst shortFormStems = [];\n\n\t// \tshortFormStems.push(dropFinalLetter(kanjiWord) + \"れ\");\n\t// \tif (word.wordJSON.type === \"ru\") {\n\t// \t\tshortFormStems.push(dropFinalLetter(hiraganaWord) + \"れ\");\n\t// \t} else if (kanjiWord === \"来る\") {\n\t// \t\tshortFormStems.push(\"これ\");\n\t// \t}\n\n\t// \tif (shortFormStems.some((stem) => validAnswer.startsWith(stem))) {\n\t// \t\treturn \"ら-omitted short form\";\n\t// \t}\n\t// }\n\n\treturn null;\n}\n\n// stored in array in local storage\nexport class MaxScoreObject {\n\tconstructor(score, settings) {\n\t\tthis.score = score;\n\t\tthis.settings = settings;\n\t}\n}\n\n// Array index 0 = verbs, 1 = adjectives\n// Stored in an array instead of object to make parsing faster. Upon reflection this was not worth it.\nfunction initApp() {\n\tlet wordData = koreanWordData;\n\tnew ConjugationApp([wordData.verbs, wordData.adjectives]);\n}\n\nclass ConjugationApp {\n\tconstructor(words) {\n\t\tconst mainInput = document.getElementById(\"main-text-input\");\n\t\t// bind(mainInput);\n\n\t\tthis.initState(words);\n\n\t\tmainInput.addEventListener(\"keydown\", (e) => this.inputKeyPress(e));\n\t\tdocument\n\t\t\t.getElementById(\"options-button\")\n\t\t\t.addEventListener(\"click\", (e) => this.settingsButtonClicked(e));\n\t\tdocument\n\t\t\t.getElementById(\"options-form\")\n\t\t\t.addEventListener(\"submit\", (e) => this.backButtonClicked(e));\n\n\t\tdocument\n\t\t\t.getElementById(\"current-streak-text\")\n\t\t\t.addEventListener(\"animationend\", (e) => {\n\t\t\t\tdocument\n\t\t\t\t\t.getElementById(\"current-streak-text\")\n\t\t\t\t\t.classList.remove(e.animationName);\n\t\t\t});\n\t\tdocument\n\t\t\t.getElementById(\"max-streak-text\")\n\t\t\t.addEventListener(\"animationend\", (e) => {\n\t\t\t\tdocument\n\t\t\t\t\t.getElementById(\"max-streak-text\")\n\t\t\t\t\t.classList.remove(e.animationName);\n\t\t\t});\n\n\t\tdocument\n\t\t\t.getElementById(\"status-box\")\n\t\t\t.addEventListener(\"animationend\", (e) => {\n\t\t\t\tdocument\n\t\t\t\t\t.getElementById(\"status-box\")\n\t\t\t\t\t.classList.remove(e.animationName);\n\t\t\t});\n\n\t\tdocument\n\t\t\t.getElementById(\"input-tooltip\")\n\t\t\t.addEventListener(\"animationend\", (e) => {\n\t\t\t\tdocument\n\t\t\t\t\t.getElementById(\"input-tooltip\")\n\t\t\t\t\t.classList.remove(e.animationName);\n\t\t\t});\n\n\t\tdocument.addEventListener(\"keydown\", this.onKeyDown.bind(this));\n\t\tdocument.addEventListener(\"touchend\", this.onTouchEnd.bind(this));\n\n\t\toptionsMenuInit();\n\t}\n\n\tloadMainView() {\n\t\tthis.state.activeScreen = SCREENS.question;\n\t\tdocument.getElementById(\"main-view\").classList.add(\"question-screen\");\n\t\tdocument.getElementById(\"main-view\").classList.remove(\"results-screen\");\n\n\t\tdocument\n\t\t\t.getElementById(\"input-tooltip\")\n\t\t\t.classList.remove(\"tooltip-fade-animation\");\n\n\t\ttoggleDisplayNone(document.getElementById(\"press-any-key-text\"), true);\n\t\ttoggleDisplayNone(document.getElementById(\"status-box\"), true);\n\n\t\tif (this.state.currentStreak0OnReset) {\n\t\t\tdocument.getElementById(\"current-streak-text\").textContent = \"0\";\n\t\t\tthis.state.currentStreak0OnReset = false;\n\t\t}\n\n\t\tif (this.state.loadWordOnReset) {\n\t\t\tthis.state.currentWord = loadNewWord(this.state.currentWordList);\n\t\t\tthis.state.loadWordOnReset = false;\n\t\t}\n\n\t\t// Furigana and translation may need to be hidden during the question screen\n\t\tshowFurigana(\n\t\t\tthis.state.settings.furigana,\n\t\t\tthis.state.settings.furiganaTiming ===\n\t\t\t\tCONDITIONAL_UI_TIMINGS.onlyAfterAnswering\n\t\t);\n\t\tshowTranslation(\n\t\t\tthis.state.settings.translation,\n\t\t\tthis.state.settings.translationTiming ===\n\t\t\t\tCONDITIONAL_UI_TIMINGS.onlyAfterAnswering\n\t\t);\n\n\t\tconst mainInput = document.getElementById(\"main-text-input\");\n\t\tmainInput.disabled = false;\n\t\tmainInput.value = \"\";\n\t\tif (!isTouch) {\n\t\t\tmainInput.focus();\n\t\t}\n\t}\n\n\t// Handle generic keydown events that aren't targeting a specific element\n\tonKeyDown(e) {\n\t\tlet keyCode = e.keyCode ? e.keyCode : e.which;\n\t\tif (\n\t\t\tthis.state.activeScreen === SCREENS.results &&\n\t\t\tkeyCode == \"13\" &&\n\t\t\tdocument.activeElement.id !== \"options-button\"\n\t\t) {\n\t\t\tthis.loadMainView();\n\t\t}\n\t}\n\n\t// Handle generic touchend events that aren't targeting a specific element\n\tonTouchEnd(e) {\n\t\tif (\n\t\t\tthis.state.activeScreen === SCREENS.results &&\n\t\t\te.target != document.getElementById(\"options-button\")\n\t\t) {\n\t\t\tthis.loadMainView();\n\t\t}\n\t}\n\n\tinputKeyPress(e) {\n\t\tlet keyCode = e.keyCode ? e.keyCode : e.which;\n\t\tif (keyCode == \"13\") {\n\t\t\te.stopPropagation();\n\n\t\t\tconst mainInput = document.getElementById(\"main-text-input\");\n\t\t\tlet inputValue = mainInput.value;\n\n\t\t\t// const finalChar = inputValue[inputValue.length - 1];\n\t\t\t// switch (finalChar) {\n\t\t\t// \t// Set hanging n to ん\n\t\t\t// \tcase \"n\":\n\t\t\t// \t\tinputValue = inputValue.replace(/n$/, \"ん\");\n\t\t\t// \t\tbreak;\n\t\t\t// \t// Remove hanging 。\n\t\t\t// \tcase \"。\":\n\t\t\t// \t\tinputValue = inputValue.replace(/。$/, \"\");\n\t\t\t// }\n\n\t\t\t// if (!isJapanese(inputValue)) {\n\t\t\t// \tdocument\n\t\t\t// \t\t.getElementById(\"input-tooltip\")\n\t\t\t// \t\t.classList.add(\"tooltip-fade-animation\");\n\t\t\t// \treturn;\n\t\t\t// } else {\n\t\t\t// \tdocument\n\t\t\t// \t\t.getElementById(\"input-tooltip\")\n\t\t\t// \t\t.classList.remove(\"tooltip-fade-animation\");\n\t\t\t// }\n\n\t\t\tthis.state.activeScreen = SCREENS.results;\n\t\t\tdocument\n\t\t\t\t.getElementById(\"main-view\")\n\t\t\t\t.classList.remove(\"question-screen\");\n\t\t\tdocument.getElementById(\"main-view\").classList.add(\"results-screen\");\n\n\t\t\tmainInput.blur();\n\t\t\tupdateStatusBoxes(this.state.currentWord, inputValue);\n\t\t\t// If the furigana or translation were made transparent during the question, make them visible now\n\t\t\tshowFurigana(this.state.settings.furigana, false);\n\t\t\tshowTranslation(this.state.settings.translation, false);\n\n\t\t\t// update probabilities before next word is chosen so don't choose same word\n\t\t\tconst inputWasCorrect =\n\t\t\t\tthis.state.currentWord.conjugation.validAnswers.some(\n\t\t\t\t\t(e) => e == inputValue\n\t\t\t\t);\n\n\t\t\tupdateProbabilites(\n\t\t\t\tthis.state.currentWordList,\n\t\t\t\tthis.state.wordsRecentlySeenQueue,\n\t\t\t\tthis.state.currentWord,\n\t\t\t\tinputWasCorrect\n\t\t\t);\n\n\t\t\tif (inputWasCorrect) {\n\t\t\t\taddToScore(1, this.state.maxScoreObjects, this.state.maxScoreIndex);\n\t\t\t\tthis.state.currentStreak0OnReset = false;\n\t\t\t} else {\n\t\t\t\tthis.state.currentStreak0OnReset = true;\n\t\t\t}\n\t\t\tthis.state.loadWordOnReset = true;\n\n\t\t\tmainInput.disabled = true;\n\t\t\ttoggleDisplayNone(\n\t\t\t\tdocument.getElementById(\"press-any-key-text\"),\n\t\t\t\tfalse\n\t\t\t);\n\n\t\t\tmainInput.value = \"\";\n\t\t}\n\t}\n\n\tsettingsButtonClicked(e) {\n\t\tthis.state.activeScreen = SCREENS.settings;\n\n\t\tselectCheckboxesInUi(this.state.settings);\n\t\tshowHideOptionsAndCheckErrors();\n\n\t\ttoggleDisplayNone(document.getElementById(\"main-view\"), true);\n\t\ttoggleDisplayNone(document.getElementById(\"options-view\"), false);\n\t\ttoggleDisplayNone(document.getElementById(\"donation-section\"), false);\n\t}\n\n\tbackButtonClicked(e) {\n\t\te.preventDefault();\n\n\t\tinsertSettingsFromUi(this.state.settings);\n\t\tlocalStorage.setItem(\"settings\", JSON.stringify(this.state.settings));\n\n\t\tconst visibleConjugationSettings = getVisibleConjugationSettings();\n\t\tlet newMaxScoreIndex = findMaxScoreIndex(\n\t\t\tthis.state.maxScoreObjects,\n\t\t\tvisibleConjugationSettings\n\t\t);\n\n\t\tif (newMaxScoreIndex === -1) {\n\t\t\tthis.state.maxScoreObjects.push(\n\t\t\t\tnew MaxScoreObject(0, visibleConjugationSettings)\n\t\t\t);\n\t\t\tlocalStorage.setItem(\n\t\t\t\t\"maxScoreObjects\",\n\t\t\t\tJSON.stringify(this.state.maxScoreObjects)\n\t\t\t);\n\t\t\tnewMaxScoreIndex = this.state.maxScoreObjects.length - 1;\n\t\t}\n\n\t\tif (newMaxScoreIndex !== this.state.maxScoreIndex) {\n\t\t\tlocalStorage.setItem(\"maxScoreIndex\", newMaxScoreIndex);\n\t\t\tthis.state.maxScoreIndex = newMaxScoreIndex;\n\t\t\tthis.state.currentStreak0OnReset = true;\n\t\t\tthis.state.loadWordOnReset = true;\n\n\t\t\tthis.applySettingsUpdateWordList();\n\n\t\t\t// Note that the wordsRecentlySeenQueue is not cleared.\n\t\t\t// This is intentional, so if the new word list happens to include the words you recently missed,\n\t\t\t// they still have the chance of appearing again in a couple of rounds to retry.\n\t\t\t// If currentWordList doesn't contain those words in the queue, they won't be chosen anyways so the queue probability logic silenty fails.\n\t\t} else {\n\t\t\t// If none of the conjugation settings were changed, don't reload the word list or reset the probabilities\n\t\t\tapplyNonConjugationSettings(this.state.settings);\n\t\t}\n\n\t\tdocument.getElementById(\"max-streak-text\").textContent =\n\t\t\tthis.state.maxScoreObjects[this.state.maxScoreIndex].score;\n\n\t\ttoggleDisplayNone(document.getElementById(\"main-view\"), false);\n\t\ttoggleDisplayNone(document.getElementById(\"options-view\"), true);\n\t\ttoggleDisplayNone(document.getElementById(\"donation-section\"), true);\n\n\t\tthis.loadMainView();\n\t}\n\n\tinitState(words) {\n\t\tthis.state = {};\n\t\tthis.state.completeWordList = createWordList(words);\n\n\t\tif (\n\t\t\t!localStorage.getItem(\"maxScoreObjects\") ||\n\t\t\t!localStorage.getItem(\"maxScoreIndex\") ||\n\t\t\t!localStorage.getItem(\"settings\")\n\t\t) {\n\t\t\tthis.state.maxScoreIndex = 0;\n\t\t\tlocalStorage.setItem(\"maxScoreIndex\", this.state.maxScoreIndex);\n\n\t\t\tthis.state.settings = getDefaultSettings();\n\t\t\t\n\t\t\tlocalStorage.setItem(\"settings\", JSON.stringify(this.state.settings));\n\n\t\t\tthis.state.maxScoreObjects = [\n\t\t\t\tnew MaxScoreObject(\n\t\t\t\t\t0,\n\t\t\t\t\tremoveNonConjugationSettings(this.state.settings)\n\t\t\t\t),\n\t\t\t];\n\t\t\tlocalStorage.setItem(\n\t\t\t\t\"maxScoreObjects\",\n\t\t\t\tJSON.stringify(this.state.maxScoreObjects)\n\t\t\t);\n\t\t} else {\n\t\t\tthis.state.maxScoreIndex = parseInt(\n\t\t\t\tlocalStorage.getItem(\"maxScoreIndex\")\n\t\t\t);\n\t\t\tthis.state.settings = Object.assign(\n\t\t\t\tgetDefaultAdditiveSettings(),\n\t\t\t\tJSON.parse(localStorage.getItem(\"settings\"))\n\t\t\t);\n\t\t\tthis.state.maxScoreObjects = JSON.parse(\n\t\t\t\tlocalStorage.getItem(\"maxScoreObjects\")\n\t\t\t);\n\t\t}\n\n\t\tthis.applySettingsUpdateWordList();\n\n\t\tthis.state.currentWord = loadNewWord(this.state.currentWordList);\n\t\tthis.state.wordsRecentlySeenQueue = [];\n\t\t\n\t\tthis.state.currentStreak0OnReset = false;\n\t\tthis.state.loadWordOnReset = false;\n\n\t\tdocument.getElementById(\"max-streak-text\").textContent =\n\t\t\tthis.state.maxScoreObjects[this.state.maxScoreIndex].score;\n\n\t\tthis.loadMainView();\n\t}\n\n\tapplySettingsUpdateWordList() {\n\t\tconst filteredWords = applyAllSettingsFilterWords(\n\t\t\tthis.state.settings,\n\t\t\tthis.state.completeWordList\n\t\t);\n\t\tequalizeProbabilities(filteredWords);\n\t\tthis.state.currentWordList = filteredWords;\n\t}\n}\n\ninitApp();\n\n// Keeping the top container hidden at the beginning prevents 1 frame of malformed UI being shown\ntoggleDisplayNone(document.getElementById(\"toppest-container\"), false);\nif (!isTouch) {\n\tdocument.getElementById(\"main-text-input\").focus();\n}\n","import { CONJUGATION_TYPES, PARTS_OF_SPEECH } from \"./wordEnums.js\";\nimport { toggleDisplayNone, createArrayOfArrays } from \"./utils.js\";\n\n// Enum for radio options that conditionally show/hide UI elements\nexport const CONDITIONAL_UI_TIMINGS = Object.freeze({\n\talways: \"always\",\n\tonlyAfterAnswering: \"after\",\n});\n\nconst nonConjugationSettings = getNonConjugationSettingsSet();\n\nfunction getNonConjugationSettingsSet() {\n\tconst settings = new Set();\n\tdocument\n\t\t.querySelectorAll(\"#non-conjugation-settings input\")\n\t\t.forEach((input) => settings.add(input.getAttribute(\"name\")));\n\treturn settings;\n}\n\nexport function removeNonConjugationSettings(settings) {\n\tlet prunedSettings = JSON.parse(JSON.stringify(settings));\n\n\tnonConjugationSettings.forEach((s) => {\n\t\tdelete prunedSettings[s];\n\t});\n\treturn prunedSettings;\n}\n\n/**\n * The settings that should be set for new users\n * @returns {Object} settings\n */\nexport const getDefaultSettings = () => {\n\t// First set all checkboxes to true\n\t// document.getElementById(\"options-form\")\n\t// \t.querySelectorAll('[type=\"checkbox\"]').checked = true;\n\tconst inputs = document\n\t\t.getElementById(\"options-form\")\n\t\t.querySelectorAll('[type=\"checkbox\"]');\n\tconst settings = {};\n\tfor (const input of Array.from(inputs)) {\n\t\tsettings[input.name] = true;\n\t}\n\n\t// Set any advanced conjugation checkboxes to false\n\tconst advancedInputs = document\n\t\t.getElementById(\"options-form\")\n\t\t.querySelectorAll('.advanced-section [type=\"checkbox\"]');\n\tfor (const input of Array.from(advancedInputs)) {\n\t\tsettings[input.name] = false;\n\t}\n\n\t// Set input radio values\n\tsettings[\"translationTiming\"] = CONDITIONAL_UI_TIMINGS.always;\n\tsettings[\"furiganaTiming\"] = CONDITIONAL_UI_TIMINGS.always;\n\n\treturn settings;\n};\n\n/**\n * The settings that should be added to a returning user's settings object\n * @returns {Object} settings\n */\nexport const getDefaultAdditiveSettings = () => {\n\tconst settings = {};\n\n\tconst nonConjugationInputs = document\n\t\t.getElementById(\"non-conjugation-settings\")\n\t\t.querySelectorAll('[type=\"checkbox\"]');\n\tfor (let input of Array.from(nonConjugationInputs)) {\n\t\tsettings[input.name] = true;\n\t}\n\n\t// Set input radio values\n\tsettings[\"translationTiming\"] = CONDITIONAL_UI_TIMINGS.always;\n\tsettings[\"furiganaTiming\"] = CONDITIONAL_UI_TIMINGS.always;\n\n\t// All conjugation settings (including advanced options) are added as false\n\tconst conjugationInputs = document\n\t\t.getElementById(\"conjugation-settings\")\n\t\t.querySelectorAll('[type=\"checkbox\"]');\n\tfor (let input of Array.from(conjugationInputs)) {\n\t\tsettings[input.name] = false;\n\t}\n\n\treturn settings;\n};\n\nexport function optionsMenuInit() {\n\tconst optionsGroups = document.getElementsByClassName(\"options-group\");\n\tfor (const optionGroup of Array.from(optionsGroups)) {\n\t\t// Note that this registers a listener for a click anywhere in the\n\t\t// options-group element (not just the checkboxes).\n\t\toptionGroup.addEventListener(\"click\", (e) =>\n\t\t\toptionsGroupCheckError(e.currentTarget)\n\t\t);\n\t}\n\n\tconst verbInputsWithVariations = document.getElementsByClassName(\n\t\t\"verb-has-variations\"\n\t);\n\tconst verbInputsWithPolitenessOnly = document.getElementsByClassName(\n\t\t\"verb-has-politeness\"\n\t);\n\tfor (const input of Array.from(verbInputsWithVariations).concat(\n\t\tArray.from(verbInputsWithPolitenessOnly)\n\t)) {\n\t\tinput.addEventListener(\"click\", showHideVerbVariationOptions);\n\t}\n\n\tconst adjectiveInputsWithVariations = document.getElementsByClassName(\n\t\t\"adjective-has-variations\"\n\t);\n\tfor (const input of Array.from(adjectiveInputsWithVariations)) {\n\t\tinput.addEventListener(\"click\", showHideAdjectiveVariationOptions);\n\t}\n\n\t// document\n\t// \t.getElementById(\"furigana-checkbox\")\n\t// \t.addEventListener(\"click\", showHideFuriganaSubOptions);\n\tdocument\n\t\t.getElementById(\"translation-checkbox\")\n\t\t.addEventListener(\"click\", showHideTranslationSubOptions);\n\n\tdocument\n\t\t.getElementById(\"verbs-checkbox\")\n\t\t.addEventListener(\"click\", verbAndAdjCheckError);\n\t// document\n\t// \t.getElementById(\"adjectives-checkbox\")\n\t// \t.addEventListener(\"click\", verbAndAdjCheckError);\n\n\t// top level errors\n\tconst optionsView = document.getElementById(\"options-view\");\n\t// optionsView.addEventListener(\"click\", verbPresAffPlainCheckError);\n\t// optionsView.addEventListener(\"click\", adjPresAffPlainCheckError);\n}\n\nfunction checkToEnableBackButton() {\n\tlet errors = document.getElementsByClassName(\"settings-error-text\");\n\tfor (let error of Array.from(errors)) {\n\t\t// checks if any error messages take up space on the screen\n\t\tif (error.offsetWidth > 0 && error.offsetHeight > 0) {\n\t\t\tdocument.getElementById(\"back-button\").disabled = true;\n\t\t\treturn;\n\t\t}\n\t}\n\n\tdocument.getElementById(\"back-button\").disabled = false;\n}\n\n/**\n * If enabled is true, sets errorElement's content to errorMessage.\n * Otherwise, hides errorElement and tries to enable the back button.\n *\n * @param {boolean} enabled\n * @param {Element} errorElement\n * @param {String} errorMessage\n */\nfunction toggleError(enabled, errorElement, errorMessage) {\n\tif (enabled) {\n\t\tlet backButton = document.getElementById(\"back-button\");\n\t\terrorElement.textContent = errorMessage;\n\t\ttoggleDisplayNone(errorElement, false);\n\t\tbackButton.disabled = true;\n\t} else {\n\t\ttoggleDisplayNone(errorElement, true);\n\t\tcheckToEnableBackButton();\n\t}\n}\n\nfunction doCheckboxesHaveValue(inputs, shouldBeChecked) {\n\tfor (let input of Array.from(inputs)) {\n\t\tif (input.checked !== shouldBeChecked) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction checkInputsAndToggleError(\n\tinputs,\n\terrorElement,\n\terrorMessage,\n\tshouldBeChecked\n) {\n\ttoggleError(\n\t\tdoCheckboxesHaveValue(inputs, shouldBeChecked),\n\t\terrorElement,\n\t\terrorMessage\n\t);\n}\n\nfunction optionsGroupCheckError(groupElement) {\n\tlet inputs = groupElement.getElementsByTagName(\"input\");\n\tlet errorElement = groupElement.getElementsByClassName(\n\t\t\"settings-error-text\"\n\t)[0];\n\n\tcheckInputsAndToggleError(\n\t\tinputs,\n\t\terrorElement,\n\t\t\"*Must choose at least 1 option from this category\",\n\t\tfalse\n\t);\n}\n\nfunction verbAndAdjCheckError() {\n\tlet inputs = [\n\t\tdocument.querySelector('input[name=\"verb\"]')\n\t\t// document.querySelector('input[name=\"adjective\"]'),\n\t];\n\ttoggleDisplayNone(\n\t\tdocument.getElementById(\"verb-options-container\"),\n\t\t!inputs[0].checked\n\t);\n\t// toggleDisplayNone(\n\t// \tdocument.getElementById(\"adjective-options-container\"),\n\t// \t!inputs[1].checked\n\t// );\n\tlet errorElement = document.getElementById(\"top-must-choose\");\n\n\tcheckInputsAndToggleError(\n\t\tinputs,\n\t\terrorElement,\n\t\t\"*Must choose at least 1 option from this category\",\n\t\tfalse\n\t);\n}\n\n// Relies on naming between verb and adjective checkboxes being parallel in the html\nfunction areOnlyPresAffPlainChecked(partOfSpeech) {\n\t// const allInputsToValidate = Array.from(\n\t// \tdocument\n\t// \t\t.getElementById(`${partOfSpeech}-conjugation-type-group`)\n\t// \t\t.getElementsByTagName(\"input\")\n\t// ).concat(\n\t// \tArray.from(\n\t// \t\tdocument\n\t// \t\t\t.getElementById(`${partOfSpeech}-variations-container`)\n\t// \t\t\t.getElementsByTagName(\"input\")\n\t// \t)\n\t// );\n\tconst allInputsToValidate = Array.from(\n\t\t\tdocument\n\t\t\t\t.getElementById(`${partOfSpeech}-variations-container`)\n\t\t\t\t.getElementsByTagName(\"input\")\n\t\t);\n\n\tconst inputsToBeChecked = new Set([\n\t\t`${partOfSpeech}present`,\n\t\t`${partOfSpeech}affirmative`,\n\t\t`${partOfSpeech}plain`,\n\t]);\n\tfor (const input of allInputsToValidate) {\n\t\t// We're validating that only the inputs in inputsToBeChecked are checked.\n\t\t// Otherwise, return early to prevent the error from being displayed.\n\t\tif (\n\t\t\t(!input.checked && inputsToBeChecked.has(input.name)) ||\n\t\t\t(input.checked && !inputsToBeChecked.has(input.name))\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t// If we make it here, then only present, affirmative, and plain were checked in their respective option groups\n\treturn true;\n}\n\nfunction verbPresAffPlainCheckError() {\n\t// let optionsGroup = document.getElementById(\"verb-conjugation-type-group\");\n\t// let errorElement = optionsGroup.getElementsByClassName(\n\t// \t\"settings-error-text\"\n\t// )[0];\n\n\tif (areOnlyPresAffPlainChecked(PARTS_OF_SPEECH.verb)) {\n\t\ttoggleError(\n\t\t\ttrue,\n\t\t\terrorElement,\n\t\t\t\"*Invalid combination: present, affirmative, plain\"\n\t\t);\n\t\t// These inputs could be hidden because the parent \"Verb\" option is unchecked, so check to enable back button\n\t\tcheckToEnableBackButton();\n\t} else {\n\t\toptionsGroupCheckError(optionsGroup);\n\t}\n}\n\nfunction adjPresAffPlainCheckError() {\n\tlet optionsGroup = document.getElementById(\"adjective-type-group\");\n\tlet errorElement = optionsGroup.getElementsByClassName(\n\t\t\"settings-error-text\"\n\t)[0];\n\n\tlet iAdjInput = document.querySelector('input[name=\"adjectivei\"]');\n\tlet irrAdjInput = document.querySelector('input[name=\"adjectiveirregular\"]');\n\tlet naAdjInput = document.querySelector('input[name=\"adjectivena\"]');\n\n\tif (\n\t\tareOnlyPresAffPlainChecked(PARTS_OF_SPEECH.adjective) &&\n\t\t!naAdjInput.checked &&\n\t\t(iAdjInput.checked || irrAdjInput.checked)\n\t) {\n\t\ttoggleError(\n\t\t\ttrue,\n\t\t\terrorElement,\n\t\t\t\"*Invalid combination: い/irregular, present, affirmative, plain\"\n\t\t);\n\t\t// element could be hidden because verb is unchecked, so check to enable back button\n\t\tcheckToEnableBackButton();\n\t} else if (document.querySelector('input[name=\"adjective\"]').checked) {\n\t\toptionsGroupCheckError(optionsGroup);\n\t}\n}\n\n/**\n * Shows or hides UI options based on the values of checkboxes.\n *\n * @param {string} triggeringInputsClass - The class that's been put on inputs that trigger this show/hide\n * @param {string} showHideContainerId - The container to show/hide. Should either be an element with an \"options-group\" class, or be an element that contains other \"options-group\" elements\n * @returns {boolean} - true if the options were shown, false if hidden\n */\nfunction showHideUiOptions(triggeringInputsClass, showHideContainerId) {\n\tconst inputsThatTrigger = document.getElementsByClassName(\n\t\ttriggeringInputsClass\n\t);\n\tconst showHideContainer = document.getElementById(showHideContainerId);\n\t// Check if showHideContainer is an options-group itself, or if it contains options-group elements\n\tconst optionGroups = showHideContainer.classList.contains(\"options-group\")\n\t\t? [showHideContainer]\n\t\t: showHideContainer.getElementsByClassName(\"options-group\");\n\n\tfor (const input of Array.from(inputsThatTrigger)) {\n\t\tif (input.checked) {\n\t\t\tfor (const optionGroup of Array.from(optionGroups)) {\n\t\t\t\toptionsGroupCheckError(optionGroup);\n\t\t\t\ttoggleDisplayNone(optionGroup, false);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tfor (const optionGroup of Array.from(optionGroups)) {\n\t\ttoggleDisplayNone(optionGroup, true);\n\t}\n\treturn false;\n}\n\n// In this context the options Affirmative, Negative, Plain, and Polite\n// are considered \"variations\" on other conjugation types.\n// Not all types (like て for verbs, adverbs for adjectives) have variations.\nfunction showHideVerbVariationOptions() {\n\t// First try to show/hide all variation options\n\tconst showingAllVariations = showHideUiOptions(\n\t\t\"verb-selected\",\n\t\t\"verb-variations-container\"\n\t);\n\n\t// If all variations aren't shown, see if just politeness options should be shown\n\tif (!showingAllVariations) {\n\t\tshowHideUiOptions(\"verb-has-politeness\", \"verb-politeness-container\");\n\t}\n}\nfunction showHideAdjectiveVariationOptions() {\n\tshowHideUiOptions(\n\t\t\"adjective-has-variations\",\n\t\t\"adjective-variations-container\"\n\t);\n}\n\nfunction showHideFuriganaSubOptions() {\n\ttoggleDisplayNone(\n\t\tdocument.getElementById(\"furigana-sub-options\"),\n\t\t!document.getElementById(\"furigana-checkbox\").checked\n\t);\n}\n\nfunction showHideTranslationSubOptions() {\n\ttoggleDisplayNone(\n\t\tdocument.getElementById(\"translation-sub-options\"),\n\t\t!document.getElementById(\"translation-checkbox\").checked\n\t);\n}\n\nexport function applyNonConjugationSettings(settings) {\n\tshowEmojis(settings.emoji);\n\tshowStreak(settings.streak);\n\t// showTranslation and showFurigana are dependent on the state, so we can't set them here\n}\n\nexport function applyAllSettingsFilterWords(settings, completeWordList) {\n\tapplyNonConjugationSettings(settings);\n\n\tlet currentWordList = createArrayOfArrays(completeWordList.length);\n\n\tconst verbRegex = /^verb_.+/;\n\tif (settings.verb !== false) {\n\t\t// Copy all of the verbs over\n\t\tcurrentWordList[0] = [...completeWordList[0]];\n\t\t// currentWordList[0] = [];\n\n\t\tlet verbOptions = Object.keys(settings).filter((el) =>\n\t\t\tverbRegex.test(el)\n\t\t);\n\n\t\t// Filter out the verbs we don't want\n\t\tfor (let i = 0; i < verbOptions.length; i++) {\n\t\t\tif (settings[verbOptions[i]] === true) {\n\t\t\t\tcurrentWordList[0] = currentWordList[0].concat(completeWordList[0].filter(\n\t\t\t\t\tquestionRemoveFiltersController.verbs[verbOptions[i]]\n\t\t\t\t));\n\t\t\t}\n\t\t}\n\t}\n\n\tconst adjectiveRegex = /^adjective.+/;\n\tif (settings.adjective !== false) {\n\t\t// Copy all of the adjectives over\n\t\tcurrentWordList[1] = [...completeWordList[1]];\n\n\t\tlet adjectiveOptions = Object.keys(settings).filter((el) =>\n\t\t\tadjectiveRegex.test(el)\n\t\t);\n\t\t// Filter out the adjectives we don't want\n\t\tfor (let i = 0; i < adjectiveOptions.length; i++) {\n\t\t\tif (settings[adjectiveOptions[i]] === false) {\n\t\t\t\tcurrentWordList[1] = currentWordList[1].filter(\n\t\t\t\t\tquestionRemoveFilters.adjectives[adjectiveOptions[i]]\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tconsole.log(currentWordList)\n\treturn currentWordList;\n}\n\n// The input to these functions is a \"Word\" object defined in main.js.\n// If one of these filters is applied to an array of Words,\n// that type of Word will be removed from the array.\nconst questionRemoveFiltersController = {\n\tverbs: {\n\t\t// PRESENT TENSE\n\t\tverb_present_indicative_informal_impolite: function (word) {\n\t\t\tlet bool = ((word.conjugation.type === CONJUGATION_TYPES.present) &&\n\t\t\t\t(word.conjugation.formal === false) &&\n\t\t\t\t(word.conjugation.polite === false))\n\t\t\treturn bool\n\t\t},\n\t\tverb_present_indicative_formal_impolite: function (word) {\n\t\t\tlet bool = ((word.conjugation.type === CONJUGATION_TYPES.present) &&\n\t\t\t\t(word.conjugation.formal === true) &&\n\t\t\t\t(word.conjugation.polite === false))\n\t\t\treturn bool\n\t\t},\n\t\tverb_present_indicative_informal_polite: function (word) {\n\t\t\treturn ((word.conjugation.type === CONJUGATION_TYPES.present) &&\n\t\t\t\t    (word.conjugation.formal === false) &&\n\t\t\t\t    (word.conjugation.polite === true))\n\t\t},\n\t\tverb_present_indicative_formal_polite: function (word) {\n\t\t\treturn ((word.conjugation.type === CONJUGATION_TYPES.present) &&\n\t\t\t\t    (word.conjugation.formal === true) &&\n\t\t\t\t    (word.conjugation.polite === true))\n\t\t},\n\t\t// PAST TENSE\n\t\tverb_past_indicative_informal_impolite: function (word) {\n\t\t\tlet bool = ((word.conjugation.type === CONJUGATION_TYPES.past) &&\n\t\t\t\t(word.conjugation.formal === false) &&\n\t\t\t\t(word.conjugation.polite === false))\n\t\t\treturn bool\n\t\t},\n\t\tverb_past_indicative_formal_impolite: function (word) {\n\t\t\tlet bool = ((word.conjugation.type === CONJUGATION_TYPES.past) &&\n\t\t\t\t(word.conjugation.formal === true) &&\n\t\t\t\t(word.conjugation.polite === false))\n\t\t\treturn bool\n\t\t},\n\t\tverb_past_indicative_informal_polite: function (word) {\n\t\t\treturn ((word.conjugation.type === CONJUGATION_TYPES.past) &&\n\t\t\t\t    (word.conjugation.formal === false) &&\n\t\t\t\t    (word.conjugation.polite === true))\n\t\t},\n\t\tverb_past_indicative_formal_polite: function (word) {\n\t\t\treturn ((word.conjugation.type === CONJUGATION_TYPES.past) &&\n\t\t\t\t    (word.conjugation.formal === true) &&\n\t\t\t\t    (word.conjugation.polite === true))\n\t\t}\n\t}\n}\n\n/**\n * Searches the maxScoreObjects array for a maxScoreObject with specified settings.\n * Make sure visibleConjugationSettings doesn't contain any settings that aren't tied to max score (like \"Show English translations\" for example)\n *\n * @param {Array<MaxScoreObject>} maxScoreObjects\n * @param {Object} visibleConjugationSettings\n * @returns The index where the match was found. If no match was found, returns -1.\n */\nexport function findMaxScoreIndex(maxScoreObjects, visibleConjugationSettings) {\n\tlet settingKeys = Object.keys(visibleConjugationSettings);\n\tlet flag;\n\tfor (let i = 0; i < maxScoreObjects.length; i++) {\n\t\tflag = true;\n\t\tfor (let s of settingKeys) {\n\t\t\tif (maxScoreObjects[i].settings[s] != visibleConjugationSettings[s]) {\n\t\t\t\tflag = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (flag == true) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\nexport const showEmojis = function (show) {\n\tdocument.getElementById(\"conjugation-inquery-text\").className = show\n\t\t? \"\"\n\t\t: \"hide-emojis\";\n};\n\nexport const showStreak = function (show) {\n\tdocument.querySelectorAll(\".streak\").forEach((s) => {\n\t\tif (show) {\n\t\t\ts.classList.remove(\"display-none\");\n\t\t} else {\n\t\t\ts.classList.add(\"display-none\");\n\t\t}\n\t});\n};\n\n// Can be shown never, always, or only after answering.\nexport const showFurigana = function (showInDom, makeTransparent = false) {\n\tconst el = document.getElementById(\"verb-text\");\n\tsetDisplayAndTransparency(\n\t\tel,\n\t\tshowInDom,\n\t\t\"hide-furigana\",\n\t\tmakeTransparent,\n\t\t\"transparent-furigana\"\n\t);\n};\n\n// Can be shown never, always, or only after answering.\nexport const showTranslation = function (showInDom, makeTransparent = false) {\n\tconst el = document.getElementById(\"translation\");\n\tsetDisplayAndTransparency(\n\t\tel,\n\t\tshowInDom,\n\t\t\"display-none\",\n\t\tmakeTransparent,\n\t\t\"transparent\"\n\t);\n};\n\n// removeClass should lead to display:none\n// transparentClass should lead to something like opacity: 0 to keep height when hidden\nfunction setDisplayAndTransparency(\n\telement,\n\tshowInDom,\n\tremoveClass,\n\tmakeTransparent,\n\ttransparentClass\n) {\n\t// Reset state\n\telement.classList.remove(removeClass);\n\telement.classList.remove(transparentClass);\n\n\tif (!showInDom) {\n\t\telement.classList.add(removeClass);\n\t\treturn;\n\t}\n\n\tif (makeTransparent) {\n\t\telement.classList.add(transparentClass);\n\t\treturn;\n\t}\n}\n\nexport function selectCheckboxesInUi(settings) {\n\tlet checkboxInputs = document.querySelectorAll(\n\t\t`#options-form input[type=\"checkbox\"]`\n\t);\n\tfor (let input of Array.from(checkboxInputs)) {\n\t\tinput.checked = settings[input.name];\n\t}\n\n\t// selectConditionalUiRadio(\n\t// \tsettings.furiganaTiming,\n\t// \t\"furigana-always-radio\",\n\t// \t\"furigana-after-radio\"\n\t// );\n\tselectConditionalUiRadio(\n\t\tsettings.translationTiming,\n\t\t\"translation-always-radio\",\n\t\t\"translation-after-radio\"\n\t);\n\n\tfunction selectConditionalUiRadio(\n\t\tradioValue,\n\t\talwaysRadioId,\n\t\tonlyAfterAnsweringRadioId\n\t) {\n\t\tswitch (radioValue) {\n\t\t\tcase CONDITIONAL_UI_TIMINGS.always:\n\t\t\t\tdocument.getElementById(alwaysRadioId).checked = true;\n\t\t\t\tbreak;\n\t\t\tcase CONDITIONAL_UI_TIMINGS.onlyAfterAnswering:\n\t\t\t\tdocument.getElementById(onlyAfterAnsweringRadioId).checked = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n\nexport function showHideOptionsAndCheckErrors() {\n\tshowHideVerbVariationOptions();\n\t// showHideAdjectiveVariationOptions();\n\n\t// showHideFuriganaSubOptions();\n\tshowHideTranslationSubOptions();\n\n\tlet optionsGroups = document.getElementsByClassName(\"options-group\");\n\tfor (let group of Array.from(optionsGroups)) {\n\t\toptionsGroupCheckError(group);\n\t}\n\n\tverbAndAdjCheckError();\n}\n\n/**\n * Overrides values in the settings object based on values selected in the UI\n *\n * @param {Object} settings\n */\nexport function insertSettingsFromUi(settings) {\n\tconst checkboxInputs = document.querySelectorAll(\n\t\t'#options-form input[type=\"checkbox\"]'\n\t);\n\n\tfor (let input of Array.from(checkboxInputs)) {\n\t\tsettings[input.name] = input.checked;\n\t}\n\n\tsettings.furiganaTiming = getConditionalUiSetting(\"furiganaTiming\");\n\tsettings.translationTiming = getConditionalUiSetting(\"translationTiming\");\n\n\t// Default to \"always\"\n\tfunction getConditionalUiSetting(radioName) {\n\t\treturn (\n\t\t\tdocument.querySelector(`input[name=\"${radioName}\"]:checked`)?.value ??\n\t\t\tCONDITIONAL_UI_TIMINGS.always\n\t\t);\n\t}\n\n\treturn settings;\n}\n\n/**\n * Get a settings object that only contains the settings that are currently visible on the screen.\n * Useful for storing max score objects which want as little information as possible since they are stored in localStorage.\n */\nexport function getVisibleConjugationSettings() {\n\tconst visibleConjugationSettings = {};\n\tconst checkboxInputs = document.querySelectorAll(\n\t\t'#options-form input[type=\"checkbox\"]'\n\t);\n\n\tfor (let input of Array.from(checkboxInputs)) {\n\t\tif (\n\t\t\tinput.offsetWidth > 0 &&\n\t\t\tinput.offsetHeight > 0 &&\n\t\t\t!nonConjugationSettings.has(input.name)\n\t\t) {\n\t\t\tvisibleConjugationSettings[input.name] = input.checked;\n\t\t}\n\t}\n\n\treturn visibleConjugationSettings;\n}\n","export const PARTS_OF_SPEECH = Object.freeze({\n\tverb: \"verb\",\n\tadjective: \"adjective\",\n});\n\nexport const CONJUGATION_TYPES = Object.freeze({\n\tpresent: \"Present\",\n\tpast: \"Past\",\n\tte: \"て-form\",\n\tadverb: \"Adverb\",\n\tvolitional: \"Volitional\",\n\tpassive: \"Passive\",\n\tcausative: \"Causative\",\n\tpotential: \"Potential\",\n\timperative: \"Imperative\",\n});\n","export function toggleDisplayNone(element, isDisplayNone) {\n\ttoggleClassName(element, \"display-none\", isDisplayNone);\n}\n\nexport function toggleBackgroundNone(element, isBackgroundNone) {\n\ttoggleClassName(element, \"background-none\", isBackgroundNone);\n}\n\nfunction toggleClassName(element, className, enabled) {\n\tif (enabled) {\n\t\telement.classList.add(className);\n\t} else {\n\t\telement.classList.remove(className);\n\t}\n}\n\nexport function createArrayOfArrays(length) {\n\tlet array = new Array(length);\n\tfor (let i = 0; i < array.length; i++) {\n\t\tarray[i] = [];\n\t}\n\treturn array;\n}\n","export const japaneseWordData = {\n    \"verbs\": [\n        { \"kanji\": \"<ruby>行<rt>い<\\/rt><\\/ruby>く\", \"type\": \"irv\", \"eng\": \"go\", \"group\": \"iku\" },\n        { \"kanji\": \"する\", \"type\": \"irv\", \"eng\": \"do, make\", \"group\": \"suru\" }\n    ],\n    \"adjectives\": [\n        { \"kanji\": \"いい\", \"type\": \"ira\", \"eng\": \"good\" },\n        { \"kanji\": \"かっこいい\", \"type\": \"ira\", \"eng\": \"cool, handsome\" }\n    ]\n}\n\nexport const koreanWordData = {\n    \"verbs\": [\n        {\n            \"hangeul\": \"가다\",\n            \"eng\": \"to go\"\n        },\n        {\n            \"hangeul\": \"가르치다\",\n            \"eng\": \"to teach\"\n        },\n        {\n            \"hangeul\": \"가져가다\",\n            \"eng\": \"to take\"\n        },\n        {\n            \"hangeul\": \"가져오다\",\n            \"eng\": \"to bring\"\n        },\n        {\n            \"hangeul\": \"가지다\",\n            \"eng\": \"to have\"\n        },\n        {\n            \"hangeul\": \"갈아타다\",\n            \"eng\": \"to transfer (eg. transfer to subway line 9)\"\n        },\n        {\n            \"hangeul\": \"감다\",\n            \"eng\": \"to close (one's eyes)\"\n        },\n        {\n            \"hangeul\": \"감사하다\",\n            \"eng\": \"to appreciate\"\n        },\n        {\n            \"hangeul\": \"갖다\",\n            \"eng\": \"to have\"\n        },\n        {\n            \"hangeul\": \"걱정하다\",\n            \"eng\": \"to worry\"\n        },\n        {\n            \"hangeul\": \"건너가다\",\n            \"eng\": \"to cross (over)\"\n        },\n        {\n            \"hangeul\": \"건너다\",\n            \"eng\": \"to cross (over)\"\n        },\n        {\n            \"hangeul\": \"걷다\",\n            \"eng\": \"to walk\"\n        },\n        {\n            \"hangeul\": \"걸다 (clothing, picture, etc)\",\n            \"eng\": \"to hang\"\n        },\n        {\n            \"hangeul\": \"걸다 (communication)\",\n            \"eng\": \"to call\"\n        },\n        {\n            \"hangeul\": \"걸리다 (clothing, picture, etc)\",\n            \"eng\": \"to hang\"\n        },\n        {\n            \"hangeul\": \"걸리다 (illness)\",\n            \"eng\": \"to contract\"\n        },\n        {\n            \"hangeul\": \"걸리다 (carry)\",\n            \"eng\": \"to take\"\n        },\n        {\n            \"hangeul\": \"걸어가다\",\n            \"eng\": \"to walk to\"\n        },\n        {\n            \"hangeul\": \"걸이오다\",\n            \"eng\": \"to walk from\"\n        },\n        {\n            \"hangeul\": \"결정하다\",\n            \"eng\": \"to decide\"\n        },\n        {\n            \"hangeul\": \"결혼하다\",\n            \"eng\": \"to marry\"\n        },\n        {\n            \"hangeul\": \"경험하다\",\n            \"eng\": \"to experience\"\n        },\n        {\n            \"hangeul\": \"계산하다\",\n            \"eng\": \"to calculate\"\n        },\n        {\n            \"hangeul\": \"계시다\",\n            \"eng\": \"to be\"\n        },\n        {\n            \"hangeul\": \"고르다\",\n            \"eng\": \"to choose\"\n        },\n        {\n            \"hangeul\": \"고치다\",\n            \"eng\": \"to repair\"\n        },\n        {\n            \"hangeul\": \"공부하다\",\n            \"eng\": \"to study\"\n        },\n        {\n            \"hangeul\": \"관광하다\",\n            \"eng\": \"to go sightseeing\"\n        },\n        {\n            \"hangeul\": \"구경하다\",\n            \"eng\": \"to look around\"\n        },\n        {\n            \"hangeul\": \"구하다\",\n            \"eng\": \"to look for\"\n        },\n        {\n            \"hangeul\": \"굽다\",\n            \"eng\": \"to grill\"\n        },\n        {\n            \"hangeul\": \"그리다\",\n            \"eng\": \"to draw (a picture)\"\n        },\n        {\n            \"hangeul\": \"그치다\",\n            \"eng\": \"to stop\"\n        },\n        {\n            \"hangeul\": \"기다리다\",\n            \"eng\": \"to wait\"\n        },\n        {\n            \"hangeul\": \"기르다\",\n            \"eng\": \"to raise (a child)\"\n        },\n        {\n            \"hangeul\": \"기뻐하다\",\n            \"eng\": \"to be pleased\"\n        },\n        {\n            \"hangeul\": \"기억하다\",\n            \"eng\": \"to remember\"\n        },\n        {\n            \"hangeul\": \"긴장되다\",\n            \"eng\": \"to be nervous\"\n        },\n        {\n            \"hangeul\": \"길다\",\n            \"eng\": \"to long (adjective)\"\n        },\n        {\n            \"hangeul\": \"깎다\",\n            \"eng\": \"to cut (hair)\"\n        },\n        {\n            \"hangeul\": \"깨다\",\n            \"eng\": \"to break\"\n        }\n    ],\n    \"adjectives\": [\n    ]\n}\n\nexport const wordData = {\n    \"verbs\": [\n        { \"kanji\": \"<ruby>行<rt>い<\\/rt><\\/ruby>く\", \"type\": \"irv\", \"eng\": \"go\", \"group\": \"iku\" },\n        { \"kanji\": \"する\", \"type\": \"irv\", \"eng\": \"do, make\", \"group\": \"suru\" },\n        { \"kanji\": \"<ruby>来<rt>く<\\/rt><\\/ruby>る\", \"type\": \"irv\", \"eng\": \"come\" },\n        { \"kanji\": \"ある\", \"type\": \"irv\", \"eng\": \"have, exists, is (inanimate)\" },\n        { \"kanji\": \"<ruby>問<rt>と<\\/rt><\\/ruby>う\", \"type\": \"irv\", \"eng\": \"ask, accuse\" },\n        { \"kanji\": \"いる\", \"type\": \"ru\", \"eng\": \"exists, is (living things)\" },\n        { \"kanji\": \"<ruby>始<rt>はじ<\\/rt><\\/ruby>める\", \"type\": \"ru\", \"eng\": \"begin\" },\n        { \"kanji\": \"<ruby>借<rt>か<\\/rt><\\/ruby>りる\", \"type\": \"ru\", \"eng\": \"borrow, rent\" },\n        { \"kanji\": \"<ruby>続<rt>つづ<\\/rt><\\/ruby>ける\", \"type\": \"ru\", \"eng\": \"continue, proceed\" },\n        { \"kanji\": \"<ruby>決<rt>き<\\/rt><\\/ruby>める\", \"type\": \"ru\", \"eng\": \"decide, choose\" },\n        { \"kanji\": \"<ruby>食<rt>た<\\/rt><\\/ruby>べる\", \"type\": \"ru\", \"eng\": \"eat\" },\n        { \"kanji\": \"<ruby>忘<rt>わす<\\/rt><\\/ruby>れる\", \"type\": \"ru\", \"eng\": \"forget\" },\n        { \"kanji\": \"<ruby>降<rt>お<\\/rt><\\/ruby>りる\", \"type\": \"ru\", \"eng\": \"get off, go down\" },\n        { \"kanji\": \"<ruby>疲<rt>つか<\\/rt><\\/ruby>れる\", \"type\": \"ru\", \"eng\": \"get tired\" },\n        { \"kanji\": \"<ruby>起<rt>お<\\/rt><\\/ruby>きる\", \"type\": \"ru\", \"eng\": \"get up, wake up\" },\n        { \"kanji\": \"あげる\", \"type\": \"ru\", \"eng\": \"give\" },\n        { \"kanji\": \"<ruby>出<rt>で<\\/rt><\\/ruby>る\", \"type\": \"ru\", \"eng\": \"leave, exit, appear\" },\n        { \"kanji\": \"<ruby>助<rt>たす<\\/rt><\\/ruby>ける\", \"type\": \"ru\", \"eng\": \"help\" },\n        { \"kanji\": \"<ruby>見<rt>み<\\/rt><\\/ruby>る\", \"type\": \"ru\", \"eng\": \"see, look\" },\n        { \"kanji\": \"<ruby>開<rt>あ<\\/rt><\\/ruby>ける\", \"type\": \"ru\", \"eng\": \"open\" },\n        { \"kanji\": \"<ruby>覚<rt>おぼ<\\/rt><\\/ruby>える\", \"type\": \"ru\", \"eng\": \"remember, learn\" },\n        { \"kanji\": \"<ruby>寝<rt>ね<\\/rt><\\/ruby>る\", \"type\": \"ru\", \"eng\": \"sleep, go to bed\" },\n        { \"kanji\": \"<ruby>閉<rt>し<\\/rt><\\/ruby>める\", \"type\": \"ru\", \"eng\": \"close\" },\n        { \"kanji\": \"<ruby>着<rt>き<\\/rt><\\/ruby>る\", \"type\": \"ru\", \"eng\": \"put on, wear (shirt, jacket, etc)\" },\n        { \"kanji\": \"なる\", \"type\": \"u\", \"eng\": \"become\" },\n        { \"kanji\": \"<ruby>乗<rt>の<\\/rt><\\/ruby>る\", \"type\": \"u\", \"eng\": \"board, ride\" },\n        { \"kanji\": \"<ruby>切<rt>き<\\/rt><\\/ruby>る\", \"type\": \"u\", \"eng\": \"cut\" },\n        { \"kanji\": \"やる\", \"type\": \"u\", \"eng\": \"do, give\" },\n        { \"kanji\": \"<ruby>終<rt>お<\\/rt><\\/ruby>わる\", \"type\": \"u\", \"eng\": \"end\" },\n        { \"kanji\": \"<ruby>上<rt>あ<\\/rt><\\/ruby>がる\", \"type\": \"u\", \"eng\": \"go up, rise\", \"altOkurigana\": [\"上る\"] },\n        { \"kanji\": \"<ruby>知<rt>し<\\/rt><\\/ruby>る\", \"type\": \"u\", \"eng\": \"know\" },\n        { \"kanji\": \"<ruby>作<rt>つく<\\/rt><\\/ruby>る\", \"type\": \"u\", \"eng\": \"make, build\" },\n        { \"kanji\": \"<ruby>帰<rt>かえ<\\/rt><\\/ruby>る\", \"type\": \"u\", \"eng\": \"return, go home\" },\n        { \"kanji\": \"<ruby>取<rt>と<\\/rt><\\/ruby>る\", \"type\": \"u\", \"eng\": \"take, steal\" },\n        { \"kanji\": \"<ruby>買<rt>か<\\/rt><\\/ruby>う\", \"type\": \"u\", \"eng\": \"buy\" },\n        { \"kanji\": \"<ruby>笑<rt>わら<\\/rt><\\/ruby>う\", \"type\": \"u\", \"eng\": \"laugh, smile\" },\n        { \"kanji\": \"<ruby>会<rt>あ<\\/rt><\\/ruby>う\", \"type\": \"u\", \"eng\": \"meet\" },\n        { \"kanji\": \"<ruby>言<rt>い<\\/rt><\\/ruby>う\", \"type\": \"u\", \"eng\": \"say, utter\" },\n        { \"kanji\": \"<ruby>思<rt>おも<\\/rt><\\/ruby>う\", \"type\": \"u\", \"eng\": \"think, believe\" },\n        { \"kanji\": \"<ruby>使<rt>つか<\\/rt><\\/ruby>う\", \"type\": \"u\", \"eng\": \"use\" },\n        { \"kanji\": \"<ruby>持<rt>も<\\/rt><\\/ruby>つ\", \"type\": \"u\", \"eng\": \"hold, have\" },\n        { \"kanji\": \"<ruby>待<rt>ま<\\/rt><\\/ruby>つ\", \"type\": \"u\", \"eng\": \"wait\" },\n        { \"kanji\": \"<ruby>立<rt>た<\\/rt><\\/ruby>つ\", \"type\": \"u\", \"eng\": \"stand up\" },\n        { \"kanji\": \"<ruby>聞<rt>き<\\/rt><\\/ruby>く\", \"type\": \"u\", \"eng\": \"hear, listen\" },\n        { \"kanji\": \"<ruby>引<rt>ひ<\\/rt><\\/ruby>く\", \"type\": \"u\", \"eng\": \"pull, tug\" },\n        { \"kanji\": \"<ruby>履<rt>は<\\/rt><\\/ruby>く\", \"type\": \"u\", \"eng\": \"put on, wear (pants, skirt, shoes, etc)\" },\n        { \"kanji\": \"<ruby>歩<rt>ある<\\/rt><\\/ruby>く\", \"type\": \"u\", \"eng\": \"walk\" },\n        { \"kanji\": \"<ruby>書<rt>か<\\/rt><\\/ruby>く\", \"type\": \"u\", \"eng\": \"write\" },\n        { \"kanji\": \"<ruby>働<rt>はたら<\\/rt><\\/ruby>く\", \"type\": \"u\", \"eng\": \"work\" },\n        { \"kanji\": \"<ruby>死<rt>し<\\/rt><\\/ruby>ぬ\", \"type\": \"u\", \"eng\": \"die, pass away\" },\n        { \"kanji\": \"<ruby>飲<rt>の<\\/rt><\\/ruby>む\", \"type\": \"u\", \"eng\": \"drink\" },\n        { \"kanji\": \"<ruby>楽<rt>たの<\\/rt><\\/ruby>しむ\", \"type\": \"u\", \"eng\": \"enjoy, have fun\" },\n        { \"kanji\": \"<ruby>進<rt>すす<\\/rt><\\/ruby>む\", \"type\": \"u\", \"eng\": \"advance, go forward\" },\n        { \"kanji\": \"<ruby>住<rt>す<\\/rt><\\/ruby>む\", \"type\": \"u\", \"eng\": \"live, inhabit\" },\n        { \"kanji\": \"<ruby>読<rt>よ<\\/rt><\\/ruby>む\", \"type\": \"u\", \"eng\": \"read\" },\n        { \"kanji\": \"<ruby>休<rt>やす<\\/rt><\\/ruby>む\", \"type\": \"u\", \"eng\": \"rest, be absent\" },\n        { \"kanji\": \"<ruby>遊<rt>あそ<\\/rt><\\/ruby>ぶ\", \"type\": \"u\", \"eng\": \"play, have a good time\" },\n        { \"kanji\": \"<ruby>学<rt>まな<\\/rt><\\/ruby>ぶ\", \"type\": \"u\", \"eng\": \"study, learn\" },\n        { \"kanji\": \"<ruby>選<rt>えら<\\/rt><\\/ruby>ぶ\", \"type\": \"u\", \"eng\": \"choose, select\" },\n        { \"kanji\": \"<ruby>返<rt>かえ<\\/rt><\\/ruby>す\", \"type\": \"u\", \"eng\": \"return (something), put back\" },\n        { \"kanji\": \"<ruby>押<rt>お<\\/rt><\\/ruby>す\", \"type\": \"u\", \"eng\": \"push, press\" },\n        { \"kanji\": \"<ruby>治<rt>なお<\\/rt><\\/ruby>す\", \"type\": \"u\", \"eng\": \"cure, repair\" },\n        { \"kanji\": \"<ruby>話<rt>はな<\\/rt><\\/ruby>す\", \"type\": \"u\", \"eng\": \"talk, speak\" },\n        { \"kanji\": \"<ruby>探<rt>さが<\\/rt><\\/ruby>す\", \"type\": \"u\", \"eng\": \"search, look for\" },\n        { \"kanji\": \"<ruby>貸<rt>か<\\/rt><\\/ruby>す\", \"type\": \"u\", \"eng\": \"lend, loan\" },\n        { \"kanji\": \"<ruby>泳<rt>およ<\\/rt><\\/ruby>ぐ\", \"type\": \"u\", \"eng\": \"swim\" },\n        { \"kanji\": \"<ruby>脱<rt>ぬ<\\/rt><\\/ruby>ぐ\", \"type\": \"u\", \"eng\": \"take off clothes, undress\" },\n        { \"kanji\": \"<ruby>急<rt>いそ<\\/rt><\\/ruby>ぐ\", \"type\": \"u\", \"eng\": \"hurry\" },\n        { \"kanji\": \"<ruby>稼<rt>かせ<\\/rt><\\/ruby>ぐ\", \"type\": \"u\", \"eng\": \"earn income, make money\" },\n        { \"kanji\": \"<ruby>寛<rt>くつろ<\\/rt><\\/ruby>ぐ\", \"type\": \"u\", \"eng\": \"relax, feel at home\" },\n        { \"kanji\": \"<ruby>繋<rt>つな<\\/rt><\\/ruby>ぐ\", \"type\": \"u\", \"eng\": \"connect, link together\" },\n        { \"kanji\": \"<ruby>分<rt>わ<\\/rt><\\/ruby>かる\", \"type\": \"u\", \"eng\": \"understand\" },\n        { \"kanji\": \"<ruby>勉<rt>べん<\\/rt><\\/ruby><ruby>強<rt>きょう<\\/rt><\\/ruby>する\", \"type\": \"irv\", \"eng\": \"study\", \"group\": \"suru\" },\n        { \"kanji\": \"<ruby>受<rt>う<\\/rt><\\/ruby>け<ruby>持<rt>も<\\/rt><\\/ruby>つ\", \"type\": \"u\", \"eng\": \"take charge of\" },\n        { \"kanji\": \"<ruby>持<rt>も<\\/rt><\\/ruby>って<ruby>行<rt>い<\\/rt><\\/ruby>く\", \"type\": \"irv\", \"eng\": \"take, carry away\", \"group\": \"iku\" },\n        { \"kanji\": \"<ruby>食<rt>た<\\/rt><\\/ruby>べ<ruby>歩<rt>ある<\\/rt><\\/ruby>く\", \"type\": \"u\", \"eng\": \"try food at various restaurants\" }\n    ],\n    \"adjectives\": [\n        { \"kanji\": \"いい\", \"type\": \"ira\", \"eng\": \"good\" },\n        { \"kanji\": \"かっこいい\", \"type\": \"ira\", \"eng\": \"cool, handsome\" },\n        { \"kanji\": \"<ruby>赤<rt>あか<\\/rt><\\/ruby>い\", \"type\": \"i\", \"eng\": \"red\" },\n        { \"kanji\": \"<ruby>新<rt>あたら<\\/rt><\\/ruby>しい\", \"type\": \"i\", \"eng\": \"new\" },\n        { \"kanji\": \"<ruby>暑<rt>あつ<\\/rt><\\/ruby>い\", \"type\": \"i\", \"eng\": \"hot (weather)\" },\n        { \"kanji\": \"<ruby>危<rt>あぶ<\\/rt><\\/ruby>ない\", \"type\": \"i\", \"eng\": \"dangerous\" },\n        { \"kanji\": \"<ruby>美<rt>お<\\/rt><\\/ruby><ruby>味<rt>い<\\/rt><\\/ruby>しい\", \"type\": \"i\", \"eng\": \"delicious\" },\n        { \"kanji\": \"<ruby>大<rt>おお<\\/rt><\\/ruby>きい\", \"type\": \"i\", \"eng\": \"big\" },\n        { \"kanji\": \"<ruby>遅<rt>おそ<\\/rt><\\/ruby>い\", \"type\": \"i\", \"eng\": \"late, slow\" },\n        { \"kanji\": \"<ruby>面<rt>おも<\\/rt><\\/ruby><ruby>白<rt>しろ<\\/rt><\\/ruby>い\", \"type\": \"i\", \"eng\": \"interesting, funny\" },\n        { \"kanji\": \"<ruby>可<rt>か<\\/rt><\\/ruby><ruby>愛<rt>わい<\\/rt><\\/ruby>い\", \"type\": \"i\", \"eng\": \"cute, pretty\" },\n        { \"kanji\": \"<ruby>寒<rt>さむ<\\/rt><\\/ruby>い\", \"type\": \"i\", \"eng\": \"cold (weather)\" },\n        { \"kanji\": \"<ruby>高<rt>たか<\\/rt><\\/ruby>い\", \"type\": \"i\", \"eng\": \"high, expensive\" },\n        { \"kanji\": \"<ruby>楽<rt>たの<\\/rt><\\/ruby>しい\", \"type\": \"i\", \"eng\": \"fun, pleasant\" },\n        { \"kanji\": \"<ruby>小<rt>ちい<\\/rt><\\/ruby>さい\", \"type\": \"i\", \"eng\": \"small\" },\n        { \"kanji\": \"<ruby>詰<rt>つま<\\/rt><\\/ruby>らない\", \"type\": \"i\", \"eng\": \"uninteresting, boring\", \"altOkurigana\": [\"詰まらない\"] },\n        { \"kanji\": \"<ruby>速<rt>はや<\\/rt><\\/ruby>い\", \"type\": \"i\", \"eng\": \"fast, quick\" },\n        { \"kanji\": \"<ruby>古<rt>ふる<\\/rt><\\/ruby>い\", \"type\": \"i\", \"eng\": \"old (thing)\" },\n        { \"kanji\": \"<ruby>欲<rt>ほ<\\/rt><\\/ruby>しい\", \"type\": \"i\", \"eng\": \"wanted, desired\" },\n        { \"kanji\": \"<ruby>難<rt>むずか<\\/rt><\\/ruby>しい\", \"type\": \"i\", \"eng\": \"difficult\" },\n        { \"kanji\": \"<ruby>安<rt>やす<\\/rt><\\/ruby>い\", \"type\": \"i\", \"eng\": \"cheap\" },\n        { \"kanji\": \"<ruby>好<rt>す<\\/rt><\\/ruby>き\", \"type\": \"na\", \"eng\": \"like\" },\n        { \"kanji\": \"<ruby>有<rt>ゆう<\\/rt><\\/ruby><ruby>名<rt>めい<\\/rt><\\/ruby>\", \"type\": \"na\", \"eng\": \"famous\" },\n        { \"kanji\": \"きれい\", \"type\": \"na\", \"eng\": \"beautiful, tidy\" },\n        { \"kanji\": \"<ruby>嫌<rt>きら<\\/rt><\\/ruby>い\", \"type\": \"na\", \"eng\": \"dislike\" },\n        { \"kanji\": \"<ruby>静<rt>しず<\\/rt><\\/ruby>か\", \"type\": \"na\", \"eng\": \"quiet\" },\n        { \"kanji\": \"<ruby>元<rt>げん<\\/rt><\\/ruby><ruby>気<rt>き<\\/rt><\\/ruby>\", \"type\": \"na\", \"eng\": \"healthy\" },\n        { \"kanji\": \"<ruby>色<rt>いろ<\\/rt><\\/ruby><ruby>々<rt>いろ<\\/rt><\\/ruby>\", \"type\": \"na\", \"eng\": \"various\" },\n        { \"kanji\": \"<ruby>心<rt>しん<\\/rt><\\/ruby><ruby>配<rt>ぱい<\\/rt><\\/ruby>\", \"type\": \"na\", \"eng\": \"worry, care\" },\n        { \"kanji\": \"<ruby>嫌<rt>いや<\\/rt><\\/ruby>\", \"type\": \"na\", \"eng\": \"unpleasant, detestable\" },\n        { \"kanji\": \"<ruby>十<rt>じゅう<\\/rt><\\/ruby><ruby>分<rt>ぶん<\\/rt><\\/ruby>\", \"type\": \"na\", \"eng\": \"sufficient\" },\n        { \"kanji\": \"<ruby>立<rt>りっ<\\/rt><\\/ruby><ruby>派<rt>ぱ<\\/rt><\\/ruby>\", \"type\": \"na\", \"eng\": \"excellent, splendid\" },\n        { \"kanji\": \"<ruby>同<rt>おな<\\/rt><\\/ruby>じ\", \"type\": \"na\", \"eng\": \"same, alike\" },\n        { \"kanji\": \"<ruby>大<rt>だい<\\/rt><\\/ruby><ruby>丈<rt>じょう<\\/rt><\\/ruby><ruby>夫<rt>ぶ<\\/rt><\\/ruby>\", \"type\": \"na\", \"eng\": \"okay, safe\" },\n        { \"kanji\": \"<ruby>真<rt>ま<\\/rt><\\/ruby>っ<ruby>直<rt>す<\\/rt><\\/ruby>ぐ\", \"type\": \"na\", \"eng\": \"straight, direct\", \"altOkurigana\": [\"真直ぐ\", \"真すぐ\", \"真っすぐ\"] },\n        { \"kanji\": \"<ruby>下<rt>へ<\\/rt><\\/ruby><ruby>手<rt>た<\\/rt><\\/ruby>\", \"type\": \"na\", \"eng\": \"unskilled\" },\n        { \"kanji\": \"<ruby>簡<rt>かん<\\/rt><\\/ruby><ruby>単<rt>たん<\\/rt><\\/ruby>\", \"type\": \"na\", \"eng\": \"simple, easy\" },\n        { \"kanji\": \"<ruby>楽<rt>らく<\\/rt><\\/ruby>\", \"type\": \"na\", \"eng\": \"comfortable, easy\" },\n        { \"kanji\": \"<ruby>残<rt>ざん<\\/rt><\\/ruby><ruby>念<rt>ねん<\\/rt><\\/ruby>\", \"type\": \"na\", \"eng\": \"unfortunate, disappointing\" },\n        { \"kanji\": \"<ruby>必<rt>ひつ<\\/rt><\\/ruby><ruby>要<rt>よう<\\/rt><\\/ruby>\", \"type\": \"na\", \"eng\": \"necessary\" }\n    ]\n}","// vim: set ts=4 sw=4 expandtab\n// (C) 2010 Dan Bravender - licensed under the AGPL 3.0\n\n// try {\n//     var hangeul       = require('./hangeul'),\n//         pronunciation = require('./pronunciation');\n// } catch(e) {}\n\nimport { hangeul, Geulja } from \"./hangeul.js\"\nimport pronunciation from \"./pronunciation.js\"\n\nvar conjugator = {};\n\nconjugator.no_padchim_rule = function(characters) {\n    /* no_padchim_rule is a helper function for defining merges where a\n        character will take the padchim of a merged character if the first\n        character doesn't already have a padchim, .e.g. 습 -> 가 + 습니다 -> 갑니다.\n    */\n    return function(x, y) {\n        if (!hangeul.padchim(x.charAt(x.length-1)) && y[0] in characters) {\n            return ['borrow padchim', x.substring(0, x.length-1) +\n                                      hangeul.join(hangeul.lead(x[x.length-1]),\n                                                   hangeul.vowel(x[x.length-1]),\n                                                   hangeul.padchim(y[0])) +\n                                      y.substring(1)];\n        }\n    }\n};\n\nconjugator.vowel_contraction = function(vowel1, vowel2, new_vowel, trace) {\n    /* vowel contraction is a helper function for defining common contractions\n       between a character without a padchim and a character that starts with\n        'ᄋ', e.g. ㅐ + ㅕ -> ㅐ when applied to 해 + 였 yields 했.\n    */\n    return function(x, y) {\n        if (hangeul.match(x.charAt(x.length-1), '*', vowel1, null) &&\n            hangeul.match(y.charAt(0), 'ᄋ', vowel2, '*')) {\n            return ['vowel contraction [' + vowel1 + ' ' + vowel2 + ' -> ' + new_vowel + ']',\n                    x.substring(0, x.length-1) +\n                    hangeul.join(hangeul.lead(x.charAt(x.length-1)),\n                                 new_vowel,\n                                 hangeul.padchim(y[0])) +\n                    y.substring(1)];\n        }\n    }\n};\n\nconjugator.drop_l = function(x, y) {\n    if (hangeul.padchim(x[x.length-1]) == 'ᆯ') {\n        conjugator.reasons.push('drop ㄹ')\n        return x.substring(0, x.length-1) +\n               hangeul.join(hangeul.lead(x[x.length-1]),\n                            hangeul.vowel(x[x.length-1])) +\n               y;\n    }\n};\n\nconjugator.drop_l_and_borrow_padchim = function(x, y) {\n    if (hangeul.padchim(x.charAt(x.length-1)) == 'ᆯ') {\n        conjugator.reasons.push('drop ' + hangeul.padchim(x.charAt(x.length-1)) + ' borrow padchim')\n        return x.substring(0, x.length-1) +\n               hangeul.join(hangeul.lead(x[x.length-1]),\n                            hangeul.vowel(x[x.length-1]),\n                            hangeul.padchim(y[0])) +\n               y.substring(1);\n    }\n};\n\nconjugator.dont_insert_eh = function(x, y) {\n    if (hangeul.padchim(x.charAt(x.length-1)) == 'ᆯ' &&\n        y[0] == '면') {\n        return ['join', x + y];\n    }\n};\n\nconjugator.insert_eh = function(characters) {\n    return function(x, y) {\n        if (hangeul.padchim(x.charAt(x.length-1)) && y[0] in characters) {\n            return ['padchim + consonant -> insert 으', x + '으' + y];\n        }\n    }\n};\n\nconjugator.lm_merge = function(x, y) {\n    if (hangeul.padchim(x.charAt(x.length-1)) == 'ᆯ' && y[0] == '음') {\n        return ['ㄹ + ㅁ -> ᆱ',\n                x.substring(0, x.length-1) +\n                hangeul.join(hangeul.lead(x[x.length-1]),\n                             hangeul.vowel(x[x.length-1]),\n                             'ᆱ')];\n    }\n};\n\n/* merge rules is a list of rules that are applied in order when merging a verb \n   stem with a tense ending\n*/\n\nconjugator.merge_rules = [\n    conjugator.no_padchim_rule({'을': true, '습': true, '읍': true, '는': true, '음': true}),\n    conjugator.lm_merge,\n    conjugator.vowel_contraction('ㅐ', 'ㅓ', 'ㅐ'),\n    conjugator.vowel_contraction('ㅡ', 'ㅓ', 'ㅓ'),\n    conjugator.vowel_contraction('ㅜ', 'ㅓ', 'ㅝ'),\n    conjugator.vowel_contraction('ㅗ', 'ㅏ', 'ㅘ'),\n    conjugator.vowel_contraction('ㅚ', 'ㅓ', 'ㅙ'),\n    conjugator.vowel_contraction('ㅙ', 'ㅓ', 'ㅙ'),\n    conjugator.vowel_contraction('ㅘ', 'ㅓ', 'ㅘ'),\n    conjugator.vowel_contraction('ㅝ', 'ㅓ', 'ㅝ'),\n    conjugator.vowel_contraction('ㅏ', 'ㅏ', 'ㅏ'),\n    conjugator.vowel_contraction('ㅡ', 'ㅏ', 'ㅏ'),\n    conjugator.vowel_contraction('ㅣ', 'ㅓ', 'ㅕ'),\n    conjugator.vowel_contraction('ㅓ', 'ㅓ', 'ㅓ'),\n    conjugator.vowel_contraction('ㅓ', 'ㅣ', 'ㅐ'),\n    conjugator.vowel_contraction('ㅏ', 'ㅣ', 'ㅐ'),\n    conjugator.vowel_contraction('ㅑ', 'ㅣ', 'ㅒ'),\n    conjugator.vowel_contraction('ㅒ', 'ㅓ', 'ㅒ'),\n    conjugator.vowel_contraction('ㅔ', 'ㅓ', 'ㅔ'),\n    conjugator.vowel_contraction('ㅕ', 'ㅓ', 'ㅕ'),\n    conjugator.vowel_contraction('ㅏ', 'ㅕ', 'ㅐ'),\n    conjugator.vowel_contraction('ㅖ', 'ㅓ', 'ㅖ'),\n    conjugator.vowel_contraction('ㅞ', 'ㅓ', 'ㅞ'),\n    conjugator.dont_insert_eh,\n    conjugator.insert_eh({'면': true, '세': true, '십': true}),\n    // default rule\n    function (x, y) {\n        return ['join', x + y];\n    }\n];\n\nconjugator.reasons = [];\n\nconjugator.merge = function(x, y) {\n    /* concatenates every element in a list using the rules to\n       merge the strings\n    */\n    var response = null;\n    conjugator.merge_rules.forEach(function(rule) {\n        if (!response) {\n            let output = rule(x, y);\n            if (output) {\n                conjugator.reasons.push((output[0] ? output[0] : '') + ' (' + x + ' + ' + y + ' -> ' + output[1] + ')');\n                response = output[1];\n            }\n        }\n    });\n    return response;\n};\n\nconjugator.both_regular_and_irregular = {\n    '일': true, '곱': true, '파묻': true, '누르': true, '묻': true, '이르': true,\n    '되묻': true, '썰': true, '붓': true, '들까불': true, '굽': true, '걷': true,\n    '뒤까불': true, '까불': true\n};\n\nconjugator.not_p_irregular = {'털썩이잡': true, '넘겨잡': true, '우접': true, '입': true, '맞접': true, '문잡': true, '다잡': true, '까뒤집': true, '배좁': true, '목잡': true, '끄집': true, '잡': true, '옴켜잡': true, '검잡': true, '되순라잡': true, '내씹': true, '모집': true, '따잡': true, '엇잡': true, '까집': true, '겹집': true, '줄통뽑': true, '버르집': true, '지르잡': true, '추켜잡': true, '업': true, '되술래잡': true, '되접': true, '좁디좁': true, '더위잡': true, '말씹': true, '내뽑': true, '집': true, '걸머잡': true, '휘어잡': true, '꿰입': true, '황잡': true, '에굽': true, '내굽': true, '따라잡': true, '맞뒤집': true, '둘러업': true, '늘잡': true, '끄잡': true, '우그려잡': true, '어줍': true, '언걸입': true, '들이곱': true, '껴잡': true, '곱 접': true, '훔켜잡': true, '늦추잡': true, '갈아입': true, '친좁': true, '희짜뽑': true, '마음잡': true, '개미잡': true, '옴씹': true, '치잡': true, '그러잡': true, '움켜잡': true, '씹': true, '비집': true, '꼽': true, '살잡': true, '죄입': true, '졸잡': true, '가려잡': true, '뽑': true, '걷어잡': true, '헐잡': true, '돌라입': true, '덧잡': true, '얕잡': true, '낫잡': true, '부여잡': true, '맞붙잡': true, '걸입': true, '주름잡': true, '걷어입': true, '빌미잡': true, '개잡': true, '겉잡': true, '안쫑잡': true, '좁': true, '힘입': true, '걷잡': true, '바르집': true, '감씹': true, '짓씹': true, '손잡': true, '포집': true, '붙잡': true, '낮잡': true, '책잡': true, '곱잡': true, '흉잡': true, '뒤집': true, '땡잡': true, '어림잡': true, '덧껴입': true, '수줍': true, '뒤잡': true, '꼬집': true, '예굽': true, '덮쳐잡': true, '헛잡': true, '되씹': true, '낮추잡': true, '날파람잡': true, '틀어잡': true, '헤집': true, '남의달잡': true, '바로잡': true, '흠잡': true, '파잡': true, '얼추잡': true, '손꼽': true, '접': true, '차려입': true, '골라잡': true, '거머잡': true, '후려잡': true, '머줍': true, '넉장뽑': true, '사로잡': true, '덧입': true, '껴입': true, '얼입': true, '우집': true, '설잡': true, '늦잡': true, '비좁': true, '고르잡': true, '때려잡': true, '떼집': true, '되잡': true, '홈켜잡': true, '내곱': true, '곱씹': true, '빼입': true, '들이굽': true, '새잡': true, '이르집': true, '떨쳐입': true};\n\nconjugator.not_s_irregular = {'내솟': true, '빗': true, '드솟': true, '비웃': true, '뺏': true, '샘솟': true, '벗': true, '들이웃': true, '솟': true, '되뺏': true, '빼앗': true, '밧': true, '애긋': true, '짜드라웃': true, '어그솟': true, '들솟': true, '씻': true, '빨가벗': true, '깃': true, '벌거벗': true, '엇': true, '되빼앗': true, '웃': true, '앗': true, '헐벗': true, '용솟': true, '덧솟': true, '발가벗': true, '뻘거벗': true, '날솟': true, '치솟': true};\n\nconjugator.not_d_irregular = {'맞받': true, '내딛': true, '내리받': true, '벋': true, '뒤닫': true, '주고받': true, '공얻': true, '무뜯': true, '물어뜯': true, '여닫': true, '그러묻': true, '잇닫': true, '덧묻': true, '되받': true, '뻗': true, '올리닫': true, '헐뜯': true, '들이닫': true, '활걷': true, '겉묻': true, '닫': true, '창받': true, '건네받': true, '물손받': true, '들이받': true, '강요받': true, '내리벋': true, '받': true, '이어받': true, '부르걷': true, '응받': true, '검뜯': true, '인정받': true, '내려딛': true, '내쏟': true, '내리뻗': true, '너름받': true, '세받': true, '내 돋': true, '돌려받': true, '쥐어뜯': true, '껴묻': true, '본받': true, '뒤받': true, '강종받': true, '내리닫': true, '떠받': true, '테받': true, '내받': true, '흠뜯': true, '두남받': true, '치받': true, '부르돋': true, '대받': true, '설굳': true, '처닫': true, '얻': true, '들이돋': true, '돋': true, '죄받': true, '쏟': true, '씨받': true, '딱장받': true, '치걷': true, '믿': true, '치벋': true, '버림받': true, '북돋': true, '딛': true, '치고받': true, '욱걷': true, '물려받': true, '뜯': true, '줴뜯': true, '넘겨받': true, '안받': true, '내뻗': true, '내리쏟': true, '벋딛': true, '뒤묻': true, '뻗딛': true, '치뻗': true, '치닫': true, '줄밑걷': true, '굳': true, '내닫': true, '내림받': true};\n\nconjugator.not_h_irregular = {'들이좋': true, '터놓': true, '접어놓': true, '좋': true, '풀어놓': true, '내쌓': true, '꼴좋': true, '치쌓': true, '물어넣': true, '잇닿': true, '끝닿': true, '그러넣': true, '뽕놓': true, '낳': true, '내리찧': true, '힘닿': true, '내려놓': true, '세놓': true, '둘러놓': true, '들놓': true, '맞찧': true, '잡아넣': true, '돌라쌓': true, '덧쌓': true, '갈라땋': true, '주놓': true, '갈라놓': true, '들이닿': true, '집어넣': true, '닿': true, '의좋': true, '막놓': true, '내놓': true, '들여놓': true, '사놓': true, '썰레놓': true, '짓찧': true, '벋놓': true, '찧': true, '침놓': true, '들이찧': true, '둘러쌓': true, '털어놓': true, '담쌓': true, '돌라놓': true, '되잡아넣': true, '끌어넣': true, '덧놓': true, '맞닿': true, '처넣': true, '빻': true, '뻥놓': true, '내리쌓': true, '곱놓': true, '설레발놓': true, '우겨넣': true, '놓': true, '수놓': true, '써넣': true, '널어놓': true, '덮쌓': true, '연닿': true, '헛놓': true, '돌려놓': true, '되쌓': true, '욱여넣': true, '앗아넣': true, '올려놓': true, '헛방놓': true, '날아놓': true, '뒤놓': true, '업수놓': true, '가로놓': true, '맞놓': true, '펴놓': true, '내켜놓': true, '쌓': true, '끙짜놓': true, '들이쌓': true, '겹쌓': true, '기추놓': true, '넣': true, '불어넣': true, '늘어놓': true, '긁어놓': true, '어긋놓': true, '앞넣': true, '눌러놓': true, '땋': true, '들여쌓': true, '빗놓': true, '사이좋': true, '되놓': true, '헛불놓': true, '몰아넣': true, '먹놓': true, '밀쳐놓': true, '살닿': true, '피새놓': true, '빼놓': true, '하차놓': true, '틀어넣': true};\n\nconjugator.not_l_euh_irregular = {'우러르': true, '따르': true, '붙따르': true, '늦치르': true, '다다르': true, '잇따르': true, '치르': true};\n\nconjugator.not_l_irregular = {};\n\nconjugator.after_last_space = function(infinitive) {\n    return infinitive.split(' ').reverse()[0];\n};\n\nconjugator.is_s_irregular = function(infinitive, regular) {\n    if (regular) {\n        return false;\n    }\n    return hangeul.match(infinitive.charAt(infinitive.length-1), '*', '*', 'ᆺ') &&\n           !(conjugator.after_last_space(infinitive) in conjugator.not_s_irregular);\n};\n\n\nconjugator.is_l_irregular = function(infinitive, regular) {\n    if (regular) {\n        return false;\n    }\n    return hangeul.match(infinitive.charAt(infinitive.length-1), '*', '*', 'ᆯ') &&\n           !(conjugator.after_last_space(infinitive) in conjugator.not_l_irregular);\n}\n\nconjugator.is_l_euh_irregular = function(infinitive, regular) {\n    if (regular) {\n        return false;\n    }\n    return hangeul.match(infinitive.charAt(infinitive.length-1), 'ᄅ', 'ㅡ', null) &&\n           !(conjugator.after_last_space(infinitive) in conjugator.not_l_euh_irregular);\n};\n\nconjugator.is_h_irregular = function(infinitive, regular) {\n    if (regular) {\n        return false;\n    }\n    return (hangeul.padchim(infinitive.charAt(infinitive.length-1)) == 'ᇂ' ||\n           infinitive.charAt(infinitive.length-1) == '러') &&\n           !(conjugator.after_last_space(infinitive) in conjugator.not_h_irregular);\n};\n\nconjugator.is_p_irregular = function(infinitive, regular) {\n    if (regular) {\n        return false;\n    }\n    return hangeul.match(infinitive.charAt(infinitive.length-1), '*', '*', 'ᆸ') &&\n           !(conjugator.after_last_space(infinitive) in conjugator.not_p_irregular);\n};\n\nconjugator.is_d_irregular = function(infinitive, regular) {\n    if (regular) {\n        return false;\n    }\n    return hangeul.match(infinitive.charAt(infinitive.length-1), '*', '*', 'ᆮ') &&\n           !(conjugator.after_last_space(infinitive) in conjugator.not_d_irregular);\n};\n\nconjugator.verb_types = {\n    'ㅅ 불규칙 동사 (irregular verb)': conjugator.is_s_irregular,\n    'ㄹ 불규칙 동사 (irregular verb)': conjugator.is_l_irregular,\n    '르 불규칙 동사 (irregular verb)': conjugator.is_l_euh_irregular,\n    'ㅎ 불규칙 동사 (irregular verb)': conjugator.is_h_irregular,\n    'ㅂ 불규칙 동사 (irregular verb)': conjugator.is_p_irregular,\n    'ㄷ 불규칙 동사 (irregular verb)': conjugator.is_d_irregular\n};\n\nconjugator.verb_type = function(infinitive, regular) {\n    if (regular) {\n        return 'regular verb';\n    }\n    for (irregular_name in conjugator.verb_types) {\n        func = conjugator.verb_types[irregular_name];\n        if (func(conjugator.base(infinitive))) {\n            return irregular_name;\n        }\n    }\n    return 'regular verb';\n}\n\nconjugator.base = function(infinitive, regular) {\n    if (infinitive.charAt(infinitive.length-1) == '다') {\n        return infinitive.substring(0, infinitive.length-1);\n    } else {\n        return infinitive;\n    }\n};\n\nconjugator.base2 = function(infinitive, regular) {\n    infinitive = conjugator.base(infinitive, regular);\n\n    if (infinitive == '아니') {\n        infinitive = new hangeul.Geulja('아니');\n        infinitive.hidden_padchim = true;\n        return infinitive;\n    }\n    if (infinitive == '뵙') {\n        return '뵈';\n    }\n    if (infinitive == '푸') {\n        return '퍼';\n    }\n    let new_infinitive = infinitive;\n    if (conjugator.is_h_irregular(infinitive, regular)) {\n        new_infinitive = conjugator.merge(infinitive.substring(0, infinitive.length-1) +\n                                          hangeul.join(hangeul.lead(infinitive.charAt(infinitive.length-1)),\n                                                       hangeul.vowel(infinitive.charAt(infinitive.length-1))),\n                                          '이');\n        conjugator.reasons.push('ㅎ irregular (' + infinitive + ' -> ' + new_infinitive + ')');\n    } else if (conjugator.is_p_irregular(infinitive, regular)) {\n        // only some verbs get ㅗ (highly irregular)\n        let new_vowel;\n        if (infinitive in {'묻잡': true} ||\n            infinitive.charAt(infinitive.length-1) in {'돕': true, '곱': true}) {\n            new_vowel = 'ㅗ';\n        } else {\n            new_vowel = 'ㅜ';\n        }\n        new_infinitive = conjugator.merge(infinitive.substring(0, infinitive.length-1) +\n                                          hangeul.join(hangeul.lead(infinitive.charAt(infinitive.length-1)),\n                                                       hangeul.vowel(infinitive.charAt(infinitive.length-1))),\n                                          hangeul.join('ᄋ', new_vowel))\n        conjugator.reasons.push('ㅂ irregular (' + infinitive + ' -> ' + new_infinitive + ')');\n    } else if (conjugator.is_d_irregular(infinitive, regular)) {\n        new_infinitive = new hangeul.Geulja(infinitive.substring(0, infinitive.length-1) +\n                                            hangeul.join(hangeul.lead(infinitive.charAt(infinitive.length-1)),\n                                            hangeul.vowel(infinitive.charAt(infinitive.length-1)),\n                                             'ᆯ'));\n        new_infinitive.original_padchim = 'ᆮ';\n        conjugator.reasons.push('ㄷ irregular (' + infinitive + ' -> ' + new_infinitive + ')');\n    } else if (conjugator.is_s_irregular(infinitive, regular)) {\n        new_infinitive = new hangeul.Geulja(infinitive.substring(0, infinitive.length-1) +\n                                            hangeul.join(hangeul.lead(infinitive.charAt(infinitive.length-1)),\n                                            hangeul.vowel(infinitive.charAt(infinitive.length-1))));\n        new_infinitive.hidden_padchim = true;\n        conjugator.reasons.push('ㅅ irregular (' + infinitive + ' -> ' + new_infinitive + ' [hidden padchim])');\n    }\n    return new_infinitive;\n};\n\nconjugator.base3 = function(infinitive, regular) {\n    infinitive = conjugator.base(infinitive, regular);\n    if (infinitive == '아니') {\n        return '아니';\n    }\n    if (infinitive == '푸') {\n        return '푸';\n    }\n    if (infinitive == '뵙') {\n        return '뵈';\n    }\n    if (conjugator.is_h_irregular(infinitive, regular)) {\n        return infinitive.substring(0, infinitive.length-1) +\n               hangeul.join(hangeul.lead(infinitive.charAt(infinitive.length-1)),\n                            hangeul.vowel(infinitive.charAt(infinitive.length-1)))\n    } else if (conjugator.is_p_irregular(infinitive, regular)) {\n        return infinitive.substring(0, infinitive.length-1) +\n               hangeul.join(hangeul.lead(infinitive.charAt(infinitive.length-1)),\n                            hangeul.vowel(infinitive.charAt(infinitive.length-1))) + '우';\n    } else {\n        return conjugator.base2(infinitive, regular);\n    }\n};\n\nconjugator.declarative_present_informal_low = function(infinitive, regular, further_use) {\n    infinitive = conjugator.base2(infinitive, regular);\n    if (!further_use && ((infinitive == '이' && !infinitive.hidden_padchim) ||\n                         infinitive == '아니') ||\n                        (regular && infinitive.charAt(infinitive.length-1) == '이')) {\n        conjugator.reasons.push('야 irregular');\n        return infinitive + '야';\n    }\n    // 르 irregular\n    if (regular && infinitive == '이르') {\n        return '일러';\n    }\n    if (conjugator.is_l_euh_irregular(infinitive, regular)) {\n        let new_base = infinitive.substring(0, infinitive.length-2) +\n                   hangeul.join(hangeul.lead(infinitive[infinitive.length-2]),\n                                hangeul.vowel(infinitive[infinitive.length-2]),\n                                'ᆯ');\n        if (infinitive.substring(infinitive.length-2, infinitive.length) in {'푸르': true, '이르': true}) {\n            new_base = new_base + hangeul.join('ᄅ',\n                                               hangeul.vowel(hangeul.find_vowel_to_append(new_base)))\n            conjugator.reasons.push('irregular stem + ' + infinitive + ' -> ' + new_base);\n            return infinitive + '러';\n        } else if (hangeul.find_vowel_to_append(infinitive.substring(0, infinitive.length-1)) == '아') {\n            new_base += '라'\n            conjugator.reasons.push('르 irregular stem change [' + infinitive + ' -> ' + new_base + ']');\n            return new_base;\n        } else {\n            new_base += '러';\n            conjugator.reasons.push('르 irregular stem change [' + infinitive + ' -> ' + new_base + ']');\n            return new_base;\n        }\n    } else if (infinitive.charAt(infinitive.length-1) == '하') {\n        return conjugator.merge(infinitive, '여');\n    } else if (conjugator.is_h_irregular(infinitive, regular)) {\n        return conjugator.merge(infinitive, '이');\n    }\n    return conjugator.merge(infinitive, hangeul.find_vowel_to_append(infinitive));\n};\nconjugator.declarative_present_informal_low.conjugation = true;\n\nconjugator.declarative_present_informal_high = function(infinitive, regular) {\n    infinitive = conjugator.base2(infinitive, regular)\n    if ((infinitive == '이' && !infinitive.hidden_padchim) ||\n        (infinitive.charAt(infinitive.length-1) == '이' && regular) ||\n        infinitive == '아니') {\n        conjugator.reasons.push('에요 irregular')\n        return infinitive + '에요';\n    }\n    return conjugator.merge(conjugator.declarative_present_informal_low(infinitive, regular, true), '요');\n};\nconjugator.declarative_present_informal_high.conjugation = true;\n\nconjugator.declarative_present_formal_low = function(infinitive, regular) {\n    if (conjugator.is_l_irregular(conjugator.base(infinitive), regular)) {\n        return conjugator.drop_l_and_borrow_padchim(conjugator.base(infinitive, regular), '는다');\n    }\n    return conjugator.merge(conjugator.base(infinitive, regular), '는다');\n};\nconjugator.declarative_present_formal_low.conjugation = true;\n\nconjugator.declarative_present_formal_high = function(infinitive, regular) {\n    if (conjugator.is_l_irregular(conjugator.base(infinitive), regular)) {\n        return conjugator.drop_l_and_borrow_padchim(conjugator.base(infinitive, regular), '습니다');\n    }\n    return conjugator.merge(conjugator.base(infinitive, regular), '습니다')\n};\nconjugator.declarative_present_formal_high.conjugation = true;\n\nconjugator.past_base = function(infinitive, regular) {\n    let ps = conjugator.declarative_present_informal_low(infinitive, regular, true);\n    if (hangeul.find_vowel_to_append(ps) == '아') {\n        return conjugator.merge(ps, '았');\n    } else {\n        return conjugator.merge(ps, '었');\n    }\n};\nconjugator.past_base.conjugation = true;\n\nconjugator.declarative_past_informal_low = function(infinitive, regular) {\n    return conjugator.merge(conjugator.past_base(infinitive, regular), '어');\n};\nconjugator.declarative_past_informal_low.conjugation = true;\n\nconjugator.declarative_past_informal_high = function(infinitive, regular) {\n    return conjugator.merge(conjugator.declarative_past_informal_low(infinitive, regular), '요');\n};\nconjugator.declarative_past_informal_high.conjugation = true;\n\nconjugator.declarative_past_formal_low = function(infinitive, regular) {\n    return conjugator.merge(conjugator.past_base(infinitive, regular), '다');\n};\nconjugator.declarative_past_formal_low.conjugation = true;\n\nconjugator.declarative_past_formal_high = function(infinitive, regular) {\n    return conjugator.merge(conjugator.past_base(infinitive, regular), '습니다');\n};\nconjugator.declarative_past_formal_high.conjugation = true;\n\nconjugator.future_base = function(infinitive, regular) {\n    if (conjugator.is_l_irregular(conjugator.base(infinitive, regular))) {\n        return conjugator.drop_l_and_borrow_padchim(conjugator.base3(infinitive, regular), '을');\n    }\n    return conjugator.merge(conjugator.base3(infinitive, regular), '을');\n};\nconjugator.future_base.conjugation = true;\n\nconjugator.declarative_future_informal_low = function(infinitive, regular) {\n    return conjugator.merge(conjugator.future_base(infinitive, regular), ' 거야');\n};\nconjugator.declarative_future_informal_low.conjugation = true;\n\nconjugator.declarative_future_informal_high = function(infinitive, regular) {\n    return conjugator.merge(conjugator.future_base(infinitive, regular), ' 거예요');\n};\nconjugator.declarative_future_informal_high.conjugation = true;\n\nconjugator.declarative_future_formal_low = function(infinitive, regular) {\n    return conjugator.merge(conjugator.future_base(infinitive, regular), ' 거다');\n};\nconjugator.declarative_future_formal_low.conjugation = true;\n\nconjugator.declarative_future_formal_high = function(infinitive, regular) {\n    return conjugator.merge(conjugator.future_base(infinitive, regular), ' 겁니다');\n};\nconjugator.declarative_future_formal_high.conjugation = true;\n\nconjugator.declarative_future_conditional_informal_low = function(infinitive, regular) {\n    return conjugator.merge(conjugator.base(infinitive, regular), '겠어');\n};\nconjugator.declarative_future_conditional_informal_low.conjugation = true;\n\nconjugator.declarative_future_conditional_informal_high = function(infinitive, regular) {\n    return conjugator.merge(conjugator.base(infinitive, regular), '겠어요');\n};\nconjugator.declarative_future_conditional_informal_high.conjugation = true;\n\nconjugator.declarative_future_conditional_formal_low = function(infinitive, regular) {\n    return conjugator.merge(conjugator.base(infinitive, regular), '겠다');\n};\nconjugator.declarative_future_conditional_formal_low.conjugation = true;\n\nconjugator.declarative_future_conditional_formal_high = function(infinitive, regular) {\n    return conjugator.merge(conjugator.base(infinitive, regular), '겠습니다');\n};\nconjugator.declarative_future_conditional_formal_high.conjugation = true;\n\nconjugator.inquisitive_present_informal_low = function(infinitive, regular) {\n    return conjugator.merge(conjugator.declarative_present_informal_low(infinitive, regular), '?');\n};\nconjugator.inquisitive_present_informal_low.conjugation = true;\n\nconjugator.inquisitive_present_informal_high = function(infinitive, regular) {\n    return conjugator.merge(conjugator.declarative_present_informal_high(infinitive, regular), '?');\n};\nconjugator.inquisitive_present_informal_high.conjugation = true;\n\nconjugator.inquisitive_present_formal_low = function(infinitive, regular) {\n    infinitive = conjugator.base(infinitive, regular);\n    if (conjugator.is_l_irregular(infinitive, regular)) {\n        return conjugator.drop_l(infinitive, '니?');\n    }\n    return conjugator.merge(infinitive, '니?');\n};\nconjugator.inquisitive_present_formal_low.conjugation = true;\n\nconjugator.inquisitive_present_formal_high = function(infinitive, regular) {\n    infinitive = conjugator.base(infinitive, regular);\n    if (conjugator.is_l_irregular(infinitive, regular)) {\n        return conjugator.drop_l_and_borrow_padchim(infinitive, '습니까?');\n    }\n    return conjugator.merge(infinitive, '습니까?');\n};\nconjugator.inquisitive_present_formal_high.conjugation = true;\n\nconjugator.inquisitive_past_informal_low = function(infinitive, regular) {\n    return conjugator.declarative_past_informal_low(infinitive, regular) + '?';\n};\nconjugator.inquisitive_past_informal_low.conjugation = true;\n\nconjugator.inquisitive_past_informal_high = function(infinitive, regular) {\n    return conjugator.merge(conjugator.declarative_past_informal_high(infinitive, regular), '?');\n};\nconjugator.inquisitive_past_informal_high.conjugation = true;\n\nconjugator.inquisitive_past_formal_low = function(infinitive, regular) {\n    return conjugator.merge(conjugator.past_base(infinitive, regular), '니?');\n};\nconjugator.inquisitive_past_formal_low.conjugation = true;\n\nconjugator.inquisitive_past_formal_high = function(infinitive, regular) {\n    return conjugator.merge(conjugator.past_base(infinitive, regular), '습니까?');\n};\nconjugator.inquisitive_past_formal_high.conjugation = true;\n\nconjugator.imperative_present_informal_low = function(infinitive, regular) {\n    return conjugator.declarative_present_informal_low(infinitive, regular);\n};\nconjugator.imperative_present_informal_low.conjugation = true;\n\nconjugator.imperative_present_informal_high = function(infinitive, regular) {\n    if (conjugator.is_l_irregular(conjugator.base(infinitive, regular))) {\n        return conjugator.drop_l(conjugator.base3(infinitive, regular), '세요');\n    }\n    return conjugator.merge(conjugator.base3(infinitive, regular), '세요');\n};\nconjugator.imperative_present_informal_high.conjugation = true;\n\nconjugator.imperative_present_formal_low = function(infinitive, regular) {\n    return conjugator.merge(conjugator.imperative_present_informal_low(infinitive, regular), '라');\n};\nconjugator.imperative_present_formal_low.conjugation = true;\n\nconjugator.imperative_present_formal_high = function(infinitive, regular) {\n    if (conjugator.is_l_irregular(conjugator.base(infinitive, regular))) {\n        return conjugator.drop_l(conjugator.base3(infinitive, regular), '십시오');\n    }\n    return conjugator.merge(conjugator.base3(infinitive, regular), '십시오');\n};\nconjugator.imperative_present_formal_high.conjugation = true;\n\nconjugator.propositive_present_informal_low = function(infinitive, regular) {\n    return conjugator.declarative_present_informal_low(infinitive, regular);\n};\nconjugator.propositive_present_informal_low.conjugation = true;\n\nconjugator.propositive_present_informal_high = function(infinitive, regular) {\n    return conjugator.declarative_present_informal_high(infinitive, regular);\n};\nconjugator.propositive_present_informal_high.conjugation = true;\n\nconjugator.propositive_present_formal_low = function(infinitive, regular) {\n    return conjugator.merge(conjugator.base(infinitive, regular), '자');\n};\nconjugator.propositive_present_formal_low.conjugation = true;\n\nconjugator.propositive_present_formal_high = function(infinitive, regular) {\n    infinitive = conjugator.base(infinitive);\n    if (conjugator.is_l_irregular(infinitive, regular)) {\n        return conjugator.drop_l_and_borrow_padchim(conjugator.base3(infinitive, regular), '읍시다');\n    }\n    return conjugator.merge(conjugator.base3(infinitive, regular), '읍시다');\n};\nconjugator.propositive_present_formal_high.conjugation = true;\n\nconjugator.connective_if = function(infinitive, regular) {\n    return conjugator.merge(conjugator.base3(infinitive, regular), '면');\n};\nconjugator.connective_if.conjugation = true;\n\nconjugator.connective_and = function(infinitive, regular) {\n    infinitive = conjugator.base(infinitive, regular);\n    return conjugator.merge(conjugator.base(infinitive, regular), '고');\n};\nconjugator.connective_and.conjugation = true;\n\nconjugator.nominal_ing = function(infinitive, regular) {\n    return conjugator.merge(conjugator.base3(infinitive, regular), '음');\n};\nconjugator.nominal_ing.conjugation = true;\n\nconjugator.conjugations = [];\n\nfor (let f in conjugator) {\n    if (f && conjugator[f].conjugation) {\n        conjugator.conjugations.push(f);\n    }\n}\n\nconjugator.display_conjugations = function(infinitive, regular, callback) {\n    var both_regular_and_irregular = false;\n    infinitive = conjugator.base(infinitive, regular);\n    out = '';\n    if (infinitive in conjugator.both_regular_and_irregular) {\n        both_regular_and_irregular = true;\n        out += '<dd class=\"warning\">warning</dd>';\n        out += '<dt>This verb has both regular and irregular forms.</dt>';\n    }\n    out += '<div class=\"conjugation\"><dd>verb type</dd>';\n    out += '<dt>' + conjugator.verb_type(infinitive, regular)\n    if (both_regular_and_irregular) {\n        out += ' <button id=\"form-change\">view ' + (regular ? 'irregular' : 'regular') + ' form</button>';\n    }\n    out += '</dt></div>';\n    for (conjugation in conjugator) {\n        conjugator.reasons = [];\n        if (conjugator[conjugation].conjugation) {\n            out += '<div class=\"conjugation\"><dd>' + conjugation.replace(/_/g, ' ') + '</dd>';\n            var conjugated = conjugator[conjugation](infinitive, regular);\n            var pron = pronunciation.get_pronunciation(conjugated);\n            var romanized = romanization.romanize(pron);\n            out += '<dt>' + conjugated + ' <button class=\"show-reasons\">↴</button></dt>';\n            out += '<ul class=\"reasons\">';\n            out += '<li>pronunciation [' + (pron != conjugated ? (pron + ' / ') : '') + romanized + ']</li>';\n            for (reason in conjugator.reasons) {\n                out += '<li>' + conjugator.reasons[reason] + '</li>';\n            }\n            out += '</ul></div>';\n        }\n    }\n    callback(out);\n};\n\nconjugator.each_conjugation = function(infinitive, regular, callback) {\n    infinitive = conjugator.base(infinitive, regular);\n    for (conjugation in conjugator) {\n        conjugator.reasons = [];\n        if (conjugator[conjugation].conjugation) {\n            var r = {};\n            r.infinitive = infinitive;\n            r.conjugation_name = conjugation.replace(/_/g, ' ');\n            r.conjugated = conjugator[conjugation](infinitive, regular);\n            r.pronunciation = pronunciation.get_pronunciation(r.conjugated);\n            r.romanized = romanization.romanize(r.pronunciation);\n            r.reasons = [];\n            for (reason in conjugator.reasons) {\n                r.reasons.push(conjugator.reasons[reason]);\n            }\n            callback(r);\n        }\n    }\n};\n\nexport var conjugator_functions = {\n\t\"declarative\": {\n\t\t\"present\": {\n\t\t\t\"informal\": {\n\t\t\t\t\"plain\": conjugator.declarative_present_informal_low,\n\t\t\t\t\"polite\": conjugator.declarative_present_informal_high\n\t\t\t}, \n\t\t\t\"formal\": {\n\t\t\t\t\"plain\": conjugator.declarative_present_formal_low,\n\t\t\t\t\"polite\": conjugator.declarative_present_formal_high\n\t\t\t}\n\t\t},\n\t\t\"past\": {\n\t\t\t\"informal\": {\n\t\t\t\t\"plain\": conjugator.declarative_past_informal_low,\n\t\t\t\t\"polite\": conjugator.declarative_past_informal_high\n\t\t\t}, \n\t\t\t\"formal\": {\n\t\t\t\t\"plain\": conjugator.declarative_past_formal_low,\n\t\t\t\t\"polite\": conjugator.declarative_past_formal_high\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n// Export functions to node\ntry {\n    for (f in conjugator) {\n        exports[f] = conjugator[f];\n    }\n} catch(e) {}\n","// vim: set ts=4 sw=4 expandtab\n// (C) 2010 Dan Bravender - licensed under the AGPL 3.0\n\ntry {\n    var hangeul = require('./hangeul');\n} catch(e) {}\n\nvar pronunciation = {};\n\npronunciation.padchim_to_lead = {\n    'ᆨ': 'ᄀ',\n    'ᆩ': 'ᄁ',\n    'ᆫ': 'ᄂ',\n    'ᆮ': 'ᄃ',\n    'ᆯ': 'ᄅ',\n    'ᆷ': 'ᄆ',\n    'ᆸ': 'ᄇ',\n    'ᆺ': 'ᄉ',\n    'ᆻ': 'ᄊ',\n    'ᆼ': 'ᄋ',\n    'ᆽ': 'ᄌ',\n    'ᆾ': 'ᄎ',\n    'ᆿ': 'ᄏ',\n    'ᇀ': 'ᄐ',\n    'ᇁ': 'ᄑ',\n    'ᇂ': 'ᄒ'\n};\n\npronunciation.move_padchim_to_replace_eung = function(x, y) {\n    if (hangeul.padchim(x[x.length-1]) == 'ᆼ') {\n        return;\n    }\n    if (hangeul.padchim(x[x.length-1]) in pronunciation.padchim_to_lead &&\n        hangeul.lead(y[0]) == 'ᄋ') {\n        return [x.substring(0, x.length-1) + hangeul.join(hangeul.lead(x[x.length-1]),\n                                                          hangeul.vowel(x[x.length-1])),\n                hangeul.join(pronunciation.padchim_to_lead[hangeul.padchim(x[x.length-1])],\n                             hangeul.vowel(y[0]),\n                             hangeul.padchim(y[0])) +\n                y.substring(1)];\n    }\n};\n\npronunciation.change_padchim_pronunciation = function(to, changers) {\n    return function(x, y) {\n        if (hangeul.padchim(x[x.length-1]) in changers) {\n            return [x.substring(0, x.length-1) +\n                    hangeul.join(hangeul.lead(x[x.length-1]),\n                                 hangeul.vowel(x[x.length-1]),\n                                 to),\n                    y];\n        }\n    }\n};\n\npronunciation.consonant_combination_rule = function(x_padchim, y_lead, new_padchim,\n                                                    new_lead, y_vowel) {\n    return function(x, y) {\n        if (y_vowel && hangeul.vowel(y[0]) != y_vowel) {\n            return;\n        }\n        if ((hangeul.padchim(x[x.length-1]) == x_padchim || x_padchim == '*') &&\n            (hangeul.lead(y[0]) == y_lead || y_lead == '*')) {\n            return [x.substring(0, x.length-1) +\n                    hangeul.join(hangeul.lead(x[x.length-1]),\n                                 hangeul.vowel(x[x.length-1]),\n                                 new_padchim == '*' ? hangeul.padchim(x[-1]) : new_padchim),\n                    hangeul.join(new_lead == '*' ? hangeul.lead(y[0]) : new_lead,\n                                 hangeul.vowel(y[0]),\n                                 hangeul.padchim(y[0])) +\n                    y.substring(1)];\n        }\n    }\n};\n\npronunciation.skip_non_hangeul = function(x, y) {\n    if (!hangeul.is_hangeul(x[x.length-1])) {\n        return [x, y, true];\n    }\n};\n\npronunciation.merge_rules = [\n/* WARNING: Please be careful when adding/modifying rules since padchim \n            hangeul.and lead characters are different Unicode characters. Please see:\n            http://www.kfunigraz.ac.at/~katzer/korean_hangul_unicode.html\n\n   Rules from http://en.wikibooks.org/wiki/Korean/Advanced_Pronunciation_Rules\n*/\n    pronunciation.skip_non_hangeul,\n    pronunciation.consonant_combination_rule('ᇂ', 'ᄋ', null, 'ᄋ', null),\n    // ㄱㄴ becomes ㅇㄴ\n    pronunciation.consonant_combination_rule('ᆨ', 'ᄂ', 'ᆼ', 'ᄂ', null),\n    // ㄱㅁ becomes ㅇㅁ\n    pronunciation.consonant_combination_rule('ᆨ', 'ᄆ', 'ᆼ', 'ᄆ', null),\n    // ㅋㄴ becomes ㅇㄴ\n    pronunciation.consonant_combination_rule('ᆿ', 'ᄂ', 'ᆼ', 'ᄂ', null),\n    // ㅋㅁ becomes ㅇㅁ\n    pronunciation.consonant_combination_rule('ᆿ', 'ᄆ', 'ᆼ', 'ᄆ', null),\n    // ㄷㄴ becomes ㄴㄴ\n    pronunciation.consonant_combination_rule('ᆮ', 'ᄂ', 'ᆫ', 'ᄂ', null),\n    // ㄷㅁ becomes ㄴㅁ\n    pronunciation.consonant_combination_rule('ᆮ', 'ᄆ', 'ᆫ', 'ᄆ', null),\n    // ㅅㄴ becomes ㄴㄴ\n    pronunciation.consonant_combination_rule('ᆺ', 'ᄂ', 'ᆫ', 'ᄂ', null),\n    // ㅆㄴ becomes ㄴㄴ\n    pronunciation.consonant_combination_rule('ᆻ', 'ᄂ', 'ᆫ', 'ᄂ', null),\n    // ㅅㅁ becomes ㄴㅁ\n    pronunciation.consonant_combination_rule('ᆺ', 'ᄆ', 'ᆫ', 'ᄆ', null),\n    // ㄱ ㅆ becomes ㄱ ㅆ\n    pronunciation.consonant_combination_rule('ᆨ', 'ᄉ', 'ᆨ', 'ᄊ', null),\n    // ㅈㄴ becomes ㄴㄴ\n    pronunciation.consonant_combination_rule('ᆽ', 'ᄂ', 'ᆫ', 'ᄂ', null),\n    // ㅈㅁ becomes ㄴㅁ\n    pronunciation.consonant_combination_rule('ᆽ', 'ᄆ', 'ᆫ', 'ᄆ', null),\n    // ㅊㄴ becomes ㄴㄴ\n    pronunciation.consonant_combination_rule('ᆾ', 'ᄂ', 'ᆫ', 'ᄂ', null),\n    // ㅊㅁ becomes ㄴㅁ\n    pronunciation.consonant_combination_rule('ᆾ', 'ᄆ', 'ᆫ', 'ᄆ', null),\n    // ㅌㄴ becomes ㄴㄴ\n    pronunciation.consonant_combination_rule('ᇀ', 'ᄂ', 'ᆫ', 'ᄂ', null),\n    // ㅌㅁ becomes ㄴㅁ\n    pronunciation.consonant_combination_rule('ᇀ', 'ᄆ', 'ᆫ', 'ᄆ', null),\n    //  ㅎㄴ becomes ㄴㄴ\n    pronunciation.consonant_combination_rule('ᇂ', 'ᄂ', 'ᆫ', 'ᄂ', null),\n    //  ㅎㅁ becomes ㄴㅁ\n    pronunciation.consonant_combination_rule('ᇂ', 'ᄆ', 'ᆫ', 'ᄆ', null),\n    //  ㅂㄴ becomes ㅁㄴ\n    pronunciation.consonant_combination_rule('ᆸ', 'ᄂ', 'ᆷ', 'ᄂ', null),\n    // ㅂㅁ becomes ㅁㅁ\n    pronunciation.consonant_combination_rule('ᆸ', 'ᄆ', 'ᆷ', 'ᄆ', null),\n    // ㅍㄴ becomes ㅁㄴ\n    pronunciation.consonant_combination_rule('ᇁ', 'ᄂ', 'ᆷ', 'ᄂ', null),\n    // ㅍㅁ becomes ㅁㅁ\n    pronunciation.consonant_combination_rule('ᇁ', 'ᄆ', 'ᆷ', 'ᄆ', null),\n    //  ㄱㅎ becomes ㅋ\n    pronunciation.consonant_combination_rule('ᆨ', 'ᄒ', null, 'ᄏ', null),\n    //  ㅎㄱ becomes ㅋ\n    pronunciation.consonant_combination_rule('ᇂ', 'ᄀ', null, 'ᄏ', null),\n    // ㅎㄷ becomes ㅌ\n    pronunciation.consonant_combination_rule('ᇂ', 'ᄃ', null, 'ᄐ', null),\n    // ㄷㅎ becomes ㅌ\n    pronunciation.consonant_combination_rule('ᆮ', 'ᄒ', null, 'ᄐ', null),\n    // ㅂㅎ becomes ㅍ\n    pronunciation.consonant_combination_rule('ᆸ', 'ᄒ', null, 'ᄑ', null),\n    // ㅎㅂ becomes ㅍ\n    pronunciation.consonant_combination_rule('ᇂ', 'ᄇ', null, 'ᄑ', null),\n    // ㅈㅎ becomes ㅊ\n    pronunciation.consonant_combination_rule('ᆽ', 'ᄒ', null, 'ᄎ', null),\n    // ㅎㅈ becomes ㅊ\n    pronunciation.consonant_combination_rule('ᇂ', 'ᄌ', null, 'ᄎ', null),\n    // ㅎㅅ becomes ㅆ\n    pronunciation.consonant_combination_rule('ᇂ', 'ᄉ', null, 'ᄊ', null),\n    //ㄷ이 becomes 지\n    pronunciation.consonant_combination_rule('ᆮ', 'ᄋ', null, 'ᄌ', 'ㅣ'),\n    //ㅌ이 becomes 치\n    pronunciation.consonant_combination_rule('ᇀ', 'ᄋ', null, 'ᄎ', 'ㅣ'),\n    //ㄱㄹ becomes ㅇㄴ\n    pronunciation.consonant_combination_rule('ᆨ', 'ᄅ', 'ᆼ', 'ᄂ', null),\n    //ㄴㄹ becomes ㄹㄹ // TODO: (not sure how to fix pronunciation) also sometimes ㄴㄴ\n    pronunciation.consonant_combination_rule('ᆫ', 'ᄅ', 'ᆯ', 'ᄅ', null),\n    // ㅁㄹ becomes ㅁㄴ\n    pronunciation.consonant_combination_rule('ᆷ', 'ᄅ', 'ᆷ', 'ᄂ', null),\n    // ㅇㄹ becomes ㅇㄴ\n    pronunciation.consonant_combination_rule('ᆼ', 'ᄅ', 'ᆼ', 'ᄂ', null),\n    // ㅂㄹ becomes ㅁㄴ\n    pronunciation.consonant_combination_rule('ᆸ', 'ᄅ', 'ᆷ', 'ᄂ', null),\n    // ㅅ ㅎ becomes ㅌ\n    pronunciation.consonant_combination_rule('ᆺ', 'ᄒ', null, 'ᄐ', null),\n    // 받침 followed by ㅇ: replace ㅇ with 받침 (use second 받침 if there are two). Otherwise, 받침 followed by consonant:\n    pronunciation.move_padchim_to_replace_eung,\n    //    * ㄱ, ㅋ: like ㄱ\n    //    * ㄷ, ㅅ, ㅈ, ㅊ, ㅌ, ㅎ: like ㄷ\n    //    * ㅂ, ㅍ: like ㅂ\n    // Double padchim rules\n    pronunciation.consonant_combination_rule('ᆱ', 'ᄋ', 'ᆯ', 'ᄆ', null),\n    pronunciation.consonant_combination_rule('ᆹ', 'ᄋ', 'ᆸ', 'ᄉ', null),\n    pronunciation.consonant_combination_rule('ᆱ', '*', 'ᆷ', '*', null),\n    pronunciation.consonant_combination_rule('ᆶ', 'ᄋ', null, 'ᄅ', null),\n    pronunciation.consonant_combination_rule('ᆶ', '*', 'ᆯ', '*', null),\n    pronunciation.consonant_combination_rule('ᆬ', 'ᄋ', 'ᆫ', 'ᄌ', null),\n    pronunciation.consonant_combination_rule('ᆬ', '*', 'ᆫ', '*', null),\n    // 학교 -> 학꾜\n    pronunciation.consonant_combination_rule('ᆨ', 'ᄀ', 'ᆨ', 'ᄁ', null),\n    // 밥솥-> 밥쏟\n    pronunciation.consonant_combination_rule('ᆸ', 'ᄉ', 'ᆸ', 'ᄊ', null),\n    // 있습니다 -> 이씀니다\n    pronunciation.consonant_combination_rule('ᆻ', 'ᄉ', null, 'ᄊ', null),\n    pronunciation.change_padchim_pronunciation('ᆮ', {'ᆺ': true, 'ᆻ': true, 'ᆽ': true, 'ᆾ': true, 'ᇀ': true, 'ᇂ': true}),\n    pronunciation.change_padchim_pronunciation('ᆸ', {'ᇁ': true}),\n    pronunciation.consonant_combination_rule('ᆮ', 'ᄃ', null, 'ᄄ'),\n    function (x, y) { return [x, y] }\n];\n\npronunciation.apply_rules = function(x, y) {\n    result = null;\n    pronunciation.merge_rules.forEach(function(rule) {\n        merge = rule(x, y);\n        if (merge && merge.length == 3) {\n            x = merge[0];\n            y = merge[1];\n            stop = merge[2];\n            if (stop) {\n                result = x + y;\n            }\n        } else if (merge) {\n            x = merge[0];\n            y = merge[1];\n        }\n    });\n    if (result) {\n        return result;\n    }\n    return x + y;\n};\n\npronunciation.get_pronunciation = function(word) {\n    return (word + String.fromCharCode(0)).split('').reduce(pronunciation.apply_rules).substring(0, word.length);\n};\n\n// Export functions to node\ntry {\n    for (f in pronunciation) {\n        exports[f] = pronunciation[f];\n    }\n} catch(e) {}\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$interopDefault","a","__esModule","default","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","$62537be26463873a$export$5fc85369385cf331","__value__","_length","length","hidden_padchim","original_padchim","charAt","result","String","prototype","apply","arguments","$62537be26463873a$export$559d605efc99d06a","toString","valueOf","Geulja","is_hangeul","character","charCodeAt","lead","fromCharCode","Math","floor","vowel","padchim_offset","padchim_character","padchim","p","join","lead_offset","vowel_offset","find_vowel_to_append","string","self","append","split","reverse","forEach","match","l","f","$18fe9b1b6336f500$export$aa00f474800863da","freeze","verb","adjective","$18fe9b1b6336f500$export$45aabe1f61557e96","present","past","te","adverb","volitional","passive","causative","potential","imperative","$820877bea407f5fe$export$ef83af2c8dc2c683","element","isDisplayNone","$820877bea407f5fe$var$toggleClassName","$820877bea407f5fe$export$877ee1ca1de102fd","isBackgroundNone","className","enabled","classList","add","remove","$820877bea407f5fe$export$4720c7d384d77b7d","array","Array","i","$68e612a17b33f886$export$1a0f0b5f10fa2085","always","onlyAfterAnswering","$68e612a17b33f886$var$nonConjugationSettings","$68e612a17b33f886$var$getNonConjugationSettingsSet","settings","Set","document","querySelectorAll","input","getAttribute","$68e612a17b33f886$export$f598fee9a8761f8f","inputs","getElementById","from","name","$68e612a17b33f886$export$100e28ec40f7f33c","$68e612a17b33f886$var$checkInputsAndToggleError","errorElement1","errorMessage","shouldBeChecked","$68e612a17b33f886$var$toggleError","backButton","textContent","disabled","$68e612a17b33f886$var$checkToEnableBackButton","error","getElementsByClassName","offsetWidth","offsetHeight","$68e612a17b33f886$var$doCheckboxesHaveValue","checked","$68e612a17b33f886$var$optionsGroupCheckError","groupElement","getElementsByTagName","$68e612a17b33f886$var$verbAndAdjCheckError","querySelector","$68e612a17b33f886$var$showHideUiOptions","triggeringInputsClass","showHideContainerId","inputsThatTrigger","showHideContainer","optionGroups","contains","optionGroup","$68e612a17b33f886$var$showHideVerbVariationOptions","$68e612a17b33f886$var$showHideAdjectiveVariationOptions","$68e612a17b33f886$var$showHideTranslationSubOptions","$68e612a17b33f886$export$7b52e59d7da90ebe","$68e612a17b33f886$export$3feb6355be08b5e5","emoji","$68e612a17b33f886$export$aee73cd064bb7d20","streak","$68e612a17b33f886$var$questionRemoveFiltersController","verbs","verb_present_indicative_informal_impolite","word","conjugation","type","formal","polite","verb_present_indicative_formal_impolite","verb_present_indicative_informal_polite","verb_present_indicative_formal_polite","verb_past_indicative_informal_impolite","verb_past_indicative_formal_impolite","verb_past_indicative_informal_polite","verb_past_indicative_formal_polite","show","$68e612a17b33f886$export$e91dd64c29cc7054","showInDom","makeTransparent","$68e612a17b33f886$var$setDisplayAndTransparency","$68e612a17b33f886$export$42fe1bab90555082","removeClass","transparentClass","$14c78789229899a8$exports","$14c78789229899a8$export$1b246651ba34c93e","$8ro1P","$666feef8e7b6d3b0$exports","$666feef8e7b6d3b0$var$hangeul","$666feef8e7b6d3b0$var$pronunciation","padchim_to_lead","move_padchim_to_replace_eung","x","y","substring","change_padchim_pronunciation","to","changers","consonant_combination_rule","x_padchim","y_lead","new_padchim","new_lead","y_vowel","skip_non_hangeul","merge_rules","apply_rules","rule","merge","stop","get_pronunciation","reduce","$14c78789229899a8$var$conjugator","f1","no_padchim_rule","characters","hangeul","vowel_contraction","vowel1","vowel2","new_vowel","trace","drop_l","reasons","push","drop_l_and_borrow_padchim","dont_insert_eh","insert_eh","lm_merge","response","output","both_regular_and_irregular","not_p_irregular","not_s_irregular","not_d_irregular","not_h_irregular","not_l_euh_irregular","not_l_irregular","after_last_space","infinitive","is_s_irregular","regular","is_l_irregular","is_l_euh_irregular","is_h_irregular","is_p_irregular","is_d_irregular","verb_types","verb_type","irregular_name","func","base","base2","new_infinitive","base3","declarative_present_informal_low","further_use","new_base","declarative_present_informal_high","declarative_present_formal_low","declarative_present_formal_high","past_base","ps","declarative_past_informal_low","declarative_past_informal_high","declarative_past_formal_low","declarative_past_formal_high","future_base","declarative_future_informal_low","declarative_future_informal_high","declarative_future_formal_low","declarative_future_formal_high","declarative_future_conditional_informal_low","declarative_future_conditional_informal_high","declarative_future_conditional_formal_low","declarative_future_conditional_formal_high","inquisitive_present_informal_low","inquisitive_present_informal_high","inquisitive_present_formal_low","inquisitive_present_formal_high","inquisitive_past_informal_low","inquisitive_past_informal_high","inquisitive_past_formal_low","inquisitive_past_formal_high","imperative_present_informal_low","imperative_present_informal_high","imperative_present_formal_low","imperative_present_formal_high","propositive_present_informal_low","propositive_present_informal_high","propositive_present_formal_low","propositive_present_formal_high","connective_if","connective_and","nominal_ing","conjugations","display_conjugations","callback","out","replace","conjugated","pron","romanized","romanization","romanize","reason","each_conjugation","r","conjugation_name","pronunciation","$2b6e161c9edcf319$var$isTouch","window","navigator","msMaxTouchPoints","$2b6e161c9edcf319$var$SCREENS","question","results","$2b6e161c9edcf319$var$changeVerbBoxFontColor","color","style","$2b6e161c9edcf319$var$loadNewWord","wordList","$2b6e161c9edcf319$var$pickRandomWord","random","j","probability","console","getRandomInt","$2b6e161c9edcf319$var$updateCurrentWord","verbHtml","wordJSON","replaceAll","innerHTML","eng","$2b6e161c9edcf319$var$conjugationInqueryFormatting","newString","createInqueryText","text","$2b6e161c9edcf319$var$Conjugation","constructor","validAnswers","conjugationType","affirmative","$2b6e161c9edcf319$var$Word","wasRecentlyIncorrect","$2b6e161c9edcf319$var$WordRecentlySeen","wasCorrect","$2b6e161c9edcf319$var$normalizeProbabilities","currentWords","totalProbability","$2b6e161c9edcf319$var$setAllProbabilitiesToValue","value","$2b6e161c9edcf319$export$bebac4be63daee5b","score","words","mainInput","initState","addEventListener","inputKeyPress","settingsButtonClicked","backButtonClicked","animationName","onKeyDown","bind","onTouchEnd","currentTarget","verbInputsWithVariations","verbInputsWithPolitenessOnly","concat","loadMainView","state","activeScreen","currentStreak0OnReset","loadWordOnReset","currentWord","currentWordList","furigana","furiganaTiming","translation","translationTiming","focus","keyCode","which","activeElement","target","stopPropagation","inputValue","blur","$2b6e161c9edcf319$var$updateStatusBoxes","entryText","statusBox","some","background","$2b6e161c9edcf319$var$typeToWordBoxColor","inputWasCorrect","$2b6e161c9edcf319$var$updateProbabilites","wordsRecentlySeenQueue","currentWordWasCorrect","roundsToWait","group","currentConjugation","getPartOfSpeech","filter","newProbability","dequeuedWord","shift","currentMinProb","$2b6e161c9edcf319$var$findMinProb","min","$2b6e161c9edcf319$var$addToScore","amount","maxScoreObjects","maxScoreIndex","max","current","parseInt","newAmount","localStorage","setItem","JSON","stringify","selectConditionalUiRadio","radioValue","alwaysRadioId","onlyAfterAnsweringRadioId","preventDefault","getConditionalUiSetting","radioName","visibleConjugationSettings","has","newMaxScoreIndex","flag","settingKeys","keys","applySettingsUpdateWordList","completeWordList","$2b6e161c9edcf319$var$createWordList","JSONWords","$2b6e161c9edcf319$var$getAllKoreanConjugations","allConjugations","tenses","formalities","politeness","mood","tense","formality","conjugator_function","conjugator_functions","flat","k","getItem","assign","parse","prunedSettings","filteredWords","verbRegex","verbOptions","el","test","adjectiveRegex","adjectiveOptions","questionRemoveFilters","adjectives","log"],"version":3,"file":"index.a2bfee2a.js.map"}